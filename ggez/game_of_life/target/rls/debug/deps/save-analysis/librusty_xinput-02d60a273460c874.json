{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0","program":"C:\\Users\\milla\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","rusty_xinput","C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=02d60a273460c874","-C","extra-filename=-02d60a273460c874","--out-dir","c:\\Users\\milla\\Desktop\\coding\\GameOfLife\\ggez\\game_of_life\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\milla\\Desktop\\coding\\GameOfLife\\ggez\\game_of_life\\target\\rls\\debug\\deps","--extern","lazy_static=c:\\Users\\milla\\Desktop\\coding\\GameOfLife\\ggez\\game_of_life\\target\\rls\\debug\\deps\\liblazy_static-c87288e501b1e270.rmeta","--extern","log=c:\\Users\\milla\\Desktop\\coding\\GameOfLife\\ggez\\game_of_life\\target\\rls\\debug\\deps\\liblog-9a028e3437069fe8.rmeta","--extern","winapi=c:\\Users\\milla\\Desktop\\coding\\GameOfLife\\ggez\\game_of_life\\target\\rls\\debug\\deps\\libwinapi-b4c6d0be733fedb9.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\milla\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\milla\\Desktop\\coding\\GameOfLife\\ggez\\game_of_life\\target\\rls\\debug\\deps\\librusty_xinput-02d60a273460c874.rmeta"},"prelude":{"crate_id":{"name":"rusty_xinput","disambiguator":[15656492075618209316,0]},"crate_root":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src","external_crates":[{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","num":1,"id":{"name":"std","disambiguator":[7379719041391505039,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","num":2,"id":{"name":"core","disambiguator":[5226548339696486402,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[15782588708828798436,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11258588358156983047,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6811839233127289238,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6798478037195512723,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12572258325454906649,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[598470195457823820,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7285820039251336650,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15004074270013699283,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","num":11,"id":{"name":"std_detect","disambiguator":[6568562326383462027,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[7532148157145861684,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[15660406440960571571,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","num":14,"id":{"name":"log","disambiguator":[17887447836488120659,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","num":15,"id":{"name":"cfg_if","disambiguator":[10169579803109374085,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","num":16,"id":{"name":"lazy_static","disambiguator":[10174962780488854296,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","num":17,"id":{"name":"winapi","disambiguator":[9520991498690992119,0]}}],"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":0,"byte_end":35965,"line_start":1,"line_end":1018,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":0,"byte_end":35965,"line_start":1,"line_end":1018,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":22},{"krate":0,"index":25},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":32},{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":42},{"krate":0,"index":45},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":56},{"krate":0,"index":59},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":73},{"krate":0,"index":162},{"krate":0,"index":172},{"krate":0,"index":75},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":174},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":182},{"krate":0,"index":79},{"krate":0,"index":84},{"krate":0,"index":87},{"krate":0,"index":185},{"krate":0,"index":196},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":201},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":92},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":99},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":104},{"krate":0,"index":210},{"krate":0,"index":220},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":225},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":235},{"krate":0,"index":247},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":252},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":131},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":262},{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":141},{"krate":0,"index":147},{"krate":0,"index":275},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":149},{"krate":0,"index":154},{"krate":0,"index":288},{"krate":0,"index":291},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":156},{"krate":0,"index":160},{"krate":0,"index":161}],"decl_id":null,"docs":" This module lets you load an XInput DLL and use it.","sig":null,"attributes":[{"value":"/ This module lets you load an XInput DLL and use it.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":0,"byte_end":55,"line_start":1,"line_end":1,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":56,"byte_end":59,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ ## How To Use This","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":60,"byte_end":82,"line_start":3,"line_end":3,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":83,"byte_end":86,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ 1) Call `dynamic_load_xinput()`. This will attempt to load in a DLL that","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":87,"byte_end":163,"line_start":5,"line_end":5,"column_start":1,"column_end":77}},{"value":"/    supports XInput. Note that the user might not have XInput installed, so","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":164,"byte_end":242,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/    be prepared to fall back to a keyboard/mouse if that happens.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":243,"byte_end":311,"line_start":7,"line_end":7,"column_start":1,"column_end":69}},{"value":"/ 2) Call `xinput_get_state(controller)` to get your data. Usually you do this","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":312,"byte_end":392,"line_start":8,"line_end":8,"column_start":1,"column_end":81}},{"value":"/    once at the start of each frame of the game. You can poll for controllers","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":393,"byte_end":473,"line_start":9,"line_end":9,"column_start":1,"column_end":81}},{"value":"/    0, 1, 2, or 3. If a controller is connected you'll get `Ok(data)`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":474,"byte_end":547,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/    Otherwise you'll get some sort of `Err` info.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":548,"byte_end":600,"line_start":11,"line_end":11,"column_start":1,"column_end":53}},{"value":"/ 3) Call `xinput_set_state(controller, left_speed, right_speed)` to set a","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":601,"byte_end":677,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/    rumble effect on the controller. As with `xinput_get_state`, you can","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":678,"byte_end":753,"line_start":13,"line_end":13,"column_start":1,"column_end":76}},{"value":"/    select slots 0, 1, 2 or 3, and missing controllers or out of bounds","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":754,"byte_end":828,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"/    selections will give an `Err` of some kind. Devices other than literal","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":829,"byte_end":906,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/    XBox 360 controllers have XInput drivers, but not all of them actually","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":907,"byte_end":984,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/    have rumble support, so this should be an extra not an essential.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":985,"byte_end":1057,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":1058,"byte_end":1061,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ If xinput isn't fully loaded, a call to get_state or set_state is still","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":1062,"byte_end":1137,"line_start":19,"line_end":19,"column_start":1,"column_end":76}},{"value":"/ entirely safe to perform, you'll just get an `Err`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":1138,"byte_end":1193,"line_start":20,"line_end":20,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":1194,"byte_end":1197,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Note that there are theoretically other XInput extras you might care about,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":1198,"byte_end":1277,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"/ but they're only available in Windows 8+ and I use Windows 7, so oh well.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":1278,"byte_end":1355,"line_start":23,"line_end":23,"column_start":1,"column_end":78}},{"value":"allow(non_upper_case_globals)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":1357,"byte_end":1390,"line_start":25,"line_end":25,"column_start":1,"column_end":34}},{"value":"warn(missing_docs)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":1391,"byte_end":1413,"line_start":26,"line_end":26,"column_start":1,"column_end":23}},{"value":"forbid(missing_debug_implementations)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":1414,"byte_end":1455,"line_start":27,"line_end":27,"column_start":1,"column_end":42}},{"value":"cfg(windows)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":1456,"byte_end":1472,"line_start":28,"line_end":28,"column_start":1,"column_end":17}}]},{"kind":"Struct","id":{"krate":0,"index":162},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":3034,"byte_end":3046,"line_start":76,"line_end":76,"column_start":12,"column_end":24},"name":"XInputHandle","qualname":"::XInputHandle","value":"XInputHandle {  }","parent":null,"children":[{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171}],"decl_id":null,"docs":" A handle to a loaded XInput DLL.\n","sig":null,"attributes":[{"value":"/ A handle to a loaded XInput DLL.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":2969,"byte_end":3005,"line_start":74,"line_end":74,"column_start":1,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":186},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":5114,"byte_end":5128,"line_start":141,"line_end":141,"column_start":3,"column_end":17},"name":"AlreadyLoading","qualname":"::XInputLoadingFailure::AlreadyLoading","value":"XInputLoadingFailure::AlreadyLoading","parent":{"krate":0,"index":185},"children":[],"decl_id":null,"docs":" The xinput system was already in the process of loading in some other\n thread. This attempt failed because of that, but that other attempt might\n still succeed.\n","sig":null,"attributes":[{"value":"/ The xinput system was already in the process of loading in some other","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":4921,"byte_end":4994,"line_start":137,"line_end":137,"column_start":3,"column_end":76}},{"value":"/ thread. This attempt failed because of that, but that other attempt might","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":4997,"byte_end":5074,"line_start":138,"line_end":138,"column_start":3,"column_end":80}},{"value":"/ still succeed.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":5077,"byte_end":5095,"line_start":139,"line_end":139,"column_start":3,"column_end":21}},{"value":"deprecated","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":5098,"byte_end":5111,"line_start":140,"line_end":140,"column_start":3,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":188},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":5231,"byte_end":5244,"line_start":144,"line_end":144,"column_start":3,"column_end":16},"name":"AlreadyActive","qualname":"::XInputLoadingFailure::AlreadyActive","value":"XInputLoadingFailure::AlreadyActive","parent":{"krate":0,"index":185},"children":[],"decl_id":null,"docs":" The xinput system was already active. A failure of this kind leaves the\n system active.\n","sig":null,"attributes":[{"value":"/ The xinput system was already active. A failure of this kind leaves the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":5132,"byte_end":5207,"line_start":142,"line_end":142,"column_start":3,"column_end":78}},{"value":"/ system active.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":5210,"byte_end":5228,"line_start":143,"line_end":143,"column_start":3,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":190},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":5390,"byte_end":5402,"line_start":147,"line_end":147,"column_start":3,"column_end":15},"name":"UnknownState","qualname":"::XInputLoadingFailure::UnknownState","value":"XInputLoadingFailure::UnknownState","parent":{"krate":0,"index":185},"children":[],"decl_id":null,"docs":" The system was not loading or active, but was in some unknown state. If\n you get this, it's probably a bug that you should report.\n","sig":null,"attributes":[{"value":"/ The system was not loading or active, but was in some unknown state. If","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":5248,"byte_end":5323,"line_start":145,"line_end":145,"column_start":3,"column_end":78}},{"value":"/ you get this, it's probably a bug that you should report.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":5326,"byte_end":5387,"line_start":146,"line_end":146,"column_start":3,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":192},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":5621,"byte_end":5626,"line_start":151,"line_end":151,"column_start":3,"column_end":8},"name":"NoDLL","qualname":"::XInputLoadingFailure::NoDLL","value":"XInputLoadingFailure::NoDLL","parent":{"krate":0,"index":185},"children":[],"decl_id":null,"docs":" No DLL for XInput could be found. This places the system back into an\n \"uninitialized\" status, and you could potentially try again later if the\n user fiddles with the program's DLL path or whatever.\n","sig":null,"attributes":[{"value":"/ No DLL for XInput could be found. This places the system back into an","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":5406,"byte_end":5479,"line_start":148,"line_end":148,"column_start":3,"column_end":76}},{"value":"/ \"uninitialized\" status, and you could potentially try again later if the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":5482,"byte_end":5558,"line_start":149,"line_end":149,"column_start":3,"column_end":79}},{"value":"/ user fiddles with the program's DLL path or whatever.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":5561,"byte_end":5618,"line_start":150,"line_end":150,"column_start":3,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":194},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":5936,"byte_end":5946,"line_start":156,"line_end":156,"column_start":3,"column_end":13},"name":"NoPointers","qualname":"::XInputLoadingFailure::NoPointers","value":"XInputLoadingFailure::NoPointers","parent":{"krate":0,"index":185},"children":[],"decl_id":null,"docs":" A DLL was found that matches one of the expected XInput DLL names, but it\n didn't contain both of the expected functions. This is probably a weird\n situation to find. Either way, the xinput status is set to \"uninitialized\"\n and as with the NoDLL error you could potentially try again.\n","sig":null,"attributes":[{"value":"/ A DLL was found that matches one of the expected XInput DLL names, but it","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":5630,"byte_end":5707,"line_start":152,"line_end":152,"column_start":3,"column_end":80}},{"value":"/ didn't contain both of the expected functions. This is probably a weird","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":5710,"byte_end":5785,"line_start":153,"line_end":153,"column_start":3,"column_end":78}},{"value":"/ situation to find. Either way, the xinput status is set to \"uninitialized\"","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":5788,"byte_end":5866,"line_start":154,"line_end":154,"column_start":3,"column_end":81}},{"value":"/ and as with the NoDLL error you could potentially try again.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":5869,"byte_end":5933,"line_start":155,"line_end":155,"column_start":3,"column_end":67}}]},{"kind":"Enum","id":{"krate":0,"index":185},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":4896,"byte_end":4916,"line_start":136,"line_end":136,"column_start":10,"column_end":30},"name":"XInputLoadingFailure","qualname":"::XInputLoadingFailure","value":"pub enum XInputLoadingFailure {\n    AlreadyLoading,\n    AlreadyActive,\n    UnknownState,\n    NoDLL,\n    NoPointers,\n}","parent":null,"children":[{"krate":0,"index":186},{"krate":0,"index":188},{"krate":0,"index":190},{"krate":0,"index":192},{"krate":0,"index":194}],"decl_id":null,"docs":" The ways that a dynamic load of XInput can fail.\n","sig":null,"attributes":[{"value":"/ The ways that a dynamic load of XInput can fail.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":4783,"byte_end":4835,"line_start":134,"line_end":134,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":6601,"byte_end":6613,"line_start":178,"line_end":178,"column_start":10,"column_end":22},"name":"load_default","qualname":"<XInputHandle>::load_default","value":"pub fn load_default() -> Result<XInputHandle, XInputLoadingFailure>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to dynamically load an XInput DLL and get the function pointers.","sig":null,"attributes":[{"value":"/ Attempts to dynamically load an XInput DLL and get the function pointers.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":5973,"byte_end":6050,"line_start":160,"line_end":160,"column_start":3,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":6053,"byte_end":6056,"line_start":161,"line_end":161,"column_start":3,"column_end":6}},{"value":"/ # Failure","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":6059,"byte_end":6072,"line_start":162,"line_end":162,"column_start":3,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":6075,"byte_end":6078,"line_start":163,"line_end":163,"column_start":3,"column_end":6}},{"value":"/ This can fail in a few ways, as explained in the `XInputLoadingFailure`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":6081,"byte_end":6156,"line_start":164,"line_end":164,"column_start":3,"column_end":78}},{"value":"/ type. The most likely failure case is that the user's system won't have the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":6159,"byte_end":6238,"line_start":165,"line_end":165,"column_start":3,"column_end":82}},{"value":"/ required DLL, in which case you should probably allow them to play with just","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":6241,"byte_end":6321,"line_start":166,"line_end":166,"column_start":3,"column_end":83}},{"value":"/ a keyboard/mouse instead.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":6324,"byte_end":6353,"line_start":167,"line_end":167,"column_start":3,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":6356,"byte_end":6359,"line_start":168,"line_end":168,"column_start":3,"column_end":6}},{"value":"/ # Current DLL Names","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":6362,"byte_end":6385,"line_start":169,"line_end":169,"column_start":3,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":6388,"byte_end":6391,"line_start":170,"line_end":170,"column_start":3,"column_end":6}},{"value":"/ Currently the following DLL names are searched for in this order:","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":6394,"byte_end":6463,"line_start":171,"line_end":171,"column_start":3,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":6466,"byte_end":6469,"line_start":172,"line_end":172,"column_start":3,"column_end":6}},{"value":"/ * `xinput1_4.dll`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":6472,"byte_end":6493,"line_start":173,"line_end":173,"column_start":3,"column_end":24}},{"value":"/ * `xinput1_3.dll`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":6496,"byte_end":6517,"line_start":174,"line_end":174,"column_start":3,"column_end":24}},{"value":"/ * `xinput1_2.dll`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":6520,"byte_end":6541,"line_start":175,"line_end":175,"column_start":3,"column_end":24}},{"value":"/ * `xinput1_1.dll`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":6544,"byte_end":6565,"line_start":176,"line_end":176,"column_start":3,"column_end":24}},{"value":"/ * `xinput9_1_0.dll`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":6568,"byte_end":6591,"line_start":177,"line_end":177,"column_start":3,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":7209,"byte_end":7213,"line_start":196,"line_end":196,"column_start":10,"column_end":14},"name":"load","qualname":"<XInputHandle>::load","value":"pub fn load<S: AsRef<str>>(S) -> Result<XInputHandle, XInputLoadingFailure>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to load a specific XInput DLL and get the function pointers.\n","sig":null,"attributes":[{"value":"/ Attempt to load a specific XInput DLL and get the function pointers.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":7127,"byte_end":7199,"line_start":195,"line_end":195,"column_start":3,"column_end":75}}]},{"kind":"Function","id":{"krate":0,"index":96},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":14377,"byte_end":14396,"line_start":383,"line_end":383,"column_start":8,"column_end":27},"name":"dynamic_load_xinput","qualname":"::dynamic_load_xinput","value":"pub fn dynamic_load_xinput() -> Result<(), XInputLoadingFailure>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to dynamically load an XInput DLL and get the function pointers.","sig":null,"attributes":[{"value":"/ Attempts to dynamically load an XInput DLL and get the function pointers.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":13324,"byte_end":13401,"line_start":355,"line_end":355,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":13402,"byte_end":13405,"line_start":356,"line_end":356,"column_start":1,"column_end":4}},{"value":"/ This operation is thread-safe and can be performed at any time. If xinput","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":13406,"byte_end":13483,"line_start":357,"line_end":357,"column_start":1,"column_end":78}},{"value":"/ hasn't been loaded yet, or if there was a failed load attempt, then","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":13484,"byte_end":13555,"line_start":358,"line_end":358,"column_start":1,"column_end":72}},{"value":"/ `xinput_get_state` and `xinput_set_state` will safety return an `Err` value","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":13556,"byte_end":13635,"line_start":359,"line_end":359,"column_start":1,"column_end":80}},{"value":"/ to that effect.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":13636,"byte_end":13655,"line_start":360,"line_end":360,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":13656,"byte_end":13659,"line_start":361,"line_end":361,"column_start":1,"column_end":4}},{"value":"/ There's no way provided to unload XInput once it's been loaded, because that","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":13660,"byte_end":13740,"line_start":362,"line_end":362,"column_start":1,"column_end":81}},{"value":"/ makes the normal operation a little faster. Why would you want to unload it","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":13741,"byte_end":13820,"line_start":363,"line_end":363,"column_start":1,"column_end":80}},{"value":"/ anyway? Don't be silly.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":13821,"byte_end":13848,"line_start":364,"line_end":364,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":13849,"byte_end":13852,"line_start":365,"line_end":365,"column_start":1,"column_end":4}},{"value":"/ # Failure","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":13853,"byte_end":13866,"line_start":366,"line_end":366,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":13867,"byte_end":13870,"line_start":367,"line_end":367,"column_start":1,"column_end":4}},{"value":"/ This can fail in a few ways, as explained in the `XInputLoadingFailure`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":13871,"byte_end":13946,"line_start":368,"line_end":368,"column_start":1,"column_end":76}},{"value":"/ type. The most likely failure case is that the user's system won't have the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":13947,"byte_end":14026,"line_start":369,"line_end":369,"column_start":1,"column_end":80}},{"value":"/ required DLL, in which case you should probably allow them to play with just","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":14027,"byte_end":14107,"line_start":370,"line_end":370,"column_start":1,"column_end":81}},{"value":"/ a keyboard/mouse instead.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":14108,"byte_end":14137,"line_start":371,"line_end":371,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":14138,"byte_end":14141,"line_start":372,"line_end":372,"column_start":1,"column_end":4}},{"value":"/ # Current DLL Names","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":14142,"byte_end":14165,"line_start":373,"line_end":373,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":14166,"byte_end":14169,"line_start":374,"line_end":374,"column_start":1,"column_end":4}},{"value":"/ Currently the following DLL names are searched for in this order:","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":14170,"byte_end":14239,"line_start":375,"line_end":375,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":14240,"byte_end":14243,"line_start":376,"line_end":376,"column_start":1,"column_end":4}},{"value":"/ * `xinput9_1_0.dll`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":14244,"byte_end":14267,"line_start":377,"line_end":377,"column_start":1,"column_end":24}},{"value":"/ * `xinput1_4.dll`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":14268,"byte_end":14289,"line_start":378,"line_end":378,"column_start":1,"column_end":22}},{"value":"/ * `xinput1_3.dll`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":14290,"byte_end":14311,"line_start":379,"line_end":379,"column_start":1,"column_end":22}},{"value":"/ * `xinput1_2.dll`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":14312,"byte_end":14333,"line_start":380,"line_end":380,"column_start":1,"column_end":22}},{"value":"/ * `xinput1_1.dll`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":14334,"byte_end":14355,"line_start":381,"line_end":381,"column_start":1,"column_end":22}},{"value":"deprecated","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":14356,"byte_end":14369,"line_start":382,"line_end":382,"column_start":1,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":97},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":15359,"byte_end":15370,"line_start":406,"line_end":406,"column_start":12,"column_end":23},"name":"XInputState","qualname":"::XInputState","value":"XInputState { raw }","parent":null,"children":[{"krate":0,"index":98}],"decl_id":null,"docs":" This wraps an `XINPUT_STATE` value and provides a more rusty (read-only)\n interface to the data it contains.","sig":null,"attributes":[{"value":"/ This wraps an `XINPUT_STATE` value and provides a more rusty (read-only)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":14523,"byte_end":14599,"line_start":391,"line_end":391,"column_start":1,"column_end":77}},{"value":"/ interface to the data it contains.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":14600,"byte_end":14638,"line_start":392,"line_end":392,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":14639,"byte_end":14642,"line_start":393,"line_end":393,"column_start":1,"column_end":4}},{"value":"/ All three major game companies use different names for most of the buttons,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":14643,"byte_end":14722,"line_start":394,"line_end":394,"column_start":1,"column_end":80}},{"value":"/ so the docs for each button method list out what each of the major companies","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":14723,"byte_end":14803,"line_start":395,"line_end":395,"column_start":1,"column_end":81}},{"value":"/ call that button. To the driver it's all the same, it's just however you","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":14804,"byte_end":14880,"line_start":396,"line_end":396,"column_start":1,"column_end":77}},{"value":"/ want to think of them.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":14881,"byte_end":14907,"line_start":397,"line_end":397,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":14908,"byte_end":14911,"line_start":398,"line_end":398,"column_start":1,"column_end":4}},{"value":"/ If sequential calls to `xinput_get_state` for a given controller slot have","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":14912,"byte_end":14990,"line_start":399,"line_end":399,"column_start":1,"column_end":79}},{"value":"/ the same packet number then the controller state has not changed since the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":14991,"byte_end":15069,"line_start":400,"line_end":400,"column_start":1,"column_end":79}},{"value":"/ last call. The `PartialEq` and `Eq` implementations for this wrapper type","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":15070,"byte_end":15147,"line_start":401,"line_end":401,"column_start":1,"column_end":78}},{"value":"/ reflect that. The exact value of the packet number is unimportant.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":15148,"byte_end":15218,"line_start":402,"line_end":402,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":15219,"byte_end":15222,"line_start":403,"line_end":403,"column_start":1,"column_end":4}},{"value":"/ If you want to do something that the rust wrapper doesn't support, just use","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":15223,"byte_end":15302,"line_start":404,"line_end":404,"column_start":1,"column_end":80}},{"value":"/ the raw field to get at the inner value.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":15303,"byte_end":15347,"line_start":405,"line_end":405,"column_start":1,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":98},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":15415,"byte_end":15418,"line_start":408,"line_end":408,"column_start":7,"column_end":10},"name":"raw","qualname":"::XInputState::raw","value":"winapi::um::xinput::XINPUT_STATE","parent":{"krate":0,"index":97},"children":[],"decl_id":null,"docs":" The raw value we're wrapping.\n","sig":null,"attributes":[{"value":"/ The raw value we're wrapping.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":15375,"byte_end":15408,"line_start":407,"line_end":407,"column_start":3,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":16232,"byte_end":16244,"line_start":436,"line_end":436,"column_start":10,"column_end":22},"name":"north_button","qualname":"<XInputState>::north_button","value":"pub fn north_button(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The north button of the action button group.","sig":null,"attributes":[{"value":"/ The north button of the action button group.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":16090,"byte_end":16138,"line_start":430,"line_end":430,"column_start":3,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":16141,"byte_end":16144,"line_start":431,"line_end":431,"column_start":3,"column_end":6}},{"value":"/ * Nintendo: X","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":16147,"byte_end":16164,"line_start":432,"line_end":432,"column_start":3,"column_end":20}},{"value":"/ * Playstation: Triangle","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":16167,"byte_end":16194,"line_start":433,"line_end":433,"column_start":3,"column_end":30}},{"value":"/ * XBox: Y","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":16197,"byte_end":16210,"line_start":434,"line_end":434,"column_start":3,"column_end":16}},{"value":"inline","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":16213,"byte_end":16222,"line_start":435,"line_end":435,"column_start":3,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":16458,"byte_end":16470,"line_start":446,"line_end":446,"column_start":10,"column_end":22},"name":"south_button","qualname":"<XInputState>::south_button","value":"pub fn south_button(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The south button of the action button group.","sig":null,"attributes":[{"value":"/ The south button of the action button group.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":16323,"byte_end":16371,"line_start":440,"line_end":440,"column_start":3,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":16374,"byte_end":16377,"line_start":441,"line_end":441,"column_start":3,"column_end":6}},{"value":"/ * Nintendo: B","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":16380,"byte_end":16397,"line_start":442,"line_end":442,"column_start":3,"column_end":20}},{"value":"/ * Playstation: X","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":16400,"byte_end":16420,"line_start":443,"line_end":443,"column_start":3,"column_end":23}},{"value":"/ * XBox: A","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":16423,"byte_end":16436,"line_start":444,"line_end":444,"column_start":3,"column_end":16}},{"value":"inline","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":16439,"byte_end":16448,"line_start":445,"line_end":445,"column_start":3,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":16688,"byte_end":16699,"line_start":456,"line_end":456,"column_start":10,"column_end":21},"name":"east_button","qualname":"<XInputState>::east_button","value":"pub fn east_button(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The east button of the action button group.","sig":null,"attributes":[{"value":"/ The east button of the action button group.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":16549,"byte_end":16596,"line_start":450,"line_end":450,"column_start":3,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":16599,"byte_end":16602,"line_start":451,"line_end":451,"column_start":3,"column_end":6}},{"value":"/ * Nintendo: A","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":16605,"byte_end":16622,"line_start":452,"line_end":452,"column_start":3,"column_end":20}},{"value":"/ * Playstation: Circle","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":16625,"byte_end":16650,"line_start":453,"line_end":453,"column_start":3,"column_end":28}},{"value":"/ * XBox: B","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":16653,"byte_end":16666,"line_start":454,"line_end":454,"column_start":3,"column_end":16}},{"value":"inline","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":16669,"byte_end":16678,"line_start":455,"line_end":455,"column_start":3,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":16917,"byte_end":16928,"line_start":466,"line_end":466,"column_start":10,"column_end":21},"name":"west_button","qualname":"<XInputState>::west_button","value":"pub fn west_button(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The west button of the action button group.","sig":null,"attributes":[{"value":"/ The west button of the action button group.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":16778,"byte_end":16825,"line_start":460,"line_end":460,"column_start":3,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":16828,"byte_end":16831,"line_start":461,"line_end":461,"column_start":3,"column_end":6}},{"value":"/ * Nintendo: Y","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":16834,"byte_end":16851,"line_start":462,"line_end":462,"column_start":3,"column_end":20}},{"value":"/ * Playstation: Square","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":16854,"byte_end":16879,"line_start":463,"line_end":463,"column_start":3,"column_end":28}},{"value":"/ * XBox: X","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":16882,"byte_end":16895,"line_start":464,"line_end":464,"column_start":3,"column_end":16}},{"value":"inline","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":16898,"byte_end":16907,"line_start":465,"line_end":465,"column_start":3,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":17070,"byte_end":17078,"line_start":472,"line_end":472,"column_start":10,"column_end":18},"name":"arrow_up","qualname":"<XInputState>::arrow_up","value":"pub fn arrow_up(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The up button on the directional pad.\n","sig":null,"attributes":[{"value":"/ The up button on the directional pad.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":17007,"byte_end":17048,"line_start":470,"line_end":470,"column_start":3,"column_end":44}},{"value":"inline","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":17051,"byte_end":17060,"line_start":471,"line_end":471,"column_start":3,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":17228,"byte_end":17238,"line_start":478,"line_end":478,"column_start":10,"column_end":20},"name":"arrow_down","qualname":"<XInputState>::arrow_down","value":"pub fn arrow_down(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The down button on the directional pad.\n","sig":null,"attributes":[{"value":"/ The down button on the directional pad.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":17163,"byte_end":17206,"line_start":476,"line_end":476,"column_start":3,"column_end":46}},{"value":"inline","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":17209,"byte_end":17218,"line_start":477,"line_end":477,"column_start":3,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":17390,"byte_end":17400,"line_start":484,"line_end":484,"column_start":10,"column_end":20},"name":"arrow_left","qualname":"<XInputState>::arrow_left","value":"pub fn arrow_left(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The left button on the directional pad.\n","sig":null,"attributes":[{"value":"/ The left button on the directional pad.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":17325,"byte_end":17368,"line_start":482,"line_end":482,"column_start":3,"column_end":46}},{"value":"inline","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":17371,"byte_end":17380,"line_start":483,"line_end":483,"column_start":3,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":17553,"byte_end":17564,"line_start":490,"line_end":490,"column_start":10,"column_end":21},"name":"arrow_right","qualname":"<XInputState>::arrow_right","value":"pub fn arrow_right(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The right button on the directional pad.\n","sig":null,"attributes":[{"value":"/ The right button on the directional pad.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":17487,"byte_end":17531,"line_start":488,"line_end":488,"column_start":3,"column_end":47}},{"value":"inline","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":17534,"byte_end":17543,"line_start":489,"line_end":489,"column_start":3,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":17809,"byte_end":17821,"line_start":500,"line_end":500,"column_start":10,"column_end":22},"name":"start_button","qualname":"<XInputState>::start_button","value":"pub fn start_button(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The \"start\" button.","sig":null,"attributes":[{"value":"/ The \"start\" button.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":17652,"byte_end":17675,"line_start":494,"line_end":494,"column_start":3,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":17678,"byte_end":17681,"line_start":495,"line_end":495,"column_start":3,"column_end":6}},{"value":"/ * Nintendo: Start (NES / SNES), '+' (Pro Controller)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":17684,"byte_end":17740,"line_start":496,"line_end":496,"column_start":3,"column_end":59}},{"value":"/ * Playstation: Start","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":17743,"byte_end":17767,"line_start":497,"line_end":497,"column_start":3,"column_end":27}},{"value":"/ * XBox: Start","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":17770,"byte_end":17787,"line_start":498,"line_end":498,"column_start":3,"column_end":20}},{"value":"inline","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":17790,"byte_end":17799,"line_start":499,"line_end":499,"column_start":3,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":18065,"byte_end":18078,"line_start":510,"line_end":510,"column_start":10,"column_end":23},"name":"select_button","qualname":"<XInputState>::select_button","value":"pub fn select_button(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The \"not start\" button.","sig":null,"attributes":[{"value":"/ The \"not start\" button.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":17904,"byte_end":17931,"line_start":504,"line_end":504,"column_start":3,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":17934,"byte_end":17937,"line_start":505,"line_end":505,"column_start":3,"column_end":6}},{"value":"/ * Nintendo: Select (NES / NES), '-' (Pro Controller)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":17940,"byte_end":17996,"line_start":506,"line_end":506,"column_start":3,"column_end":59}},{"value":"/ * Playstation: Select","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":17999,"byte_end":18024,"line_start":507,"line_end":507,"column_start":3,"column_end":28}},{"value":"/ * XBox: Back","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":18027,"byte_end":18043,"line_start":508,"line_end":508,"column_start":3,"column_end":19}},{"value":"inline","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":18046,"byte_end":18055,"line_start":509,"line_end":509,"column_start":3,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":18284,"byte_end":18297,"line_start":520,"line_end":520,"column_start":10,"column_end":23},"name":"left_shoulder","qualname":"<XInputState>::left_shoulder","value":"pub fn left_shoulder(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The upper left shoulder button.","sig":null,"attributes":[{"value":"/ The upper left shoulder button.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":18160,"byte_end":18195,"line_start":514,"line_end":514,"column_start":3,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":18198,"byte_end":18201,"line_start":515,"line_end":515,"column_start":3,"column_end":6}},{"value":"/ * Nintendo: L","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":18204,"byte_end":18221,"line_start":516,"line_end":516,"column_start":3,"column_end":20}},{"value":"/ * Playstation: L1","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":18224,"byte_end":18245,"line_start":517,"line_end":517,"column_start":3,"column_end":24}},{"value":"/ * XBox: LB","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":18248,"byte_end":18262,"line_start":518,"line_end":518,"column_start":3,"column_end":17}},{"value":"inline","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":18265,"byte_end":18274,"line_start":519,"line_end":519,"column_start":3,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":18513,"byte_end":18527,"line_start":530,"line_end":530,"column_start":10,"column_end":24},"name":"right_shoulder","qualname":"<XInputState>::right_shoulder","value":"pub fn right_shoulder(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The upper right shoulder button.","sig":null,"attributes":[{"value":"/ The upper right shoulder button.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":18388,"byte_end":18424,"line_start":524,"line_end":524,"column_start":3,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":18427,"byte_end":18430,"line_start":525,"line_end":525,"column_start":3,"column_end":6}},{"value":"/ * Nintendo: R","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":18433,"byte_end":18450,"line_start":526,"line_end":526,"column_start":3,"column_end":20}},{"value":"/ * Playstation: R1","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":18453,"byte_end":18474,"line_start":527,"line_end":527,"column_start":3,"column_end":24}},{"value":"/ * XBox: RB","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":18477,"byte_end":18491,"line_start":528,"line_end":528,"column_start":3,"column_end":17}},{"value":"inline","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":18494,"byte_end":18503,"line_start":529,"line_end":529,"column_start":3,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":117},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":18696,"byte_end":18713,"line_start":535,"line_end":535,"column_start":13,"column_end":30},"name":"TRIGGER_THRESHOLD","qualname":"::XInputState::TRIGGER_THRESHOLD","value":"u8","parent":{"krate":0,"index":104},"children":[],"decl_id":null,"docs":" The default threshold to count a trigger as being \"pressed\".\n","sig":null,"attributes":[{"value":"/ The default threshold to count a trigger as being \"pressed\".","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":18619,"byte_end":18683,"line_start":534,"line_end":534,"column_start":3,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":19012,"byte_end":19024,"line_start":545,"line_end":545,"column_start":10,"column_end":22},"name":"left_trigger","qualname":"<XInputState>::left_trigger","value":"pub fn left_trigger(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" The lower left shoulder trigger. If you want to use this as a simple\n boolean it is suggested that you compare it to the `TRIGGER_THRESHOLD`\n constant.","sig":null,"attributes":[{"value":"/ The lower left shoulder trigger. If you want to use this as a simple","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":18757,"byte_end":18829,"line_start":537,"line_end":537,"column_start":3,"column_end":75}},{"value":"/ boolean it is suggested that you compare it to the `TRIGGER_THRESHOLD`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":18832,"byte_end":18906,"line_start":538,"line_end":538,"column_start":3,"column_end":77}},{"value":"/ constant.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":18909,"byte_end":18922,"line_start":539,"line_end":539,"column_start":3,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":18925,"byte_end":18928,"line_start":540,"line_end":540,"column_start":3,"column_end":6}},{"value":"/ * Nintendo: ZL","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":18931,"byte_end":18949,"line_start":541,"line_end":541,"column_start":3,"column_end":21}},{"value":"/ * Playstation: L2","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":18952,"byte_end":18973,"line_start":542,"line_end":542,"column_start":3,"column_end":24}},{"value":"/ * XBox: LT","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":18976,"byte_end":18990,"line_start":543,"line_end":543,"column_start":3,"column_end":17}},{"value":"inline","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":18993,"byte_end":19002,"line_start":544,"line_end":544,"column_start":3,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":19337,"byte_end":19350,"line_start":557,"line_end":557,"column_start":10,"column_end":23},"name":"right_trigger","qualname":"<XInputState>::right_trigger","value":"pub fn right_trigger(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" The lower right shoulder trigger. If you want to use this as a simple\n boolean it is suggested that you compare it to the `TRIGGER_THRESHOLD`\n constant.","sig":null,"attributes":[{"value":"/ The lower right shoulder trigger. If you want to use this as a simple","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":19081,"byte_end":19154,"line_start":549,"line_end":549,"column_start":3,"column_end":76}},{"value":"/ boolean it is suggested that you compare it to the `TRIGGER_THRESHOLD`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":19157,"byte_end":19231,"line_start":550,"line_end":550,"column_start":3,"column_end":77}},{"value":"/ constant.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":19234,"byte_end":19247,"line_start":551,"line_end":551,"column_start":3,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":19250,"byte_end":19253,"line_start":552,"line_end":552,"column_start":3,"column_end":6}},{"value":"/ * Nintendo: ZR","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":19256,"byte_end":19274,"line_start":553,"line_end":553,"column_start":3,"column_end":21}},{"value":"/ * Playstation: R2","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":19277,"byte_end":19298,"line_start":554,"line_end":554,"column_start":3,"column_end":24}},{"value":"/ * XBox: RT","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":19301,"byte_end":19315,"line_start":555,"line_end":555,"column_start":3,"column_end":17}},{"value":"inline","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":19318,"byte_end":19327,"line_start":556,"line_end":556,"column_start":3,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":19572,"byte_end":19589,"line_start":567,"line_end":567,"column_start":10,"column_end":27},"name":"left_trigger_bool","qualname":"<XInputState>::left_trigger_bool","value":"pub fn left_trigger_bool(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The lower left shoulder trigger as a bool using the default threshold.","sig":null,"attributes":[{"value":"/ The lower left shoulder trigger as a bool using the default threshold.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":19408,"byte_end":19482,"line_start":561,"line_end":561,"column_start":3,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":19485,"byte_end":19488,"line_start":562,"line_end":562,"column_start":3,"column_end":6}},{"value":"/ * Nintendo: ZL","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":19491,"byte_end":19509,"line_start":563,"line_end":563,"column_start":3,"column_end":21}},{"value":"/ * Playstation: L2","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":19512,"byte_end":19533,"line_start":564,"line_end":564,"column_start":3,"column_end":24}},{"value":"/ * XBox: LT","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":19536,"byte_end":19550,"line_start":565,"line_end":565,"column_start":3,"column_end":17}},{"value":"inline","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":19553,"byte_end":19562,"line_start":566,"line_end":566,"column_start":3,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":19837,"byte_end":19855,"line_start":577,"line_end":577,"column_start":10,"column_end":28},"name":"right_trigger_bool","qualname":"<XInputState>::right_trigger_bool","value":"pub fn right_trigger_bool(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The lower right shoulder trigger as a bool using the default threshold.","sig":null,"attributes":[{"value":"/ The lower right shoulder trigger as a bool using the default threshold.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":19672,"byte_end":19747,"line_start":571,"line_end":571,"column_start":3,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":19750,"byte_end":19753,"line_start":572,"line_end":572,"column_start":3,"column_end":6}},{"value":"/ * Nintendo: ZR","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":19756,"byte_end":19774,"line_start":573,"line_end":573,"column_start":3,"column_end":21}},{"value":"/ * Playstation: R2","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":19777,"byte_end":19798,"line_start":574,"line_end":574,"column_start":3,"column_end":24}},{"value":"/ * XBox: RT","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":19801,"byte_end":19815,"line_start":575,"line_end":575,"column_start":3,"column_end":17}},{"value":"inline","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":19818,"byte_end":19827,"line_start":576,"line_end":576,"column_start":3,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":20077,"byte_end":20094,"line_start":587,"line_end":587,"column_start":10,"column_end":27},"name":"left_thumb_button","qualname":"<XInputState>::left_thumb_button","value":"pub fn left_thumb_button(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The left thumb stick being pressed inward.","sig":null,"attributes":[{"value":"/ The left thumb stick being pressed inward.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":19939,"byte_end":19985,"line_start":581,"line_end":581,"column_start":3,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":19988,"byte_end":19991,"line_start":582,"line_end":582,"column_start":3,"column_end":6}},{"value":"/ * Nintendo: (L)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":19994,"byte_end":20013,"line_start":583,"line_end":583,"column_start":3,"column_end":22}},{"value":"/ * Playstation: L3","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":20016,"byte_end":20037,"line_start":584,"line_end":584,"column_start":3,"column_end":24}},{"value":"/ * XBox: (L)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":20040,"byte_end":20055,"line_start":585,"line_end":585,"column_start":3,"column_end":18}},{"value":"inline","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":20058,"byte_end":20067,"line_start":586,"line_end":586,"column_start":3,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":20321,"byte_end":20339,"line_start":597,"line_end":597,"column_start":10,"column_end":28},"name":"right_thumb_button","qualname":"<XInputState>::right_thumb_button","value":"pub fn right_thumb_button(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The right thumb stick being pressed inward.","sig":null,"attributes":[{"value":"/ The right thumb stick being pressed inward.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":20182,"byte_end":20229,"line_start":591,"line_end":591,"column_start":3,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":20232,"byte_end":20235,"line_start":592,"line_end":592,"column_start":3,"column_end":6}},{"value":"/ * Nintendo: (R)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":20238,"byte_end":20257,"line_start":593,"line_end":593,"column_start":3,"column_end":22}},{"value":"/ * Playstation: R3","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":20260,"byte_end":20281,"line_start":594,"line_end":594,"column_start":3,"column_end":24}},{"value":"/ * XBox: (R)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":20284,"byte_end":20299,"line_start":595,"line_end":595,"column_start":3,"column_end":18}},{"value":"inline","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":20302,"byte_end":20311,"line_start":596,"line_end":596,"column_start":3,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":124},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":20510,"byte_end":20529,"line_start":602,"line_end":602,"column_start":13,"column_end":32},"name":"LEFT_STICK_DEADZONE","qualname":"::XInputState::LEFT_STICK_DEADZONE","value":"i16","parent":{"krate":0,"index":104},"children":[],"decl_id":null,"docs":" The suggested default deadzone for use with the left thumb stick.\n","sig":null,"attributes":[{"value":"/ The suggested default deadzone for use with the left thumb stick.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":20428,"byte_end":20497,"line_start":601,"line_end":601,"column_start":3,"column_end":72}}]},{"kind":"Const","id":{"krate":0,"index":125},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":20659,"byte_end":20679,"line_start":605,"line_end":605,"column_start":13,"column_end":33},"name":"RIGHT_STICK_DEADZONE","qualname":"::XInputState::RIGHT_STICK_DEADZONE","value":"i16","parent":{"krate":0,"index":104},"children":[],"decl_id":null,"docs":" The suggested default deadzone for use with the right thumb stick.\n","sig":null,"attributes":[{"value":"/ The suggested default deadzone for use with the right thumb stick.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":20576,"byte_end":20646,"line_start":604,"line_end":604,"column_start":3,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":20848,"byte_end":20862,"line_start":611,"line_end":611,"column_start":10,"column_end":24},"name":"left_stick_raw","qualname":"<XInputState>::left_stick_raw","value":"pub fn left_stick_raw(&Self) -> (i16, i16)","parent":null,"children":[],"decl_id":null,"docs":" The left stick raw value.","sig":null,"attributes":[{"value":"/ The left stick raw value.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":20727,"byte_end":20756,"line_start":607,"line_end":607,"column_start":3,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":20759,"byte_end":20762,"line_start":608,"line_end":608,"column_start":3,"column_end":6}},{"value":"/ Positive values are to the right (X-axis) or up (Y-axis).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":20765,"byte_end":20826,"line_start":609,"line_end":609,"column_start":3,"column_end":64}},{"value":"inline","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":20829,"byte_end":20838,"line_start":610,"line_end":610,"column_start":3,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":21074,"byte_end":21089,"line_start":619,"line_end":619,"column_start":10,"column_end":25},"name":"right_stick_raw","qualname":"<XInputState>::right_stick_raw","value":"pub fn right_stick_raw(&Self) -> (i16, i16)","parent":null,"children":[],"decl_id":null,"docs":" The right stick raw value.","sig":null,"attributes":[{"value":"/ The right stick raw value.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":20952,"byte_end":20982,"line_start":615,"line_end":615,"column_start":3,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":20985,"byte_end":20988,"line_start":616,"line_end":616,"column_start":3,"column_end":6}},{"value":"/ Positive values are to the right (X-axis) or up (Y-axis).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":20991,"byte_end":21052,"line_start":617,"line_end":617,"column_start":3,"column_end":64}},{"value":"inline","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":21055,"byte_end":21064,"line_start":618,"line_end":618,"column_start":3,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":21318,"byte_end":21339,"line_start":627,"line_end":627,"column_start":10,"column_end":31},"name":"left_stick_normalized","qualname":"<XInputState>::left_stick_normalized","value":"pub fn left_stick_normalized(&Self) -> (f32, f32)","parent":null,"children":[],"decl_id":null,"docs":" The left stick value normalized with the default dead-zone.","sig":null,"attributes":[{"value":"/ The left stick value normalized with the default dead-zone.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":21179,"byte_end":21242,"line_start":623,"line_end":623,"column_start":3,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":21245,"byte_end":21248,"line_start":624,"line_end":624,"column_start":3,"column_end":6}},{"value":"/ See `normalize_raw_stick_value` for more.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":21251,"byte_end":21296,"line_start":625,"line_end":625,"column_start":3,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":21299,"byte_end":21308,"line_start":626,"line_end":626,"column_start":3,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":21610,"byte_end":21632,"line_start":635,"line_end":635,"column_start":10,"column_end":32},"name":"right_stick_normalized","qualname":"<XInputState>::right_stick_normalized","value":"pub fn right_stick_normalized(&Self) -> (f32, f32)","parent":null,"children":[],"decl_id":null,"docs":" The right stick value normalized with the default dead-zone.","sig":null,"attributes":[{"value":"/ The right stick value normalized with the default dead-zone.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":21470,"byte_end":21534,"line_start":631,"line_end":631,"column_start":3,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":21537,"byte_end":21540,"line_start":632,"line_end":632,"column_start":3,"column_end":6}},{"value":"/ See `normalize_raw_stick_value` for more.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":21543,"byte_end":21588,"line_start":633,"line_end":633,"column_start":3,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":21591,"byte_end":21600,"line_start":634,"line_end":634,"column_start":3,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":22275,"byte_end":22300,"line_start":652,"line_end":652,"column_start":10,"column_end":35},"name":"normalize_raw_stick_value","qualname":"<XInputState>::normalize_raw_stick_value","value":"pub fn normalize_raw_stick_value((i16, i16), i16) -> (f32, f32)","parent":null,"children":[],"decl_id":null,"docs":" This helper normalizes a raw stick value using the given deadzone.","sig":null,"attributes":[{"value":"/ This helper normalizes a raw stick value using the given deadzone.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":21784,"byte_end":21854,"line_start":642,"line_end":642,"column_start":3,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":21857,"byte_end":21860,"line_start":643,"line_end":643,"column_start":3,"column_end":6}},{"value":"/ If the raw value's 2d length is less than the deadzone the result will be","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":21863,"byte_end":21940,"line_start":644,"line_end":644,"column_start":3,"column_end":80}},{"value":"/ `(0.0,0.0)`, otherwise the result is normalized across the range from the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":21943,"byte_end":22020,"line_start":645,"line_end":645,"column_start":3,"column_end":80}},{"value":"/ deadzone point to the maximum value.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":22023,"byte_end":22063,"line_start":646,"line_end":646,"column_start":3,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":22066,"byte_end":22069,"line_start":647,"line_end":647,"column_start":3,"column_end":6}},{"value":"/ The `deadzone` value is clamped to the range 0 to 32,766 (inclusive)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":22072,"byte_end":22144,"line_start":648,"line_end":648,"column_start":3,"column_end":75}},{"value":"/ before use. Negative inputs or maximum value inputs make the normalization","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":22147,"byte_end":22225,"line_start":649,"line_end":649,"column_start":3,"column_end":81}},{"value":"/ just work improperly.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":22228,"byte_end":22253,"line_start":650,"line_end":650,"column_start":3,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":22256,"byte_end":22265,"line_start":651,"line_end":651,"column_start":3,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":211},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":23874,"byte_end":23889,"line_start":690,"line_end":690,"column_start":3,"column_end":18},"name":"XInputNotLoaded","qualname":"::XInputUsageError::XInputNotLoaded","value":"XInputUsageError::XInputNotLoaded","parent":{"krate":0,"index":210},"children":[],"decl_id":null,"docs":" XInput isn't currently loaded.\n","sig":null,"attributes":[{"value":"/ XInput isn't currently loaded.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":23837,"byte_end":23871,"line_start":689,"line_end":689,"column_start":3,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":213},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":23941,"byte_end":23960,"line_start":692,"line_end":692,"column_start":3,"column_end":22},"name":"InvalidControllerID","qualname":"::XInputUsageError::InvalidControllerID","value":"XInputUsageError::InvalidControllerID","parent":{"krate":0,"index":210},"children":[],"decl_id":null,"docs":" The controller ID you gave was 4 or more.\n","sig":null,"attributes":[{"value":"/ The controller ID you gave was 4 or more.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":23893,"byte_end":23938,"line_start":691,"line_end":691,"column_start":3,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":215},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":24024,"byte_end":24042,"line_start":694,"line_end":694,"column_start":3,"column_end":21},"name":"DeviceNotConnected","qualname":"::XInputUsageError::DeviceNotConnected","value":"XInputUsageError::DeviceNotConnected","parent":{"krate":0,"index":210},"children":[],"decl_id":null,"docs":" Not really an error, this controller is just missing.\n","sig":null,"attributes":[{"value":"/ Not really an error, this controller is just missing.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":23964,"byte_end":24021,"line_start":693,"line_end":693,"column_start":3,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":217},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":24149,"byte_end":24161,"line_start":697,"line_end":697,"column_start":3,"column_end":15},"name":"UnknownError","qualname":"::XInputUsageError::UnknownError","value":"XInputUsageError::UnknownError(u32)","parent":{"krate":0,"index":210},"children":[],"decl_id":null,"docs":" There was some sort of unexpected error happened, this is the error code\n windows returned.\n","sig":null,"attributes":[{"value":"/ There was some sort of unexpected error happened, this is the error code","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":24046,"byte_end":24122,"line_start":695,"line_end":695,"column_start":3,"column_end":79}},{"value":"/ windows returned.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":24125,"byte_end":24146,"line_start":696,"line_end":696,"column_start":3,"column_end":24}}]},{"kind":"Enum","id":{"krate":0,"index":210},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":23816,"byte_end":23832,"line_start":688,"line_end":688,"column_start":10,"column_end":26},"name":"XInputUsageError","qualname":"::XInputUsageError","value":"pub enum XInputUsageError {\n    XInputNotLoaded,\n    InvalidControllerID,\n    DeviceNotConnected,\n    UnknownError(u32),\n}","parent":null,"children":[{"krate":0,"index":211},{"krate":0,"index":213},{"krate":0,"index":215},{"krate":0,"index":217}],"decl_id":null,"docs":" These are all the sorts of problems that can come up when you're using the\n xinput system.\n","sig":null,"attributes":[{"value":"/ These are all the sorts of problems that can come up when you're using the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":23658,"byte_end":23736,"line_start":685,"line_end":685,"column_start":1,"column_end":79}},{"value":"/ xinput system.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":23737,"byte_end":23755,"line_start":686,"line_end":686,"column_start":1,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":236},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":24413,"byte_end":24428,"line_start":705,"line_end":705,"column_start":3,"column_end":18},"name":"XInputNotLoaded","qualname":"::XInputOptionalFnUsageError::XInputNotLoaded","value":"XInputOptionalFnUsageError::XInputNotLoaded","parent":{"krate":0,"index":235},"children":[],"decl_id":null,"docs":" XInput isn't currently loaded.\n","sig":null,"attributes":[{"value":"/ XInput isn't currently loaded.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":24376,"byte_end":24410,"line_start":704,"line_end":704,"column_start":3,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":238},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":24480,"byte_end":24499,"line_start":707,"line_end":707,"column_start":3,"column_end":22},"name":"InvalidControllerID","qualname":"::XInputOptionalFnUsageError::InvalidControllerID","value":"XInputOptionalFnUsageError::InvalidControllerID","parent":{"krate":0,"index":235},"children":[],"decl_id":null,"docs":" The controller ID you gave was 4 or more.\n","sig":null,"attributes":[{"value":"/ The controller ID you gave was 4 or more.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":24432,"byte_end":24477,"line_start":706,"line_end":706,"column_start":3,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":240},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":24563,"byte_end":24581,"line_start":709,"line_end":709,"column_start":3,"column_end":21},"name":"DeviceNotConnected","qualname":"::XInputOptionalFnUsageError::DeviceNotConnected","value":"XInputOptionalFnUsageError::DeviceNotConnected","parent":{"krate":0,"index":235},"children":[],"decl_id":null,"docs":" Not really an error, this controller is just missing.\n","sig":null,"attributes":[{"value":"/ Not really an error, this controller is just missing.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":24503,"byte_end":24560,"line_start":708,"line_end":708,"column_start":3,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":242},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":24629,"byte_end":24646,"line_start":711,"line_end":711,"column_start":3,"column_end":20},"name":"FunctionNotLoaded","qualname":"::XInputOptionalFnUsageError::FunctionNotLoaded","value":"XInputOptionalFnUsageError::FunctionNotLoaded","parent":{"krate":0,"index":235},"children":[],"decl_id":null,"docs":" Function is not present in loaded DLL\n","sig":null,"attributes":[{"value":"/ Function is not present in loaded DLL","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":24585,"byte_end":24626,"line_start":710,"line_end":710,"column_start":3,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":244},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":24753,"byte_end":24765,"line_start":714,"line_end":714,"column_start":3,"column_end":15},"name":"UnknownError","qualname":"::XInputOptionalFnUsageError::UnknownError","value":"XInputOptionalFnUsageError::UnknownError(u32)","parent":{"krate":0,"index":235},"children":[],"decl_id":null,"docs":" There was some sort of unexpected error happened, this is the error code\n windows returned.\n","sig":null,"attributes":[{"value":"/ There was some sort of unexpected error happened, this is the error code","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":24650,"byte_end":24726,"line_start":712,"line_end":712,"column_start":3,"column_end":79}},{"value":"/ windows returned.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":24729,"byte_end":24750,"line_start":713,"line_end":713,"column_start":3,"column_end":24}}]},{"kind":"Enum","id":{"krate":0,"index":235},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":24345,"byte_end":24371,"line_start":703,"line_end":703,"column_start":10,"column_end":36},"name":"XInputOptionalFnUsageError","qualname":"::XInputOptionalFnUsageError","value":"pub enum XInputOptionalFnUsageError {\n    XInputNotLoaded,\n    InvalidControllerID,\n    DeviceNotConnected,\n    FunctionNotLoaded,\n    UnknownError(u32),\n}","parent":null,"children":[{"krate":0,"index":236},{"krate":0,"index":238},{"krate":0,"index":240},{"krate":0,"index":242},{"krate":0,"index":244}],"decl_id":null,"docs":" Error that can be returned by functions that are not guaranteed to be present\n in earlier XInput versions.\n","sig":null,"attributes":[{"value":"/ Error that can be returned by functions that are not guaranteed to be present","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":24171,"byte_end":24252,"line_start":700,"line_end":700,"column_start":1,"column_end":82}},{"value":"/ in earlier XInput versions.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":24253,"byte_end":24284,"line_start":701,"line_end":701,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":24981,"byte_end":24987,"line_start":721,"line_end":721,"column_start":10,"column_end":16},"name":"enable","qualname":"<XInputHandle>::enable","value":"pub fn enable(&Self, bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Enables or disables XInput.","sig":null,"attributes":[{"value":"/ Enables or disables XInput.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":24797,"byte_end":24828,"line_start":718,"line_end":718,"column_start":3,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":24831,"byte_end":24834,"line_start":719,"line_end":719,"column_start":3,"column_end":6}},{"value":"/ See the [MSDN documentation for XInputEnable](https://docs.microsoft.com/en-us/windows/desktop/api/xinput/nf-xinput-xinputenable).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":24837,"byte_end":24971,"line_start":720,"line_end":720,"column_start":3,"column_end":137}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":26145,"byte_end":26154,"line_start":748,"line_end":748,"column_start":10,"column_end":19},"name":"get_state","qualname":"<XInputHandle>::get_state","value":"pub fn get_state(&Self, u32) -> Result<XInputState, XInputUsageError>","parent":null,"children":[],"decl_id":null,"docs":" Polls the controller port given for the current controller state.","sig":null,"attributes":[{"value":"/ Polls the controller port given for the current controller state.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":25077,"byte_end":25146,"line_start":725,"line_end":725,"column_start":3,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":25149,"byte_end":25152,"line_start":726,"line_end":726,"column_start":3,"column_end":6}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":25155,"byte_end":25166,"line_start":727,"line_end":727,"column_start":3,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":25169,"byte_end":25172,"line_start":728,"line_end":728,"column_start":3,"column_end":6}},{"value":"/ It is a persistent problem (since ~2007?) with xinput that polling for the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":25175,"byte_end":25253,"line_start":729,"line_end":729,"column_start":3,"column_end":81}},{"value":"/ data of a controller that isn't connected will cause a long delay. In the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":25256,"byte_end":25333,"line_start":730,"line_end":730,"column_start":3,"column_end":80}},{"value":"/ area of 500_000 cpu cycles. That's like 2_000 cache misses in a row.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":25336,"byte_end":25408,"line_start":731,"line_end":731,"column_start":3,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":25411,"byte_end":25414,"line_start":732,"line_end":732,"column_start":3,"column_end":6}},{"value":"/ Once a controller is detected as not being plugged in you are strongly","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":25417,"byte_end":25491,"line_start":733,"line_end":733,"column_start":3,"column_end":77}},{"value":"/ advised to not poll for its data again next frame. Instead, you should","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":25494,"byte_end":25568,"line_start":734,"line_end":734,"column_start":3,"column_end":77}},{"value":"/ probably only poll for one known-missing controller per frame at most.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":25571,"byte_end":25645,"line_start":735,"line_end":735,"column_start":3,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":25648,"byte_end":25651,"line_start":736,"line_end":736,"column_start":3,"column_end":6}},{"value":"/ Alternately, you can register for your app to get plug and play events and","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":25654,"byte_end":25732,"line_start":737,"line_end":737,"column_start":3,"column_end":81}},{"value":"/ then wait for one of them to come in before you ever poll for a missing","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":25735,"byte_end":25810,"line_start":738,"line_end":738,"column_start":3,"column_end":78}},{"value":"/ controller a second time. That's up to you.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":25813,"byte_end":25860,"line_start":739,"line_end":739,"column_start":3,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":25863,"byte_end":25866,"line_start":740,"line_end":740,"column_start":3,"column_end":6}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":25869,"byte_end":25881,"line_start":741,"line_end":741,"column_start":3,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":25884,"byte_end":25887,"line_start":742,"line_end":742,"column_start":3,"column_end":6}},{"value":"/ A few things can cause an `Err` value to come back, as explained by the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":25890,"byte_end":25965,"line_start":743,"line_end":743,"column_start":3,"column_end":78}},{"value":"/ `XInputUsageError` type.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":25968,"byte_end":25996,"line_start":744,"line_end":744,"column_start":3,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":25999,"byte_end":26002,"line_start":745,"line_end":745,"column_start":3,"column_end":6}},{"value":"/ Most commonly, a controller will simply not be connected. Most people don't","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":26005,"byte_end":26084,"line_start":746,"line_end":746,"column_start":3,"column_end":82}},{"value":"/ have all four slots plugged in all the time.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":26087,"byte_end":26135,"line_start":747,"line_end":747,"column_start":3,"column_end":51}}]},{"kind":"Function","id":{"krate":0,"index":134},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":26840,"byte_end":26856,"line_start":768,"line_end":768,"column_start":8,"column_end":24},"name":"xinput_get_state","qualname":"::xinput_get_state","value":"pub fn xinput_get_state(u32) -> Result<XInputState, XInputUsageError>","parent":null,"children":[],"decl_id":null,"docs":" See `XInputHandle::get_state`\n","sig":null,"attributes":[{"value":"/ See `XInputHandle::get_state`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":26785,"byte_end":26818,"line_start":766,"line_end":766,"column_start":1,"column_end":34}},{"value":"deprecated","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":26819,"byte_end":26832,"line_start":767,"line_end":767,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":27983,"byte_end":27992,"line_start":794,"line_end":794,"column_start":10,"column_end":19},"name":"set_state","qualname":"<XInputHandle>::set_state","value":"pub fn set_state(&Self, u32, u16, u16) -> Result<(), XInputUsageError>","parent":null,"children":[],"decl_id":null,"docs":" Allows you to set the rumble speeds of the left and right motors.","sig":null,"attributes":[{"value":"/ Allows you to set the rumble speeds of the left and right motors.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":27084,"byte_end":27153,"line_start":776,"line_end":776,"column_start":3,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":27156,"byte_end":27159,"line_start":777,"line_end":777,"column_start":3,"column_end":6}},{"value":"/ Valid motor speeds are across the whole `u16` range, and the number is the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":27162,"byte_end":27240,"line_start":778,"line_end":778,"column_start":3,"column_end":81}},{"value":"/ scale of the motor intensity. In other words, 0 is 0%, and 65,535 is 100%.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":27243,"byte_end":27321,"line_start":779,"line_end":779,"column_start":3,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":27324,"byte_end":27327,"line_start":780,"line_end":780,"column_start":3,"column_end":6}},{"value":"/ On a 360 controller the left motor is low-frequency and the right motor is","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":27330,"byte_end":27408,"line_start":781,"line_end":781,"column_start":3,"column_end":81}},{"value":"/ high-frequency. On other controllers running through xinput this might be","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":27411,"byte_end":27488,"line_start":782,"line_end":782,"column_start":3,"column_end":80}},{"value":"/ the case, or the controller might not even have rumble ability at all. If","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":27491,"byte_end":27568,"line_start":783,"line_end":783,"column_start":3,"column_end":80}},{"value":"/ rumble is missing from the device you'll still get `Ok` return values, so","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":27571,"byte_end":27648,"line_start":784,"line_end":784,"column_start":3,"column_end":80}},{"value":"/ treat rumble as an extra, not an essential.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":27651,"byte_end":27698,"line_start":785,"line_end":785,"column_start":3,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":27701,"byte_end":27704,"line_start":786,"line_end":786,"column_start":3,"column_end":6}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":27707,"byte_end":27719,"line_start":787,"line_end":787,"column_start":3,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":27722,"byte_end":27725,"line_start":788,"line_end":788,"column_start":3,"column_end":6}},{"value":"/ A few things can cause an `Err` value to come back, as explained by the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":27728,"byte_end":27803,"line_start":789,"line_end":789,"column_start":3,"column_end":78}},{"value":"/ `XInputUsageError` type.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":27806,"byte_end":27834,"line_start":790,"line_end":790,"column_start":3,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":27837,"byte_end":27840,"line_start":791,"line_end":791,"column_start":3,"column_end":6}},{"value":"/ Most commonly, a controller will simply not be connected. Most people don't","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":27843,"byte_end":27922,"line_start":792,"line_end":792,"column_start":3,"column_end":82}},{"value":"/ have all four slots plugged in all the time.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":27925,"byte_end":27973,"line_start":793,"line_end":793,"column_start":3,"column_end":51}}]},{"kind":"Function","id":{"krate":0,"index":137},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":28760,"byte_end":28776,"line_start":819,"line_end":819,"column_start":8,"column_end":24},"name":"xinput_set_state","qualname":"::xinput_set_state","value":"pub fn xinput_set_state(u32, u16, u16) -> Result<(), XInputUsageError>","parent":null,"children":[],"decl_id":null,"docs":" See `XInputHandle::set_state`\n","sig":null,"attributes":[{"value":"/ See `XInputHandle::set_state`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":28705,"byte_end":28738,"line_start":817,"line_end":817,"column_start":1,"column_end":34}},{"value":"deprecated","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":28739,"byte_end":28752,"line_start":818,"line_end":818,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":29301,"byte_end":29317,"line_start":832,"line_end":832,"column_start":10,"column_end":26},"name":"get_capabilities","qualname":"<XInputHandle>::get_capabilities","value":"pub fn get_capabilities(&Self, u32)\n-> Result<XINPUT_CAPABILITIES, XInputUsageError>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the capabilities of a controller.","sig":null,"attributes":[{"value":"/ Retrieve the capabilities of a controller.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":29084,"byte_end":29130,"line_start":829,"line_end":829,"column_start":3,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":29133,"byte_end":29136,"line_start":830,"line_end":830,"column_start":3,"column_end":6}},{"value":"/ See the [MSDN documentation for XInputGetCapabilities](https://docs.microsoft.com/en-us/windows/desktop/api/xinput/nf-xinput-xinputgetcapabilities).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":29139,"byte_end":29291,"line_start":831,"line_end":831,"column_start":3,"column_end":155}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":30168,"byte_end":30181,"line_start":854,"line_end":854,"column_start":10,"column_end":23},"name":"get_keystroke","qualname":"<XInputHandle>::get_keystroke","value":"pub fn get_keystroke(&Self, u32)\n-> Result<Option<XINPUT_KEYSTROKE>, XInputOptionalFnUsageError>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve a gamepad input event.","sig":null,"attributes":[{"value":"/ Retrieve a gamepad input event.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":29968,"byte_end":30003,"line_start":851,"line_end":851,"column_start":3,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":30006,"byte_end":30009,"line_start":852,"line_end":852,"column_start":3,"column_end":6}},{"value":"/ See the [MSDN documentation for XInputGetKeystroke](https://docs.microsoft.com/en-us/windows/desktop/api/xinput/nf-xinput-xinputgetkeystroke).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":30012,"byte_end":30158,"line_start":853,"line_end":853,"column_start":3,"column_end":149}}]},{"kind":"Struct","id":{"krate":0,"index":262},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":31115,"byte_end":31126,"line_start":881,"line_end":881,"column_start":12,"column_end":23},"name":"BatteryType","qualname":"::BatteryType","value":"","parent":null,"children":[],"decl_id":null,"docs":" Defines type of battery used in device, if any.\n","sig":null,"attributes":[{"value":"/ Defines type of battery used in device, if any.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":31014,"byte_end":31065,"line_start":879,"line_end":879,"column_start":1,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":264},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":31127,"byte_end":31135,"line_start":881,"line_end":881,"column_start":24,"column_end":32},"name":"0","qualname":"::BatteryType::0","value":"u8","parent":{"krate":0,"index":262},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":142},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":31200,"byte_end":31212,"line_start":885,"line_end":885,"column_start":13,"column_end":25},"name":"DISCONNECTED","qualname":"::BatteryType::DISCONNECTED","value":"Self","parent":{"krate":0,"index":141},"children":[],"decl_id":null,"docs":" Device is disconnected.\n","sig":null,"attributes":[{"value":"/ Device is disconnected.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":31160,"byte_end":31187,"line_start":884,"line_end":884,"column_start":3,"column_end":30}}]},{"kind":"Const","id":{"krate":0,"index":143},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":31309,"byte_end":31314,"line_start":887,"line_end":887,"column_start":13,"column_end":18},"name":"WIRED","qualname":"::BatteryType::WIRED","value":"Self","parent":{"krate":0,"index":141},"children":[],"decl_id":null,"docs":" Device does not have battery.\n","sig":null,"attributes":[{"value":"/ Device does not have battery.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":31263,"byte_end":31296,"line_start":886,"line_end":886,"column_start":3,"column_end":36}}]},{"kind":"Const","id":{"krate":0,"index":144},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":31403,"byte_end":31411,"line_start":889,"line_end":889,"column_start":13,"column_end":21},"name":"ALKALINE","qualname":"::BatteryType::ALKALINE","value":"Self","parent":{"krate":0,"index":141},"children":[],"decl_id":null,"docs":" Device has alkaline battery.\n","sig":null,"attributes":[{"value":"/ Device has alkaline battery.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":31358,"byte_end":31390,"line_start":888,"line_end":888,"column_start":3,"column_end":35}}]},{"kind":"Const","id":{"krate":0,"index":145},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":31499,"byte_end":31503,"line_start":891,"line_end":891,"column_start":13,"column_end":17},"name":"NIMH","qualname":"::BatteryType::NIMH","value":"Self","parent":{"krate":0,"index":141},"children":[],"decl_id":null,"docs":" Device has nimh battery.\n","sig":null,"attributes":[{"value":"/ Device has nimh battery.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":31458,"byte_end":31486,"line_start":890,"line_end":890,"column_start":3,"column_end":31}}]},{"kind":"Const","id":{"krate":0,"index":146},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":31593,"byte_end":31600,"line_start":893,"line_end":893,"column_start":13,"column_end":20},"name":"UNKNOWN","qualname":"::BatteryType::UNKNOWN","value":"Self","parent":{"krate":0,"index":141},"children":[],"decl_id":null,"docs":" The battery type is not known.\n","sig":null,"attributes":[{"value":"/ The battery type is not known.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":31546,"byte_end":31580,"line_start":892,"line_end":892,"column_start":3,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":275},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":32192,"byte_end":32204,"line_start":913,"line_end":913,"column_start":12,"column_end":24},"name":"BatteryLevel","qualname":"::BatteryLevel","value":"","parent":null,"children":[],"decl_id":null,"docs":" Specify how much battery is charged for devices with battery.\n","sig":null,"attributes":[{"value":"/ Specify how much battery is charged for devices with battery.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":32077,"byte_end":32142,"line_start":911,"line_end":911,"column_start":1,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":277},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":32205,"byte_end":32213,"line_start":913,"line_end":913,"column_start":25,"column_end":33},"name":"0","qualname":"::BatteryLevel::0","value":"u8","parent":{"krate":0,"index":275},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":150},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":32273,"byte_end":32278,"line_start":917,"line_end":917,"column_start":13,"column_end":18},"name":"EMPTY","qualname":"::BatteryLevel::EMPTY","value":"Self","parent":{"krate":0,"index":149},"children":[],"decl_id":null,"docs":" Battery is empty.\n","sig":null,"attributes":[{"value":"/ Battery is empty.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":32239,"byte_end":32260,"line_start":916,"line_end":916,"column_start":3,"column_end":24}}]},{"kind":"Const","id":{"krate":0,"index":151},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":32362,"byte_end":32365,"line_start":919,"line_end":919,"column_start":13,"column_end":16},"name":"LOW","qualname":"::BatteryLevel::LOW","value":"Self","parent":{"krate":0,"index":149},"children":[],"decl_id":null,"docs":" Battery level is low.\n","sig":null,"attributes":[{"value":"/ Battery level is low.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":32324,"byte_end":32349,"line_start":918,"line_end":918,"column_start":3,"column_end":28}}]},{"kind":"Const","id":{"krate":0,"index":152},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":32450,"byte_end":32456,"line_start":921,"line_end":921,"column_start":13,"column_end":19},"name":"MEDIUM","qualname":"::BatteryLevel::MEDIUM","value":"Self","parent":{"krate":0,"index":149},"children":[],"decl_id":null,"docs":" Battery level is medium.\n","sig":null,"attributes":[{"value":"/ Battery level is medium.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":32409,"byte_end":32437,"line_start":920,"line_end":920,"column_start":3,"column_end":31}}]},{"kind":"Const","id":{"krate":0,"index":153},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":32536,"byte_end":32540,"line_start":923,"line_end":923,"column_start":13,"column_end":17},"name":"FULL","qualname":"::BatteryLevel::FULL","value":"Self","parent":{"krate":0,"index":149},"children":[],"decl_id":null,"docs":" Battery is full.\n","sig":null,"attributes":[{"value":"/ Battery is full.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":32503,"byte_end":32523,"line_start":922,"line_end":922,"column_start":3,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":288},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":33193,"byte_end":33217,"line_start":944,"line_end":944,"column_start":12,"column_end":36},"name":"XInputBatteryInformation","qualname":"::XInputBatteryInformation","value":"XInputBatteryInformation { battery_type, battery_level }","parent":null,"children":[{"krate":0,"index":289},{"krate":0,"index":290}],"decl_id":null,"docs":" Holds information about device's battery.","sig":null,"attributes":[{"value":"/ Holds information about device's battery.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":32960,"byte_end":33005,"line_start":940,"line_end":940,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":33006,"byte_end":33009,"line_start":941,"line_end":941,"column_start":1,"column_end":4}},{"value":"/ See also [XINPUT_BATTERY_INFORMATION](https://docs.microsoft.com/en-us/windows/desktop/api/xinput/ns-xinput-_xinput_battery_information).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":33010,"byte_end":33151,"line_start":942,"line_end":942,"column_start":1,"column_end":142}}]},{"kind":"Field","id":{"krate":0,"index":289},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":33271,"byte_end":33283,"line_start":946,"line_end":946,"column_start":7,"column_end":19},"name":"battery_type","qualname":"::XInputBatteryInformation::battery_type","value":"BatteryType","parent":{"krate":0,"index":288},"children":[],"decl_id":null,"docs":" Type of batter used in device, if any.\n","sig":null,"attributes":[{"value":"/ Type of batter used in device, if any.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":33222,"byte_end":33264,"line_start":945,"line_end":945,"column_start":3,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":290},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":33360,"byte_end":33373,"line_start":948,"line_end":948,"column_start":7,"column_end":20},"name":"battery_level","qualname":"::XInputBatteryInformation::battery_level","value":"BatteryLevel","parent":{"krate":0,"index":288},"children":[],"decl_id":null,"docs":" For devices with battery, contains battery level.\n","sig":null,"attributes":[{"value":"/ For devices with battery, contains battery level.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":33300,"byte_end":33353,"line_start":947,"line_end":947,"column_start":3,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":34566,"byte_end":34597,"line_start":982,"line_end":982,"column_start":10,"column_end":41},"name":"get_gamepad_battery_information","qualname":"<XInputHandle>::get_gamepad_battery_information","value":"pub fn get_gamepad_battery_information(&Self, u32)\n-> Result<XInputBatteryInformation, XInputOptionalFnUsageError>","parent":null,"children":[],"decl_id":null,"docs":" Get battery type and charge level of a gamepad.","sig":null,"attributes":[{"value":"/ Get battery type and charge level of a gamepad.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":34355,"byte_end":34406,"line_start":979,"line_end":979,"column_start":3,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":34409,"byte_end":34412,"line_start":980,"line_end":980,"column_start":3,"column_end":6}},{"value":"/ See also [XInputGetBatteryInformation](https://docs.microsoft.com/en-us/windows/desktop/api/xinput/nf-xinput-xinputgetbatteryinformation)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":34415,"byte_end":34556,"line_start":981,"line_end":981,"column_start":3,"column_end":144}}]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":34992,"byte_end":35023,"line_start":991,"line_end":991,"column_start":10,"column_end":41},"name":"get_headset_battery_information","qualname":"<XInputHandle>::get_headset_battery_information","value":"pub fn get_headset_battery_information(&Self, u32)\n-> Result<XInputBatteryInformation, XInputOptionalFnUsageError>","parent":null,"children":[],"decl_id":null,"docs":" Get battery type and charge level of a headset.","sig":null,"attributes":[{"value":"/ Get battery type and charge level of a headset.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":34781,"byte_end":34832,"line_start":988,"line_end":988,"column_start":3,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":34835,"byte_end":34838,"line_start":989,"line_end":989,"column_start":3,"column_end":6}},{"value":"/ See also [XInputGetBatteryInformation](https://docs.microsoft.com/en-us/windows/desktop/api/xinput/nf-xinput-xinputgetbatteryinformation)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":34841,"byte_end":34982,"line_start":990,"line_end":990,"column_start":3,"column_end":144}}]},{"kind":"Function","id":{"krate":0,"index":160},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":35283,"byte_end":35321,"line_start":1000,"line_end":1000,"column_start":8,"column_end":46},"name":"xinput_get_gamepad_battery_information","qualname":"::xinput_get_gamepad_battery_information","value":"pub fn xinput_get_gamepad_battery_information(u32)\n-> Result<XInputBatteryInformation, XInputOptionalFnUsageError>","parent":null,"children":[],"decl_id":null,"docs":" See `InputHandle::get_gamepad_battery_information`\n","sig":null,"attributes":[{"value":"/ See `InputHandle::get_gamepad_battery_information`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":35207,"byte_end":35261,"line_start":998,"line_end":998,"column_start":1,"column_end":55}},{"value":"deprecated","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":35262,"byte_end":35275,"line_start":999,"line_end":999,"column_start":1,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":161},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":35663,"byte_end":35701,"line_start":1011,"line_end":1011,"column_start":8,"column_end":46},"name":"xinput_get_headset_battery_information","qualname":"::xinput_get_headset_battery_information","value":"pub fn xinput_get_headset_battery_information(u32)\n-> Result<XInputBatteryInformation, XInputOptionalFnUsageError>","parent":null,"children":[],"decl_id":null,"docs":" See `InputHandle::get_headset_battery_information`\n","sig":null,"attributes":[{"value":"/ See `InputHandle::get_headset_battery_information`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":35587,"byte_end":35641,"line_start":1009,"line_end":1009,"column_start":1,"column_end":55}},{"value":"deprecated","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":35642,"byte_end":35655,"line_start":1010,"line_end":1010,"column_start":1,"column_end":14}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":2887,"byte_end":2900,"line_start":68,"line_end":68,"column_start":15,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":3566,"byte_end":3578,"line_start":88,"line_end":88,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":3732,"byte_end":3744,"line_start":94,"line_end":94,"column_start":22,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":3769,"byte_end":3781,"line_start":95,"line_end":95,"column_start":22,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":4100,"byte_end":4111,"line_start":104,"line_end":104,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":5956,"byte_end":5968,"line_start":159,"line_end":159,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":93},{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":15468,"byte_end":15479,"line_start":411,"line_end":411,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":15901,"byte_end":15912,"line_start":421,"line_end":421,"column_start":25,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":15944,"byte_end":15955,"line_start":423,"line_end":423,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":16074,"byte_end":16085,"line_start":429,"line_end":429,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":24780,"byte_end":24792,"line_start":717,"line_end":717,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":132},{"krate":0,"index":133}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":27067,"byte_end":27079,"line_start":775,"line_end":775,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":29067,"byte_end":29079,"line_start":828,"line_end":828,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":139},{"krate":0,"index":140}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":31144,"byte_end":31155,"line_start":883,"line_end":883,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":31662,"byte_end":31673,"line_start":896,"line_end":896,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":32222,"byte_end":32234,"line_start":915,"line_end":915,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":32601,"byte_end":32613,"line_start":926,"line_end":926,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":155}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":33397,"byte_end":33409,"line_start":951,"line_end":951,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":2887,"byte_end":2900,"line_start":68,"line_end":68,"column_start":15,"column_end":28},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":70},"to":{"krate":2,"index":3266}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":3566,"byte_end":3578,"line_start":88,"line_end":88,"column_start":16,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":162},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":3732,"byte_end":3744,"line_start":94,"line_end":94,"column_start":22,"column_end":34},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":162},"to":{"krate":2,"index":3024}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":3769,"byte_end":3781,"line_start":95,"line_end":95,"column_start":22,"column_end":34},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":162},"to":{"krate":2,"index":3036}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":4100,"byte_end":4111,"line_start":104,"line_end":104,"column_start":32,"column_end":43},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":79},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":5956,"byte_end":5968,"line_start":159,"line_end":159,"column_start":6,"column_end":18},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":162},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":15468,"byte_end":15479,"line_start":411,"line_end":411,"column_start":32,"column_end":43},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":97},"to":{"krate":2,"index":2675}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":15901,"byte_end":15912,"line_start":421,"line_end":421,"column_start":25,"column_end":36},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":97},"to":{"krate":2,"index":2680}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":15944,"byte_end":15955,"line_start":423,"line_end":423,"column_start":28,"column_end":39},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":97},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":16074,"byte_end":16085,"line_start":429,"line_end":429,"column_start":6,"column_end":17},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":97},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":24780,"byte_end":24792,"line_start":717,"line_end":717,"column_start":6,"column_end":18},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":162},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":27067,"byte_end":27079,"line_start":775,"line_end":775,"column_start":6,"column_end":18},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":162},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":29067,"byte_end":29079,"line_start":828,"line_end":828,"column_start":6,"column_end":18},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":162},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":31144,"byte_end":31155,"line_start":883,"line_end":883,"column_start":6,"column_end":17},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":262},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":31662,"byte_end":31673,"line_start":896,"line_end":896,"column_start":16,"column_end":27},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":262},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":32222,"byte_end":32234,"line_start":915,"line_end":915,"column_start":6,"column_end":18},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":275},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":32601,"byte_end":32613,"line_start":926,"line_end":926,"column_start":16,"column_end":28},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":275},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusty-xinput-1.2.0\\src/lib.rs","byte_start":33397,"byte_end":33409,"line_start":951,"line_end":951,"column_start":6,"column_end":18},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":162},"to":{"krate":4294967295,"index":4294967295}}]}