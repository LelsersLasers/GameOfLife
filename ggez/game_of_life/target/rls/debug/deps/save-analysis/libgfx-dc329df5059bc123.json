{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2","program":"C:\\Users\\milla\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","gfx","C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=dc329df5059bc123","-C","extra-filename=-dc329df5059bc123","--out-dir","c:\\Users\\milla\\Desktop\\Code\\GameOfLife\\ggez\\game_of_life\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\milla\\Desktop\\Code\\GameOfLife\\ggez\\game_of_life\\target\\rls\\debug\\deps","--extern","draw_state=c:\\Users\\milla\\Desktop\\Code\\GameOfLife\\ggez\\game_of_life\\target\\rls\\debug\\deps\\libdraw_state-042ff32716f6d528.rmeta","--extern","gfx_core=c:\\Users\\milla\\Desktop\\Code\\GameOfLife\\ggez\\game_of_life\\target\\rls\\debug\\deps\\libgfx_core-29c960daa27ceac9.rmeta","--extern","log=c:\\Users\\milla\\Desktop\\Code\\GameOfLife\\ggez\\game_of_life\\target\\rls\\debug\\deps\\liblog-9a028e3437069fe8.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\milla\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\milla\\Desktop\\Code\\GameOfLife\\ggez\\game_of_life\\target\\rls\\debug\\deps\\libgfx-dc329df5059bc123.rmeta"},"prelude":{"crate_id":{"name":"gfx","disambiguator":[5139569762477413718,0]},"crate_root":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src","external_crates":[{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","num":1,"id":{"name":"std","disambiguator":[7379719041391505039,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","num":2,"id":{"name":"core","disambiguator":[5226548339696486402,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[15782588708828798436,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11258588358156983047,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6811839233127289238,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6798478037195512723,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12572258325454906649,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[598470195457823820,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7285820039251336650,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15004074270013699283,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","num":11,"id":{"name":"std_detect","disambiguator":[6568562326383462027,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[7532148157145861684,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[15660406440960571571,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","num":14,"id":{"name":"log","disambiguator":[17887447836488120659,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","num":15,"id":{"name":"cfg_if","disambiguator":[10169579803109374085,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","num":16,"id":{"name":"draw_state","disambiguator":[10340675538045552622,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","num":17,"id":{"name":"bitflags","disambiguator":[906870646478561945,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","num":18,"id":{"name":"gfx_core","disambiguator":[3851512667297146229,0]}}],"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":600,"byte_end":5278,"line_start":15,"line_end":142,"column_start":1,"column_end":16}},"imports":[{"kind":"Use","ref_id":{"krate":18,"index":1443},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":3674,"byte_end":3680,"line_start":100,"line_end":100,"column_start":20,"column_end":26},"alias_span":null,"name":"Device","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":18,"index":416},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":3682,"byte_end":3689,"line_start":100,"line_end":100,"column_start":28,"column_end":35},"alias_span":null,"name":"Factory","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":18,"index":1052},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":3718,"byte_end":3721,"line_start":101,"line_end":101,"column_start":27,"column_end":30},"alias_span":null,"name":"Pod","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":452},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":3744,"byte_end":3754,"line_start":102,"line_end":102,"column_start":22,"column_end":32},"alias_span":null,"name":"FactoryExt","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":16,"index":4},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":3805,"byte_end":3811,"line_start":106,"line_end":106,"column_start":22,"column_end":28},"alias_span":null,"name":"preset","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":16,"index":39},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":3813,"byte_end":3818,"line_start":106,"line_end":106,"column_start":30,"column_end":35},"alias_span":null,"name":"state","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":3849,"byte_end":3850,"line_start":107,"line_end":107,"column_start":29,"column_end":30},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":1443},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":3889,"byte_end":3895,"line_start":110,"line_end":110,"column_start":16,"column_end":22},"alias_span":null,"name":"Device","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":5904},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":3897,"byte_end":3906,"line_start":110,"line_end":110,"column_start":24,"column_end":33},"alias_span":null,"name":"Primitive","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":1422},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":3908,"byte_end":3917,"line_start":110,"line_end":110,"column_start":35,"column_end":44},"alias_span":null,"name":"Resources","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":5964},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":3919,"byte_end":3934,"line_start":110,"line_end":110,"column_start":46,"column_end":61},"alias_span":null,"name":"SubmissionError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":1441},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":3936,"byte_end":3952,"line_start":110,"line_end":110,"column_start":63,"column_end":79},"alias_span":null,"name":"SubmissionResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":1406},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":3970,"byte_end":3981,"line_start":111,"line_end":111,"column_start":16,"column_end":27},"alias_span":null,"name":"VertexCount","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":1407},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":3983,"byte_end":3996,"line_start":111,"line_end":111,"column_start":29,"column_end":42},"alias_span":null,"name":"InstanceCount","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":5833},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4014,"byte_end":4023,"line_start":112,"line_end":112,"column_start":16,"column_end":25},"alias_span":null,"name":"ShaderSet","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":5708},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4025,"byte_end":4037,"line_start":112,"line_end":112,"column_start":27,"column_end":39},"alias_span":null,"name":"VertexShader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":5733},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4039,"byte_end":4049,"line_start":112,"line_end":112,"column_start":41,"column_end":51},"alias_span":null,"name":"HullShader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":5758},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4051,"byte_end":4063,"line_start":112,"line_end":112,"column_start":53,"column_end":65},"alias_span":null,"name":"DomainShader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":5783},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4065,"byte_end":4079,"line_start":112,"line_end":112,"column_start":67,"column_end":81},"alias_span":null,"name":"GeometryShader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":5808},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4081,"byte_end":4092,"line_start":112,"line_end":112,"column_start":83,"column_end":94},"alias_span":null,"name":"PixelShader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":32},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4110,"byte_end":4116,"line_start":113,"line_end":113,"column_start":16,"column_end":22},"alias_span":null,"name":"buffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":484},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4118,"byte_end":4124,"line_start":113,"line_end":113,"column_start":24,"column_end":30},"alias_span":null,"name":"format","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":557},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4126,"byte_end":4132,"line_start":113,"line_end":113,"column_start":32,"column_end":38},"alias_span":null,"name":"handle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":921},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4134,"byte_end":4141,"line_start":113,"line_end":113,"column_start":40,"column_end":47},"alias_span":null,"name":"mapping","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":1042},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4143,"byte_end":4149,"line_start":113,"line_end":113,"column_start":49,"column_end":55},"alias_span":null,"name":"memory","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":1265},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4151,"byte_end":4158,"line_start":113,"line_end":113,"column_start":57,"column_end":64},"alias_span":null,"name":"texture","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":416},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4185,"byte_end":4192,"line_start":114,"line_end":114,"column_start":25,"column_end":32},"alias_span":null,"name":"Factory","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":1709},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4194,"byte_end":4211,"line_start":114,"line_end":114,"column_start":34,"column_end":51},"alias_span":null,"name":"ResourceViewError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":1728},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4213,"byte_end":4228,"line_start":114,"line_end":114,"column_start":53,"column_end":68},"alias_span":null,"name":"TargetViewError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":1752},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4230,"byte_end":4243,"line_start":114,"line_end":114,"column_start":70,"column_end":83},"alias_span":null,"name":"CombinedError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":132},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4270,"byte_end":4276,"line_start":115,"line_end":115,"column_start":25,"column_end":31},"alias_span":null,"name":"CommandBuffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":131},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4295,"byte_end":4309,"line_start":115,"line_end":115,"column_start":50,"column_end":64},"alias_span":null,"name":"InstanceParams","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":5025},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4334,"byte_end":4345,"line_start":116,"line_end":116,"column_start":23,"column_end":34},"alias_span":null,"name":"ProgramInfo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":4656},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4347,"byte_end":4359,"line_start":116,"line_end":116,"column_start":36,"column_end":48},"alias_span":null,"name":"UniformValue","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":291},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4381,"byte_end":4397,"line_start":118,"line_end":118,"column_start":19,"column_end":35},"alias_span":null,"name":"CopyBufferResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":292},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4399,"byte_end":4422,"line_start":118,"line_end":118,"column_start":37,"column_end":60},"alias_span":null,"name":"CopyBufferTextureResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1345},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4424,"byte_end":4433,"line_start":118,"line_end":118,"column_start":62,"column_end":71},"alias_span":null,"name":"CopyError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":294},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4453,"byte_end":4476,"line_start":119,"line_end":119,"column_start":19,"column_end":42},"alias_span":null,"name":"CopyTextureBufferResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1401},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4478,"byte_end":4485,"line_start":119,"line_end":119,"column_start":44,"column_end":51},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1378},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4487,"byte_end":4498,"line_start":119,"line_end":119,"column_start":53,"column_end":64},"alias_span":null,"name":"UpdateError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1412},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4518,"byte_end":4536,"line_start":120,"line_end":120,"column_start":18,"column_end":36},"alias_span":null,"name":"PipelineStateError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1436},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4554,"byte_end":4559,"line_start":121,"line_end":121,"column_start":17,"column_end":22},"alias_span":null,"name":"Slice","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":532},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4561,"byte_end":4576,"line_start":121,"line_end":121,"column_start":24,"column_end":39},"alias_span":null,"name":"IntoIndexBuffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1464},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4578,"byte_end":4589,"line_start":121,"line_end":121,"column_start":41,"column_end":52},"alias_span":null,"name":"IndexBuffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1738},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4606,"byte_end":4619,"line_start":122,"line_end":122,"column_start":15,"column_end":28},"alias_span":null,"name":"PipelineState","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":659},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4644,"byte_end":4656,"line_start":123,"line_end":123,"column_start":23,"column_end":35},"alias_span":null,"name":"VertexBuffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":661},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4658,"byte_end":4672,"line_start":123,"line_end":123,"column_start":37,"column_end":51},"alias_span":null,"name":"InstanceBuffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1513},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4674,"byte_end":4689,"line_start":123,"line_end":123,"column_start":53,"column_end":68},"alias_span":null,"name":"RawVertexBuffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":663},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4713,"byte_end":4727,"line_start":124,"line_end":124,"column_start":23,"column_end":37},"alias_span":null,"name":"ConstantBuffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1531},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4729,"byte_end":4746,"line_start":124,"line_end":124,"column_start":39,"column_end":56},"alias_span":null,"name":"RawConstantBuffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":683},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4748,"byte_end":4754,"line_start":124,"line_end":124,"column_start":58,"column_end":64},"alias_span":null,"name":"Global","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1548},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4756,"byte_end":4765,"line_start":124,"line_end":124,"column_start":66,"column_end":75},"alias_span":null,"name":"RawGlobal","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":840},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4792,"byte_end":4806,"line_start":125,"line_end":125,"column_start":25,"column_end":39},"alias_span":null,"name":"ShaderResource","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1565},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4808,"byte_end":4825,"line_start":125,"line_end":125,"column_start":41,"column_end":58},"alias_span":null,"name":"RawShaderResource","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":860},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4827,"byte_end":4842,"line_start":125,"line_end":125,"column_start":60,"column_end":75},"alias_span":null,"name":"UnorderedAccess","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1582},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4868,"byte_end":4875,"line_start":126,"line_end":126,"column_start":25,"column_end":32},"alias_span":null,"name":"Sampler","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":880},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4877,"byte_end":4891,"line_start":126,"line_end":126,"column_start":34,"column_end":48},"alias_span":null,"name":"TextureSampler","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1081},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4916,"byte_end":4934,"line_start":127,"line_end":127,"column_start":23,"column_end":41},"alias_span":null,"name":"DepthStencilTarget","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1043},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4936,"byte_end":4947,"line_start":127,"line_end":127,"column_start":43,"column_end":54},"alias_span":null,"name":"DepthTarget","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1062},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4949,"byte_end":4962,"line_start":127,"line_end":127,"column_start":56,"column_end":69},"alias_span":null,"name":"StencilTarget","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1003},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4986,"byte_end":4998,"line_start":128,"line_end":128,"column_start":23,"column_end":35},"alias_span":null,"name":"RenderTarget","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1599},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":5000,"byte_end":5015,"line_start":128,"line_end":128,"column_start":37,"column_end":52},"alias_span":null,"name":"RawRenderTarget","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1023},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":5017,"byte_end":5028,"line_start":128,"line_end":128,"column_start":54,"column_end":65},"alias_span":null,"name":"BlendTarget","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1633},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":5030,"byte_end":5038,"line_start":128,"line_end":128,"column_start":67,"column_end":75},"alias_span":null,"name":"BlendRef","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1634},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":5030,"byte_end":5038,"line_start":128,"line_end":128,"column_start":67,"column_end":75},"alias_span":null,"name":"BlendRef","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1616},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":5040,"byte_end":5047,"line_start":128,"line_end":128,"column_start":77,"column_end":84},"alias_span":null,"name":"Scissor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1211},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":5072,"byte_end":5078,"line_start":129,"line_end":129,"column_start":23,"column_end":29},"alias_span":null,"name":"Bundle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":1140},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":64740,"byte_end":64751,"line_start":25,"line_end":25,"column_start":21,"column_end":32},"alias_span":null,"name":"BufferIndex","value":"","parent":{"krate":0,"index":546}},{"kind":"Use","ref_id":{"krate":18,"index":4166},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":64753,"byte_end":64760,"line_start":25,"line_end":25,"column_start":34,"column_end":41},"alias_span":null,"name":"Element","value":"","parent":{"krate":0,"index":546}},{"kind":"Use","ref_id":{"krate":18,"index":1141},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":64762,"byte_end":64772,"line_start":25,"line_end":25,"column_start":43,"column_end":53},"alias_span":null,"name":"ElemOffset","value":"","parent":{"krate":0,"index":546}},{"kind":"Use","ref_id":{"krate":18,"index":1142},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":64774,"byte_end":64784,"line_start":25,"line_end":25,"column_start":55,"column_end":65},"alias_span":null,"name":"ElemStride","value":"","parent":{"krate":0,"index":546}},{"kind":"Use","ref_id":{"krate":18,"index":1143},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":64786,"byte_end":64798,"line_start":25,"line_end":25,"column_start":67,"column_end":79},"alias_span":null,"name":"InstanceRate","value":"","parent":{"krate":0,"index":546}},{"kind":"Use","ref_id":{"krate":18,"index":4211},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":51259,"byte_end":51269,"line_start":51,"line_end":51,"column_start":20,"column_end":30},"alias_span":null,"name":"Descriptor","value":"","parent":{"krate":0,"index":545}},{"kind":"Use","ref_id":{"krate":18,"index":1618},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":51294,"byte_end":51304,"line_start":52,"line_end":52,"column_start":24,"column_end":34},"alias_span":null,"name":"AccessInfo","value":"","parent":{"krate":0,"index":545}},{"kind":"Use","ref_id":{"krate":18,"index":1176},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\shade.rs","byte_start":101086,"byte_end":101091,"line_start":22,"line_end":22,"column_start":15,"column_end":20},"alias_span":null,"name":"core","value":"","parent":{"krate":0,"index":1303}},{"kind":"Use","ref_id":{"krate":18,"index":1221},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\shade.rs","byte_start":101108,"byte_end":101119,"line_start":22,"line_end":22,"column_start":37,"column_end":48},"alias_span":null,"name":"ConstFormat","value":"","parent":{"krate":0,"index":1303}},{"kind":"Use","ref_id":{"krate":18,"index":1224},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\shade.rs","byte_start":101121,"byte_end":101130,"line_start":22,"line_end":22,"column_start":50,"column_end":59},"alias_span":null,"name":"Formatted","value":"","parent":{"krate":0,"index":1303}},{"kind":"Use","ref_id":{"krate":18,"index":4783},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\shade.rs","byte_start":101132,"byte_end":101137,"line_start":22,"line_end":22,"column_start":61,"column_end":66},"alias_span":null,"name":"Usage","value":"","parent":{"krate":0,"index":1303}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":600,"byte_end":5278,"line_start":15,"line_end":142,"column_start":1,"column_end":16},"name":"","qualname":"::","value":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":24},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":32},{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":41},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":48},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":55},{"krate":0,"index":58},{"krate":0,"index":61},{"krate":0,"index":64},{"krate":0,"index":67},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":74},{"krate":0,"index":77},{"krate":0,"index":80},{"krate":0,"index":83},{"krate":0,"index":86},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":93},{"krate":0,"index":96},{"krate":0,"index":99},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":106},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":113},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":120},{"krate":0,"index":123},{"krate":0,"index":126},{"krate":0,"index":129},{"krate":0,"index":132},{"krate":0,"index":135},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":142},{"krate":0,"index":145},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":156},{"krate":0,"index":159},{"krate":0,"index":162},{"krate":0,"index":165},{"krate":0,"index":168},{"krate":0,"index":171},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":178},{"krate":0,"index":181},{"krate":0,"index":184},{"krate":0,"index":187},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":194},{"krate":0,"index":197},{"krate":0,"index":200},{"krate":0,"index":203},{"krate":0,"index":206},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":212},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":219},{"krate":0,"index":364},{"krate":0,"index":486},{"krate":0,"index":545},{"krate":0,"index":1303},{"krate":0,"index":1331}],"decl_id":null,"docs":" # gfx","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":600,"byte_end":622,"line_start":15,"line_end":15,"column_start":1,"column_end":23}},{"value":"/ # gfx","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":624,"byte_end":633,"line_start":17,"line_end":17,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":634,"byte_end":637,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ An efficient, low-level, bindless graphics API for Rust.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":638,"byte_end":698,"line_start":19,"line_end":19,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":699,"byte_end":702,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Overview","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":703,"byte_end":717,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":718,"byte_end":721,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ## Command buffers and encoders","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":722,"byte_end":757,"line_start":23,"line_end":23,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":758,"byte_end":761,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ A command buffer is a serialized list of drawing and compute commands.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":762,"byte_end":836,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ Unlike with vulkan, command buffers are not what you use to create commands, but only","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":837,"byte_end":926,"line_start":26,"line_end":26,"column_start":1,"column_end":90}},{"value":"/ the result of creating these commands. Gfx, borrowing metal's terminology, uses","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":927,"byte_end":1010,"line_start":27,"line_end":27,"column_start":1,"column_end":84}},{"value":"/ encoders to build command buffers. This means that, in general, users of the gfx crate","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":1011,"byte_end":1101,"line_start":28,"line_end":28,"column_start":1,"column_end":91}},{"value":"/ don't manipulate command buffers directly much and interact mostly with encoders.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":1102,"byte_end":1187,"line_start":29,"line_end":29,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":1188,"byte_end":1191,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Manipulating an `Encoder` in gfx corresponds to interacting with:","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":1192,"byte_end":1261,"line_start":31,"line_end":31,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":1262,"byte_end":1265,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ - a `VkCommandBuffer` in vulkan,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":1266,"byte_end":1302,"line_start":33,"line_end":33,"column_start":1,"column_end":37}},{"value":"/ - a `MTLCommandEncoder` in metal,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":1303,"byte_end":1340,"line_start":34,"line_end":34,"column_start":1,"column_end":38}},{"value":"/ - an `ID3D12GraphicsCommandList` in D3D12.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":1341,"byte_end":1387,"line_start":35,"line_end":35,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":1388,"byte_end":1391,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ OpenGL and earlier versions of D3D don't have an explicit notion of command buffers","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":1392,"byte_end":1479,"line_start":37,"line_end":37,"column_start":1,"column_end":88}},{"value":"/ or encoders (with the exception of draw indirect commands in late versions of OpenGL,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":1480,"byte_end":1569,"line_start":38,"line_end":38,"column_start":1,"column_end":90}},{"value":"/ which can be seen as a GPU-side command buffer). They are managed implicitly by the driver.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":1570,"byte_end":1665,"line_start":39,"line_end":39,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":1666,"byte_end":1669,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ See:","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":1670,"byte_end":1678,"line_start":41,"line_end":41,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":1679,"byte_end":1682,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ - The [`Encoder` struct documentation](struct.Encoder.html).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":1683,"byte_end":1747,"line_start":43,"line_end":43,"column_start":1,"column_end":65}},{"value":"/ - The [`Command buffer` trait documentation](trait.CommandBuffer.html).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":1748,"byte_end":1823,"line_start":44,"line_end":44,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":1824,"byte_end":1827,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ## Factory","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":1828,"byte_end":1842,"line_start":46,"line_end":46,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":1843,"byte_end":1846,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ The factory is what lets you allocate GPU resources such as buffers and textures.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":1847,"byte_end":1932,"line_start":48,"line_end":48,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":1933,"byte_end":1936,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ Each gfx backend provides its own factory type which implements both:","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":1937,"byte_end":2010,"line_start":50,"line_end":50,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":2011,"byte_end":2014,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ - The [`Factory` trait](traits/trait.Factory.html#overview).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":2015,"byte_end":2079,"line_start":52,"line_end":52,"column_start":1,"column_end":65}},{"value":"/ - The [`FactoryExt` trait](traits/trait.FactoryExt.html).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":2080,"byte_end":2141,"line_start":53,"line_end":53,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":2142,"byte_end":2145,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ `gfx::Factory` is roughly equivalent to:","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":2146,"byte_end":2190,"line_start":55,"line_end":55,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":2191,"byte_end":2194,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ - `VkDevice` in vulkan,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":2195,"byte_end":2222,"line_start":57,"line_end":57,"column_start":1,"column_end":28}},{"value":"/ - `ID3D11Device` in D3D11,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":2223,"byte_end":2253,"line_start":58,"line_end":58,"column_start":1,"column_end":31}},{"value":"/ - `MTLDevice` in metal.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":2254,"byte_end":2281,"line_start":59,"line_end":59,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":2282,"byte_end":2285,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ OpenGL does not have a notion of factory (resources are created directly off of the global","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":2286,"byte_end":2380,"line_start":61,"line_end":61,"column_start":1,"column_end":95}},{"value":"/ context). D3D11 has a DXGI factory but it is only used to interface with other processes","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":2381,"byte_end":2473,"line_start":62,"line_end":62,"column_start":1,"column_end":93}},{"value":"/ and the window manager, resources like textures are usually created using the device.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":2474,"byte_end":2563,"line_start":63,"line_end":63,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":2564,"byte_end":2567,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ ## Device","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":2568,"byte_end":2581,"line_start":65,"line_end":65,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":2582,"byte_end":2585,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ See [the `gfx::Device` trait](trait.Device.html).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":2586,"byte_end":2639,"line_start":67,"line_end":67,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":2640,"byte_end":2643,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ ## Pipeline state (PSO)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":2644,"byte_end":2671,"line_start":69,"line_end":69,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":2672,"byte_end":2675,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ See [the documentation of the gfx::pso module](pso/index.html).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":2676,"byte_end":2743,"line_start":71,"line_end":71,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":2744,"byte_end":2747,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ## Memory management","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":2748,"byte_end":2772,"line_start":73,"line_end":73,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":2773,"byte_end":2776,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ Handles internally use atomically reference counted pointers to deal with memory management.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":2777,"byte_end":2873,"line_start":75,"line_end":75,"column_start":1,"column_end":97}},{"value":"/ GPU resources are not destroyed right away when all references to them are gone. Instead they","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":2874,"byte_end":2971,"line_start":76,"line_end":76,"column_start":1,"column_end":98}},{"value":"/ are destroyed the next time [Device::cleanup](trait.Device.html#tymethod.cleanup) is called.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":2972,"byte_end":3068,"line_start":77,"line_end":77,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":3069,"byte_end":3072,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":3073,"byte_end":3087,"line_start":79,"line_end":79,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":3088,"byte_end":3091,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ See [the examples in the repository](https://github.com/gfx-rs/gfx/tree/master/examples).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":3092,"byte_end":3185,"line_start":81,"line_end":81,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":3186,"byte_end":3189,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ # Useful resources","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":3190,"byte_end":3212,"line_start":83,"line_end":83,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":3213,"byte_end":3216,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/  - [Documentation for some of the technical terms](doc/terminology/index.html)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":3217,"byte_end":3299,"line_start":85,"line_end":85,"column_start":1,"column_end":83}},{"value":"/ used in the API.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":3300,"byte_end":3320,"line_start":86,"line_end":86,"column_start":1,"column_end":21}},{"value":"/  - [Learning gfx](https://wiki.alopex.li/LearningGfx) tutorial.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":3321,"byte_end":3388,"line_start":87,"line_end":87,"column_start":1,"column_end":68}},{"value":"/  - See [the blog](http://gfx-rs.github.io/) for more explanations and annotated examples.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":3389,"byte_end":3482,"line_start":88,"line_end":88,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":3483,"byte_end":3486,"line_start":89,"line_end":89,"column_start":1,"column_end":4}}]},{"kind":"Mod","id":{"krate":0,"index":6},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":3646,"byte_end":3652,"line_start":99,"line_end":99,"column_start":9,"column_end":15},"name":"traits","qualname":"::traits","value":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","parent":null,"children":[{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":11},{"krate":0,"index":14},{"krate":0,"index":17}],"decl_id":null,"docs":" public re-exported traits\n","sig":null,"attributes":[{"value":"/ public re-exported traits","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":3608,"byte_end":3637,"line_start":98,"line_end":98,"column_start":1,"column_end":30}}]},{"kind":"StructVariant","id":{"krate":0,"index":1348},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":6368,"byte_end":6382,"line_start":34,"line_end":34,"column_start":5,"column_end":19},"name":"OutOfSrcBounds","qualname":"::encoder::CopyError::OutOfSrcBounds","value":"CopyError::OutOfSrcBounds { size, copy_end }","parent":{"krate":0,"index":1345},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1351},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":6434,"byte_end":6448,"line_start":38,"line_end":38,"column_start":5,"column_end":19},"name":"OutOfDstBounds","qualname":"::encoder::CopyError::OutOfDstBounds","value":"CopyError::OutOfDstBounds { size, copy_end }","parent":{"krate":0,"index":1345},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1354},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":6500,"byte_end":6507,"line_start":42,"line_end":42,"column_start":5,"column_end":12},"name":"Overlap","qualname":"::encoder::CopyError::Overlap","value":"CopyError::Overlap { src_offset, dst_offset, size }","parent":{"krate":0,"index":1345},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1358},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":6596,"byte_end":6609,"line_start":47,"line_end":47,"column_start":5,"column_end":18},"name":"NoSrcBindFlag","qualname":"::encoder::CopyError::NoSrcBindFlag","value":"CopyError::NoSrcBindFlag","parent":{"krate":0,"index":1345},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1360},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":6615,"byte_end":6628,"line_start":48,"line_end":48,"column_start":5,"column_end":18},"name":"NoDstBindFlag","qualname":"::encoder::CopyError::NoDstBindFlag","value":"CopyError::NoDstBindFlag","parent":{"krate":0,"index":1345},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1345},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":6346,"byte_end":6355,"line_start":33,"line_end":33,"column_start":10,"column_end":19},"name":"CopyError","qualname":"::encoder::CopyError","value":"pub enum CopyError<S, D> {\n    OutOfSrcBounds {\n            size: S,\n            copy_end: S,\n        },\n    OutOfDstBounds {\n            size: D,\n            copy_end: D,\n        },\n    Overlap {\n            src_offset: usize,\n            dst_offset: usize,\n            size: usize,\n        },\n    NoSrcBindFlag,\n    NoDstBindFlag,\n}","parent":null,"children":[{"krate":0,"index":1348},{"krate":0,"index":1351},{"krate":0,"index":1354},{"krate":0,"index":1358},{"krate":0,"index":1360}],"decl_id":null,"docs":" An error occuring in memory copies.\n","sig":null,"attributes":[{"value":"/ An error occuring in memory copies.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":6239,"byte_end":6278,"line_start":30,"line_end":30,"column_start":1,"column_end":40}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":6279,"byte_end":6301,"line_start":31,"line_end":31,"column_start":1,"column_end":23}}]},{"kind":"Type","id":{"krate":0,"index":291},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":6710,"byte_end":6726,"line_start":52,"line_end":52,"column_start":10,"column_end":26},"name":"CopyBufferResult","qualname":"::encoder::CopyBufferResult","value":"Result<(), CopyError<usize, usize>>","parent":null,"children":[],"decl_id":null,"docs":" Result type returned when copying a buffer into another buffer.\n","sig":null,"attributes":[{"value":"/ Result type returned when copying a buffer into another buffer.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":6633,"byte_end":6700,"line_start":51,"line_end":51,"column_start":1,"column_end":68}}]},{"kind":"Type","id":{"krate":0,"index":292},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":6842,"byte_end":6865,"line_start":55,"line_end":55,"column_start":10,"column_end":33},"name":"CopyBufferTextureResult","qualname":"::encoder::CopyBufferTextureResult","value":"Result<(), CopyError<usize, [texture::Size; ]>>","parent":null,"children":[],"decl_id":null,"docs":" Result type returned when copying buffer data into a texture.\n","sig":null,"attributes":[{"value":"/ Result type returned when copying buffer data into a texture.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":6767,"byte_end":6832,"line_start":54,"line_end":54,"column_start":1,"column_end":66}}]},{"kind":"Type","id":{"krate":0,"index":294},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":6994,"byte_end":7017,"line_start":58,"line_end":58,"column_start":10,"column_end":33},"name":"CopyTextureBufferResult","qualname":"::encoder::CopyTextureBufferResult","value":"Result<(), CopyError<[texture::Size; ], usize>>","parent":null,"children":[],"decl_id":null,"docs":" Result type returned when copying texture data into a buffer.\n","sig":null,"attributes":[{"value":"/ Result type returned when copying texture data into a buffer.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":6919,"byte_end":6984,"line_start":57,"line_end":57,"column_start":1,"column_end":66}}]},{"kind":"StructVariant","id":{"krate":0,"index":1380},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":8765,"byte_end":8776,"line_start":102,"line_end":102,"column_start":5,"column_end":16},"name":"OutOfBounds","qualname":"::encoder::UpdateError::OutOfBounds","value":"UpdateError::OutOfBounds { target, source }","parent":{"krate":0,"index":1378},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1383},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":8828,"byte_end":8845,"line_start":106,"line_end":106,"column_start":5,"column_end":22},"name":"UnitCountMismatch","qualname":"::encoder::UpdateError::UnitCountMismatch","value":"UpdateError::UnitCountMismatch { target, slice }","parent":{"krate":0,"index":1378},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1386},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":8904,"byte_end":8916,"line_start":110,"line_end":110,"column_start":5,"column_end":17},"name":"InvalidUsage","qualname":"::encoder::UpdateError::InvalidUsage","value":"UpdateError::InvalidUsage(Usage)","parent":{"krate":0,"index":1378},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1378},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":8744,"byte_end":8755,"line_start":101,"line_end":101,"column_start":10,"column_end":21},"name":"UpdateError","qualname":"::encoder::UpdateError","value":"pub enum UpdateError<T> {\n    OutOfBounds {\n            target: T,\n            source: T,\n        },\n    UnitCountMismatch {\n            target: usize,\n            slice: usize,\n        },\n    InvalidUsage(Usage),\n}","parent":null,"children":[{"krate":0,"index":1380},{"krate":0,"index":1383},{"krate":0,"index":1386}],"decl_id":null,"docs":" An error occuring in buffer/texture updates.\n","sig":null,"attributes":[{"value":"/ An error occuring in buffer/texture updates.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":8628,"byte_end":8676,"line_start":98,"line_end":98,"column_start":1,"column_end":49}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":8677,"byte_end":8699,"line_start":99,"line_end":99,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":1401},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":10835,"byte_end":10842,"line_start":159,"line_end":159,"column_start":12,"column_end":19},"name":"Encoder","qualname":"::encoder::Encoder","value":"Encoder {  }","parent":null,"children":[{"krate":0,"index":1404},{"krate":0,"index":1405},{"krate":0,"index":1406},{"krate":0,"index":1407}],"decl_id":null,"docs":" Graphics Command Encoder","sig":null,"attributes":[{"value":"/ Graphics Command Encoder","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":10099,"byte_end":10127,"line_start":144,"line_end":144,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":10128,"byte_end":10131,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ # Overview","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":10132,"byte_end":10146,"line_start":146,"line_end":146,"column_start":1,"column_end":15}},{"value":"/ The `Encoder` is a wrapper structure around a `CommandBuffer`. It is responsible for sending","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":10147,"byte_end":10243,"line_start":147,"line_end":147,"column_start":1,"column_end":97}},{"value":"/ commands to the `CommandBuffer`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":10244,"byte_end":10280,"line_start":148,"line_end":148,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":10281,"byte_end":10284,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ # Construction & Handling","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":10285,"byte_end":10314,"line_start":150,"line_end":150,"column_start":1,"column_end":30}},{"value":"/ The `Encoder` implements `From<CommandBuffer>`, which is how it is constructed. There is no","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":10315,"byte_end":10410,"line_start":151,"line_end":151,"column_start":1,"column_end":96}},{"value":"/ cross-API way to create a `CommandBuffer`, however, an API back-end should expose a function to","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":10411,"byte_end":10510,"line_start":152,"line_end":152,"column_start":1,"column_end":100}},{"value":"/ create one in its `Factory` type. See the specific back-end for details on how to construct a","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":10511,"byte_end":10608,"line_start":153,"line_end":153,"column_start":1,"column_end":98}},{"value":"/ `CommandBuffer`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":10609,"byte_end":10629,"line_start":154,"line_end":154,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":10630,"byte_end":10633,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ The encoder exposes multiple functions that add commands to its internal `CommandBuffer`. To","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":10634,"byte_end":10730,"line_start":156,"line_end":156,"column_start":1,"column_end":97}},{"value":"/ submit these commands to the GPU so they can be rendered, call `flush`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":10731,"byte_end":10806,"line_start":157,"line_end":157,"column_start":1,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":11887,"byte_end":11892,"line_start":185,"line_end":185,"column_start":12,"column_end":17},"name":"flush","qualname":"<Encoder<R, C>>::flush","value":"pub fn flush<D>(&mut Self, &mut D) where D: Device<Resources = R,\nCommandBuffer = R>","parent":null,"children":[],"decl_id":null,"docs":" Submits the commands in this `Encoder`'s internal `CommandBuffer` to the GPU, so they can\n be executed.","sig":null,"attributes":[{"value":"/ Submits the commands in this `Encoder`'s internal `CommandBuffer` to the GPU, so they can","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":11375,"byte_end":11468,"line_start":178,"line_end":178,"column_start":5,"column_end":98}},{"value":"/ be executed.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":11473,"byte_end":11489,"line_start":179,"line_end":179,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":11494,"byte_end":11497,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ Calling `flush` before swapping buffers is critical as without it the commands of the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":11502,"byte_end":11591,"line_start":181,"line_end":181,"column_start":5,"column_end":94}},{"value":"/ internal ´CommandBuffer´ will not be sent to the GPU, and as a result they will not be","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":11596,"byte_end":11688,"line_start":182,"line_end":182,"column_start":5,"column_end":95}},{"value":"/ processed. Calling flush too often however will result in a performance hit. It is","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":11693,"byte_end":11779,"line_start":183,"line_end":183,"column_start":5,"column_end":91}},{"value":"/ generally recommended to call flush once per frame, when all draw calls have been made.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":11784,"byte_end":11875,"line_start":184,"line_end":184,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":12122,"byte_end":12136,"line_start":193,"line_end":193,"column_start":12,"column_end":26},"name":"flush_no_reset","qualname":"<Encoder<R, C>>::flush_no_reset","value":"pub fn flush_no_reset<D>(&mut Self, &mut D) -> SubmissionResult<()> where\nD: Device<Resources = R, CommandBuffer = R>","parent":null,"children":[],"decl_id":null,"docs":" Like `flush` but keeps the encoded commands.\n","sig":null,"attributes":[{"value":"/ Like `flush` but keeps the encoded commands.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":12062,"byte_end":12110,"line_start":192,"line_end":192,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":328},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":12441,"byte_end":12462,"line_start":201,"line_end":201,"column_start":12,"column_end":33},"name":"fenced_flush_no_reset","qualname":"<Encoder<R, C>>::fenced_flush_no_reset","value":"pub fn fenced_flush_no_reset<D>(&mut Self, &mut D, Option<handle::Fence<R>>)\n-> SubmissionResult<handle::Fence<R>> where D: Device<Resources = R,\nCommandBuffer = R>","parent":null,"children":[],"decl_id":null,"docs":" Like `flush_no_reset` but places a fence.\n","sig":null,"attributes":[{"value":"/ Like `flush_no_reset` but places a fence.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":12384,"byte_end":12429,"line_start":200,"line_end":200,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":330},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":12923,"byte_end":12928,"line_start":212,"line_end":212,"column_start":12,"column_end":17},"name":"reset","qualname":"<Encoder<R, C>>::reset","value":"pub fn reset(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Resets the encoded commands.\n","sig":null,"attributes":[{"value":"/ Resets the encoded commands.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":12879,"byte_end":12911,"line_start":211,"line_end":211,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":331},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":13102,"byte_end":13113,"line_start":219,"line_end":219,"column_start":12,"column_end":23},"name":"copy_buffer","qualname":"<Encoder<R, C>>::copy_buffer","value":"pub fn copy_buffer<T: Pod>(&mut Self, &handle::Buffer<R, T>,\n&handle::Buffer<R, T>, usize, usize, usize) -> CopyBufferResult","parent":null,"children":[],"decl_id":null,"docs":" Copy part of a buffer to another\n","sig":null,"attributes":[{"value":"/ Copy part of a buffer to another","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":13054,"byte_end":13090,"line_start":218,"line_end":218,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":333},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":14965,"byte_end":14991,"line_start":266,"line_end":266,"column_start":12,"column_end":38},"name":"copy_buffer_to_texture_raw","qualname":"<Encoder<R, C>>::copy_buffer_to_texture_raw","value":"pub fn copy_buffer_to_texture_raw(&mut Self, &handle::RawBuffer<R>, usize,\n&handle::RawTexture<R>, Option<texture::CubeFace>, texture::RawImageInfo)\n-> CopyBufferTextureResult","parent":null,"children":[],"decl_id":null,"docs":" Copy part of a buffer to a texture\n","sig":null,"attributes":[{"value":"/ Copy part of a buffer to a texture","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":14915,"byte_end":14953,"line_start":265,"line_end":265,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":334},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":16628,"byte_end":16654,"line_start":313,"line_end":313,"column_start":12,"column_end":38},"name":"copy_texture_to_buffer_raw","qualname":"<Encoder<R, C>>::copy_texture_to_buffer_raw","value":"pub fn copy_texture_to_buffer_raw(&mut Self, &handle::RawTexture<R>,\nOption<texture::CubeFace>, texture::RawImageInfo, &handle::RawBuffer<R>,\nusize) -> CopyTextureBufferResult","parent":null,"children":[],"decl_id":null,"docs":" Copy part of a texture to a buffer\n","sig":null,"attributes":[{"value":"/ Copy part of a texture to a buffer","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":16578,"byte_end":16616,"line_start":312,"line_end":312,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":335},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":18294,"byte_end":18321,"line_start":360,"line_end":360,"column_start":12,"column_end":39},"name":"copy_texture_to_texture_raw","qualname":"<Encoder<R, C>>::copy_texture_to_texture_raw","value":"pub fn copy_texture_to_texture_raw(&mut Self, &handle::RawTexture<R>,\nOption<texture::CubeFace>, texture::RawImageInfo, &handle::RawTexture<R>,\nOption<texture::CubeFace>, texture::RawImageInfo) -> CopyTextureResult","parent":null,"children":[],"decl_id":null,"docs":" Copy part of a texture to another texture\n","sig":null,"attributes":[{"value":"/ Copy part of a texture to another texture","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":18237,"byte_end":18282,"line_start":359,"line_end":359,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":336},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":20286,"byte_end":20299,"line_start":410,"line_end":410,"column_start":12,"column_end":25},"name":"update_buffer","qualname":"<Encoder<R, C>>::update_buffer","value":"pub fn update_buffer<T: Pod>(&mut Self, &handle::Buffer<R, T>, &[T], usize)\n-> Result<(), UpdateError<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Update a buffer with a slice of data.\n","sig":null,"attributes":[{"value":"/ Update a buffer with a slice of data.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":20233,"byte_end":20274,"line_start":409,"line_end":409,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":338},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":21199,"byte_end":21221,"line_start":434,"line_end":434,"column_start":12,"column_end":34},"name":"update_constant_buffer","qualname":"<Encoder<R, C>>::update_constant_buffer","value":"pub fn update_constant_buffer<T: Copy>(&mut Self, &handle::Buffer<R, T>, &T)","parent":null,"children":[],"decl_id":null,"docs":" Update a buffer with a single structure.\n","sig":null,"attributes":[{"value":"/ Update a buffer with a single structure.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":21143,"byte_end":21187,"line_start":433,"line_end":433,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":343},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":21678,"byte_end":21692,"line_start":447,"line_end":447,"column_start":12,"column_end":26},"name":"update_texture","qualname":"<Encoder<R, C>>::update_texture","value":"pub fn update_texture<S,\nT>(&mut Self, &handle::Texture<R, T::Surface>, Option<texture::CubeFace>,\ntexture::NewImageInfo, &[S::DataType])\n-> Result<(), UpdateError<[texture::Size; ]>> where S: format::SurfaceTyped,\nS::DataType: Copy, T: format::Formatted<Surface = S>","parent":null,"children":[],"decl_id":null,"docs":" Update the contents of a texture.\n","sig":null,"attributes":[{"value":"/ Update the contents of a texture.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":21629,"byte_end":21666,"line_start":446,"line_end":446,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":350},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":24308,"byte_end":24313,"line_start":510,"line_end":510,"column_start":12,"column_end":17},"name":"clear","qualname":"<Encoder<R, C>>::clear","value":"pub fn clear<T: format::RenderFormat>(&mut Self,\n&handle::RenderTargetView<R, T>, T::View) where\nT::View: Into<command::ClearColor>","parent":null,"children":[],"decl_id":null,"docs":" Clears the supplied `RenderTargetView` to the supplied `ClearColor`.\n","sig":null,"attributes":[{"value":"/ Clears the supplied `RenderTargetView` to the supplied `ClearColor`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":24224,"byte_end":24296,"line_start":509,"line_end":509,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":352},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":24587,"byte_end":24598,"line_start":516,"line_end":516,"column_start":12,"column_end":23},"name":"clear_depth","qualname":"<Encoder<R, C>>::clear_depth","value":"pub fn clear_depth<T: format::DepthFormat>(&mut Self,\n&handle::DepthStencilView<R, T>, Depth)","parent":null,"children":[],"decl_id":null,"docs":" Clear a depth view with a specified value.\n","sig":null,"attributes":[{"value":"/ Clear a depth view with a specified value.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":24529,"byte_end":24575,"line_start":515,"line_end":515,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":354},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":24832,"byte_end":24845,"line_start":522,"line_end":522,"column_start":12,"column_end":25},"name":"clear_stencil","qualname":"<Encoder<R, C>>::clear_stencil","value":"pub fn clear_stencil<T: format::StencilFormat>(&mut Self,\n&handle::DepthStencilView<R, T>, Stencil)","parent":null,"children":[],"decl_id":null,"docs":" Clear a stencil view with a specified value.\n","sig":null,"attributes":[{"value":"/ Clear a stencil view with a specified value.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":24772,"byte_end":24820,"line_start":521,"line_end":521,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":356},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":25119,"byte_end":25128,"line_start":529,"line_end":529,"column_start":12,"column_end":21},"name":"clear_raw","qualname":"<Encoder<R, C>>::clear_raw","value":"pub fn clear_raw(&mut Self, &handle::RawRenderTargetView<R>,\ncommand::ClearColor)","parent":null,"children":[],"decl_id":null,"docs":" Clears the supplied `RawRenderTargetView` to the supplied `ClearColor`.\n","sig":null,"attributes":[{"value":"/ Clears the supplied `RawRenderTargetView` to the supplied `ClearColor`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":25032,"byte_end":25107,"line_start":528,"line_end":528,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":357},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":25437,"byte_end":25452,"line_start":538,"line_end":538,"column_start":12,"column_end":27},"name":"clear_depth_raw","qualname":"<Encoder<R, C>>::clear_depth_raw","value":"pub fn clear_depth_raw(&mut Self, &handle::RawDepthStencilView<R>, Depth)","parent":null,"children":[],"decl_id":null,"docs":" Clear a raw depth view with a specified value.\n","sig":null,"attributes":[{"value":"/ Clear a raw depth view with a specified value.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":25375,"byte_end":25425,"line_start":537,"line_end":537,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":358},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":25780,"byte_end":25797,"line_start":546,"line_end":546,"column_start":12,"column_end":29},"name":"clear_stencil_raw","qualname":"<Encoder<R, C>>::clear_stencil_raw","value":"pub fn clear_stencil_raw(&mut Self, &handle::RawDepthStencilView<R>, Stencil)","parent":null,"children":[],"decl_id":null,"docs":" Clear a raw stencil view with a specified value.\n","sig":null,"attributes":[{"value":"/ Clear a raw stencil view with a specified value.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":25716,"byte_end":25768,"line_start":545,"line_end":545,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":359},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":26175,"byte_end":26179,"line_start":554,"line_end":554,"column_start":12,"column_end":16},"name":"draw","qualname":"<Encoder<R, C>>::draw","value":"pub fn draw<D: pso::PipelineData<R>>(&mut Self, &slice::Slice<R>,\n&pso::PipelineState<R, D::Meta>, &D)","parent":null,"children":[],"decl_id":null,"docs":" Draws a `slice::Slice` using a pipeline state object, and its matching `Data` structure.\n","sig":null,"attributes":[{"value":"/ Draws a `slice::Slice` using a pipeline state object, and its matching `Data` structure.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":26071,"byte_end":26163,"line_start":553,"line_end":553,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":361},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":27688,"byte_end":27703,"line_start":578,"line_end":578,"column_start":12,"column_end":27},"name":"generate_mipmap","qualname":"<Encoder<R, C>>::generate_mipmap","value":"pub fn generate_mipmap<T: format::BlendFormat>(&mut Self,\n&handle::ShaderResourceView<R, T>)","parent":null,"children":[],"decl_id":null,"docs":" Generate a mipmap chain for the given resource view.\n","sig":null,"attributes":[{"value":"/ Generate a mipmap chain for the given resource view.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":27620,"byte_end":27676,"line_start":577,"line_end":577,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":363},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":27891,"byte_end":27910,"line_start":583,"line_end":583,"column_start":12,"column_end":31},"name":"generate_mipmap_raw","qualname":"<Encoder<R, C>>::generate_mipmap_raw","value":"pub fn generate_mipmap_raw(&mut Self, &handle::RawShaderResourceView<R>)","parent":null,"children":[],"decl_id":null,"docs":" Untyped version of mipmap generation.\n","sig":null,"attributes":[{"value":"/ Untyped version of mipmap generation.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":27838,"byte_end":27879,"line_start":582,"line_end":582,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1414},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":29429,"byte_end":29436,"line_start":36,"line_end":36,"column_start":5,"column_end":12},"name":"Program","qualname":"::factory::PipelineStateError::Program","value":"PipelineStateError::Program(ProgramError)","parent":{"krate":0,"index":1412},"children":[],"decl_id":null,"docs":" Shader program failed to link.\n","sig":null,"attributes":[{"value":"/ Shader program failed to link.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":29390,"byte_end":29424,"line_start":35,"line_end":35,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1417},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":29523,"byte_end":29537,"line_start":38,"line_end":38,"column_start":5,"column_end":19},"name":"DescriptorInit","qualname":"::factory::PipelineStateError::DescriptorInit","value":"PipelineStateError::DescriptorInit(pso::InitError<S>)","parent":{"krate":0,"index":1412},"children":[],"decl_id":null,"docs":" Unable to create PSO descriptor due to mismatched formats.\n","sig":null,"attributes":[{"value":"/ Unable to create PSO descriptor due to mismatched formats.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":29456,"byte_end":29518,"line_start":37,"line_end":37,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1420},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":29626,"byte_end":29638,"line_start":40,"line_end":40,"column_start":5,"column_end":17},"name":"DeviceCreate","qualname":"::factory::PipelineStateError::DeviceCreate","value":"PipelineStateError::DeviceCreate(CreationError)","parent":{"krate":0,"index":1412},"children":[],"decl_id":null,"docs":" Device failed to create the handle give the descriptor.\n","sig":null,"attributes":[{"value":"/ Device failed to create the handle give the descriptor.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":29562,"byte_end":29621,"line_start":39,"line_end":39,"column_start":5,"column_end":64}}]},{"kind":"Enum","id":{"krate":0,"index":1412},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":29362,"byte_end":29380,"line_start":34,"line_end":34,"column_start":10,"column_end":28},"name":"PipelineStateError","qualname":"::factory::PipelineStateError","value":"pub enum PipelineStateError<S> {\n    Program(ProgramError),\n    DescriptorInit(pso::InitError<S>),\n    DeviceCreate(CreationError),\n}","parent":null,"children":[{"krate":0,"index":1414},{"krate":0,"index":1417},{"krate":0,"index":1420}],"decl_id":null,"docs":" Error creating a PipelineState\n","sig":null,"attributes":[{"value":"/ Error creating a PipelineState","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":29283,"byte_end":29317,"line_start":32,"line_end":32,"column_start":1,"column_end":35}}]},{"kind":"Trait","id":{"krate":0,"index":452},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":32035,"byte_end":32045,"line_start":102,"line_end":102,"column_start":11,"column_end":21},"name":"FactoryExt","qualname":"::factory::FactoryExt","value":"FactoryExt<R: Resources>: Factory<R>","parent":null,"children":[{"krate":0,"index":454},{"krate":0,"index":456},{"krate":0,"index":458},{"krate":0,"index":461},{"krate":0,"index":463},{"krate":0,"index":465},{"krate":0,"index":467},{"krate":0,"index":468},{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":473},{"krate":0,"index":477},{"krate":0,"index":480},{"krate":0,"index":482}],"decl_id":null,"docs":" This trait is responsible for creating and managing graphics resources, much like the `Factory`\n trait in the `gfx` crate. Every `Factory` automatically implements `FactoryExt`.\n","sig":null,"attributes":[{"value":"/ This trait is responsible for creating and managing graphics resources, much like the `Factory`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":31840,"byte_end":31939,"line_start":100,"line_end":100,"column_start":1,"column_end":100}},{"value":"/ trait in the `gfx` crate. Every `Factory` automatically implements `FactoryExt`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":31940,"byte_end":32024,"line_start":101,"line_end":101,"column_start":1,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":454},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":32208,"byte_end":32228,"line_start":105,"line_end":105,"column_start":8,"column_end":28},"name":"create_vertex_buffer","qualname":"::factory::FactoryExt::create_vertex_buffer","value":"pub fn create_vertex_buffer<T>(&mut Self, &[T]) -> handle::Buffer<R, T> where\nT: Pod + pso::buffer::Structure<format::Format>","parent":{"krate":0,"index":452},"children":[],"decl_id":null,"docs":" Creates an immutable vertex buffer from the supplied vertices.\n A `Slice` will have to manually be constructed.\n","sig":null,"attributes":[{"value":"/ Creates an immutable vertex buffer from the supplied vertices.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":32078,"byte_end":32144,"line_start":103,"line_end":103,"column_start":5,"column_end":71}},{"value":"/ A `Slice` will have to manually be constructed.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":32149,"byte_end":32200,"line_start":104,"line_end":104,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":456},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":32724,"byte_end":32743,"line_start":117,"line_end":117,"column_start":8,"column_end":27},"name":"create_index_buffer","qualname":"::factory::FactoryExt::create_index_buffer","value":"pub fn create_index_buffer<T>(&mut Self, T) -> IndexBuffer<R> where\nT: IntoIndexBuffer<R>","parent":{"krate":0,"index":452},"children":[],"decl_id":null,"docs":" Creates an immutable index buffer from the supplied vertices.","sig":null,"attributes":[{"value":"/ Creates an immutable index buffer from the supplied vertices.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":32572,"byte_end":32637,"line_start":114,"line_end":114,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":32642,"byte_end":32645,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ The paramater `indices` is typically a &[u16] or &[u32] slice.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":32650,"byte_end":32716,"line_start":116,"line_end":116,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":458},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":33044,"byte_end":33075,"line_start":126,"line_end":126,"column_start":8,"column_end":39},"name":"create_vertex_buffer_with_slice","qualname":"::factory::FactoryExt::create_vertex_buffer_with_slice","value":"pub fn create_vertex_buffer_with_slice<B, V>(&mut Self, &[V], B)\n-> (handle::Buffer<R, V>, Slice<R>) where V: Pod +\npso::buffer::Structure<format::Format>, B: IntoIndexBuffer<R>","parent":{"krate":0,"index":452},"children":[],"decl_id":null,"docs":" Creates an immutable vertex buffer from the supplied vertices,\n together with a `Slice` from the supplied indices.\n","sig":null,"attributes":[{"value":"/ Creates an immutable vertex buffer from the supplied vertices,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":32911,"byte_end":32977,"line_start":124,"line_end":124,"column_start":5,"column_end":71}},{"value":"/ together with a `Slice` from the supplied indices.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":32982,"byte_end":33036,"line_start":125,"line_end":125,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":461},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":33941,"byte_end":33963,"line_start":149,"line_end":149,"column_start":8,"column_end":30},"name":"create_constant_buffer","qualname":"::factory::FactoryExt::create_constant_buffer","value":"pub fn create_constant_buffer<T>(&mut Self, usize) -> handle::Buffer<R, T>\nwhere T: Copy","parent":{"krate":0,"index":452},"children":[],"decl_id":null,"docs":" Creates a constant buffer for `num` identical elements of type `T`.\n","sig":null,"attributes":[{"value":"/ Creates a constant buffer for `num` identical elements of type `T`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":33862,"byte_end":33933,"line_start":148,"line_end":148,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":463},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":34298,"byte_end":34318,"line_start":159,"line_end":159,"column_start":8,"column_end":28},"name":"create_upload_buffer","qualname":"::factory::FactoryExt::create_upload_buffer","value":"pub fn create_upload_buffer<T>(&mut Self, usize)\n-> Result<handle::Buffer<R, T>, buffer::CreationError>","parent":{"krate":0,"index":452},"children":[],"decl_id":null,"docs":" Creates an upload buffer for `num` elements of type `T`.\n","sig":null,"attributes":[{"value":"/ Creates an upload buffer for `num` elements of type `T`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":34230,"byte_end":34290,"line_start":158,"line_end":158,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":465},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":34688,"byte_end":34710,"line_start":169,"line_end":169,"column_start":8,"column_end":30},"name":"create_download_buffer","qualname":"::factory::FactoryExt::create_download_buffer","value":"pub fn create_download_buffer<T>(&mut Self, usize)\n-> Result<handle::Buffer<R, T>, buffer::CreationError>","parent":{"krate":0,"index":452},"children":[],"decl_id":null,"docs":" Creates a download buffer for `num` elements of type `T`.\n","sig":null,"attributes":[{"value":"/ Creates a download buffer for `num` elements of type `T`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":34619,"byte_end":34680,"line_start":168,"line_end":168,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":467},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":35103,"byte_end":35120,"line_start":179,"line_end":179,"column_start":8,"column_end":25},"name":"create_shader_set","qualname":"::factory::FactoryExt::create_shader_set","value":"pub fn create_shader_set(&mut Self, &[u8], &[u8])\n-> Result<ShaderSet<R>, ProgramError>","parent":{"krate":0,"index":452},"children":[],"decl_id":null,"docs":" Creates a `ShaderSet` from the supplied vertex and pixel shader source code.\n","sig":null,"attributes":[{"value":"/ Creates a `ShaderSet` from the supplied vertex and pixel shader source code.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":35015,"byte_end":35095,"line_start":178,"line_end":178,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":468},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":35576,"byte_end":35602,"line_start":188,"line_end":188,"column_start":8,"column_end":34},"name":"create_shader_set_geometry","qualname":"::factory::FactoryExt::create_shader_set_geometry","value":"pub fn create_shader_set_geometry(&mut Self, &[u8], &[u8], &[u8])\n-> Result<ShaderSet<R>, ProgramError>","parent":{"krate":0,"index":452},"children":[],"decl_id":null,"docs":" Creates a `ShaderSet` from the supplied vertex, geometry, and pixel\n shader source code. Mainly used for testing.\n","sig":null,"attributes":[{"value":"/ Creates a `ShaderSet` from the supplied vertex, geometry, and pixel","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":35444,"byte_end":35515,"line_start":186,"line_end":186,"column_start":5,"column_end":76}},{"value":"/ shader source code. Mainly used for testing.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":35520,"byte_end":35568,"line_start":187,"line_end":187,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":469},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":36172,"byte_end":36202,"line_start":198,"line_end":198,"column_start":8,"column_end":38},"name":"create_shader_set_tessellation","qualname":"::factory::FactoryExt::create_shader_set_tessellation","value":"pub fn create_shader_set_tessellation(&mut Self, &[u8], &[u8], &[u8], &[u8])\n-> Result<ShaderSet<R>, ProgramError>","parent":{"krate":0,"index":452},"children":[],"decl_id":null,"docs":" Creates a `ShaderSet` from the supplied vertex, hull, domain, and pixel\n shader source code. Mainly used for testing.\n","sig":null,"attributes":[{"value":"/ Creates a `ShaderSet` from the supplied vertex, hull, domain, and pixel","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":36036,"byte_end":36111,"line_start":196,"line_end":196,"column_start":5,"column_end":80}},{"value":"/ shader source code. Mainly used for testing.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":36116,"byte_end":36164,"line_start":197,"line_end":197,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":470},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":36880,"byte_end":36924,"line_start":209,"line_end":209,"column_start":8,"column_end":52},"name":"create_shader_set_tessellation_with_geometry","qualname":"::factory::FactoryExt::create_shader_set_tessellation_with_geometry","value":"pub fn create_shader_set_tessellation_with_geometry(&mut Self, &[u8], &[u8],\n&[u8], &[u8], &[u8]) -> Result<ShaderSet<R>, ProgramError>","parent":{"krate":0,"index":452},"children":[],"decl_id":null,"docs":" Creates a `ShaderSet` from the supplied vertex, hull, domain, geometry and pixel\n shader source code. Mainly used for testing.\n","sig":null,"attributes":[{"value":"/ Creates a `ShaderSet` from the supplied vertex, hull, domain, geometry and pixel","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":36735,"byte_end":36819,"line_start":207,"line_end":207,"column_start":5,"column_end":89}},{"value":"/ shader source code. Mainly used for testing.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":36824,"byte_end":36872,"line_start":208,"line_end":208,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":471},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":37672,"byte_end":37684,"line_start":220,"line_end":220,"column_start":8,"column_end":20},"name":"link_program","qualname":"::factory::FactoryExt::link_program","value":"pub fn link_program(&mut Self, &[u8], &[u8])\n-> Result<handle::Program<R>, ProgramError>","parent":{"krate":0,"index":452},"children":[],"decl_id":null,"docs":" Creates a basic shader `Program` from the supplied vertex and pixel shader source code.\n","sig":null,"attributes":[{"value":"/ Creates a basic shader `Program` from the supplied vertex and pixel shader source code.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":37573,"byte_end":37664,"line_start":219,"line_end":219,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":473},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":38065,"byte_end":38086,"line_start":229,"line_end":229,"column_start":8,"column_end":29},"name":"create_pipeline_state","qualname":"::factory::FactoryExt::create_pipeline_state","value":"pub fn create_pipeline_state<I: pso::PipelineInit>(&mut Self, &ShaderSet<R>,\nPrimitive, state::Rasterizer, I)\n-> Result<pso::PipelineState<R, I::Meta>, PipelineStateError<String>>","parent":{"krate":0,"index":452},"children":[],"decl_id":null,"docs":" Similar to `create_pipeline_from_program(..)`, but takes a `ShaderSet` as opposed to a\n shader `Program`.\n","sig":null,"attributes":[{"value":"/ Similar to `create_pipeline_from_program(..)`, but takes a `ShaderSet` as opposed to a","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":37941,"byte_end":38031,"line_start":227,"line_end":227,"column_start":5,"column_end":95}},{"value":"/ shader `Program`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":38036,"byte_end":38057,"line_start":228,"line_end":228,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":477},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":38940,"byte_end":38968,"line_start":246,"line_end":246,"column_start":8,"column_end":36},"name":"create_pipeline_from_program","qualname":"::factory::FactoryExt::create_pipeline_from_program","value":"pub fn create_pipeline_from_program<'a,\nI: pso::PipelineInit>(&mut Self, &'a handle::Program<R>, Primitive,\nstate::Rasterizer, I)\n-> Result<pso::PipelineState<R, I::Meta>, PipelineStateError<&'a str>>","parent":{"krate":0,"index":452},"children":[],"decl_id":null,"docs":" Creates a strongly typed `PipelineState` from its `Init` structure, a shader `Program`, a\n primitive type and a `Rasterizer`.\n","sig":null,"attributes":[{"value":"/ Creates a strongly typed `PipelineState` from its `Init` structure, a shader `Program`, a","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":38796,"byte_end":38889,"line_start":244,"line_end":244,"column_start":5,"column_end":98}},{"value":"/ primitive type and a `Rasterizer`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":38894,"byte_end":38932,"line_start":245,"line_end":245,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":480},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":39797,"byte_end":39819,"line_start":260,"line_end":260,"column_start":8,"column_end":30},"name":"create_pipeline_simple","qualname":"::factory::FactoryExt::create_pipeline_simple","value":"pub fn create_pipeline_simple<I: pso::PipelineInit>(&mut Self, &[u8], &[u8],\nI) -> Result<pso::PipelineState<R, I::Meta>, PipelineStateError<String>>","parent":{"krate":0,"index":452},"children":[],"decl_id":null,"docs":" Creates a strongly typed `PipelineState` from its `Init` structure. Automatically creates a\n shader `Program` from a vertex and pixel shader source, as well as a `Rasterizer` capable\n of rendering triangle faces without culling.\n","sig":null,"attributes":[{"value":"/ Creates a strongly typed `PipelineState` from its `Init` structure. Automatically creates a","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":39543,"byte_end":39638,"line_start":257,"line_end":257,"column_start":5,"column_end":100}},{"value":"/ shader `Program` from a vertex and pixel shader source, as well as a `Rasterizer` capable","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":39643,"byte_end":39736,"line_start":258,"line_end":258,"column_start":5,"column_end":98}},{"value":"/ of rendering triangle faces without culling.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":39741,"byte_end":39789,"line_start":259,"line_end":259,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":482},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":40255,"byte_end":40276,"line_start":269,"line_end":269,"column_start":8,"column_end":29},"name":"create_sampler_linear","qualname":"::factory::FactoryExt::create_sampler_linear","value":"pub fn create_sampler_linear(&mut Self) -> handle::Sampler<R>","parent":{"krate":0,"index":452},"children":[],"decl_id":null,"docs":" Create a linear sampler with clamping to border.\n","sig":null,"attributes":[{"value":"/ Create a linear sampler with clamping to border.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":40195,"byte_end":40247,"line_start":268,"line_end":268,"column_start":5,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":1436},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":43453,"byte_end":43458,"line_start":61,"line_end":61,"column_start":12,"column_end":17},"name":"Slice","qualname":"::slice::Slice","value":"Slice { start, end, base_vertex, instances, buffer }","parent":null,"children":[{"krate":0,"index":1438},{"krate":0,"index":1439},{"krate":0,"index":1440},{"krate":0,"index":1441},{"krate":0,"index":1442}],"decl_id":null,"docs":" A `Slice` dictates in which and in what order vertices get processed. It is required for\n processing a PSO.","sig":null,"attributes":[{"value":"/ A `Slice` dictates in which and in what order vertices get processed. It is required for","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":41414,"byte_end":41506,"line_start":27,"line_end":27,"column_start":1,"column_end":93}},{"value":"/ processing a PSO.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":41507,"byte_end":41528,"line_start":28,"line_end":28,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":41529,"byte_end":41532,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Overview","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":41533,"byte_end":41547,"line_start":30,"line_end":30,"column_start":1,"column_end":15}},{"value":"/ A `Slice` in gfx has a different meaning from the term slice as employed more broadly in rust (`&[T]`).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":41548,"byte_end":41655,"line_start":31,"line_end":31,"column_start":1,"column_end":108}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":41656,"byte_end":41659,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ A `Slice` object in essence dictates in what order the vertices in a `VertexBuffer` get","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":41660,"byte_end":41751,"line_start":33,"line_end":33,"column_start":1,"column_end":92}},{"value":"/ processed. To do this, it contains an internal index-buffer. This `Buffer` is a list of","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":41752,"byte_end":41843,"line_start":34,"line_end":34,"column_start":1,"column_end":92}},{"value":"/ indices into this `VertexBuffer` (vertex-index). A vertex-index of 0 represents the first","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":41844,"byte_end":41937,"line_start":35,"line_end":35,"column_start":1,"column_end":94}},{"value":"/ vertex in the `VertexBuffer`, a vertex-index of 1 represents the second, 2 represents the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":41938,"byte_end":42031,"line_start":36,"line_end":36,"column_start":1,"column_end":94}},{"value":"/ third, and so on. The vertex-indices in the index-buffer are read in order; every vertex-index","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":42032,"byte_end":42130,"line_start":37,"line_end":37,"column_start":1,"column_end":99}},{"value":"/ tells the pipeline which vertex to process next.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":42131,"byte_end":42183,"line_start":38,"line_end":38,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":42184,"byte_end":42187,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ Because the same index can re-appear multiple times, duplicate-vertices can be avoided. For","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":42188,"byte_end":42283,"line_start":40,"line_end":40,"column_start":1,"column_end":96}},{"value":"/ instance, if you want to draw a square, you need two triangles, and thus six vertices. Because","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":42284,"byte_end":42382,"line_start":41,"line_end":41,"column_start":1,"column_end":99}},{"value":"/ the same index can reappear multiple times, this means we can instead use 4 vertices, and 6","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":42383,"byte_end":42478,"line_start":42,"line_end":42,"column_start":1,"column_end":96}},{"value":"/ vertex-indices.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":42479,"byte_end":42498,"line_start":43,"line_end":43,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":42499,"byte_end":42502,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ This index-buffer has a few variants. See the `IndexBuffer` documentation for a detailed","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":42503,"byte_end":42595,"line_start":45,"line_end":45,"column_start":1,"column_end":93}},{"value":"/ description.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":42596,"byte_end":42612,"line_start":46,"line_end":46,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":42613,"byte_end":42616,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ The `start` and `end` fields say where in the index-buffer to start and stop reading.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":42617,"byte_end":42706,"line_start":48,"line_end":48,"column_start":1,"column_end":90}},{"value":"/ Setting `start` to 0, and `end` to the length of the index-buffer, will cause the entire","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":42707,"byte_end":42799,"line_start":49,"line_end":49,"column_start":1,"column_end":93}},{"value":"/ index-buffer to be processed. The `base_vertex` dictates the index of the first vertex","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":42800,"byte_end":42890,"line_start":50,"line_end":50,"column_start":1,"column_end":91}},{"value":"/ in the `VertexBuffer`. This essentially moves the the start of the `VertexBuffer`, to the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":42891,"byte_end":42984,"line_start":51,"line_end":51,"column_start":1,"column_end":94}},{"value":"/ vertex with this index.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":42985,"byte_end":43012,"line_start":52,"line_end":52,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":43013,"byte_end":43016,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ # Constuction & Handling","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":43017,"byte_end":43045,"line_start":54,"line_end":54,"column_start":1,"column_end":29}},{"value":"/ The `Slice` structure can be constructed automatically when using a `Factory` to create a","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":43046,"byte_end":43139,"line_start":55,"line_end":55,"column_start":1,"column_end":94}},{"value":"/ vertex buffer. If needed, it can also be created manually.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":43140,"byte_end":43202,"line_start":56,"line_end":56,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":43203,"byte_end":43206,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ A `Slice` is required to process a PSO, as it contains the needed information on in what order","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":43207,"byte_end":43305,"line_start":58,"line_end":58,"column_start":1,"column_end":99}},{"value":"/ to draw which vertices. As such, every `draw` call on an `Encoder` requires a `Slice`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":43306,"byte_end":43396,"line_start":59,"line_end":59,"column_start":1,"column_end":91}}]},{"kind":"Field","id":{"krate":0,"index":1438},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":43596,"byte_end":43601,"line_start":64,"line_end":64,"column_start":9,"column_end":14},"name":"start","qualname":"::slice::Slice::start","value":"u32","parent":{"krate":0,"index":1436},"children":[],"decl_id":null,"docs":" The start index of the index-buffer. Processing will start at this location in the\n index-buffer.\n","sig":null,"attributes":[{"value":"/ The start index of the index-buffer. Processing will start at this location in the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":43479,"byte_end":43565,"line_start":62,"line_end":62,"column_start":5,"column_end":91}},{"value":"/ index-buffer.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":43570,"byte_end":43587,"line_start":63,"line_end":63,"column_start":5,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":1439},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":43746,"byte_end":43749,"line_start":67,"line_end":67,"column_start":9,"column_end":12},"name":"end","qualname":"::slice::Slice::end","value":"u32","parent":{"krate":0,"index":1436},"children":[],"decl_id":null,"docs":" The end index in the index-buffer. Processing will stop at this location (exclusive) in\n the index buffer.\n","sig":null,"attributes":[{"value":"/ The end index in the index-buffer. Processing will stop at this location (exclusive) in","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":43620,"byte_end":43711,"line_start":65,"line_end":65,"column_start":5,"column_end":96}},{"value":"/ the index buffer.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":43716,"byte_end":43737,"line_start":66,"line_end":66,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":1440},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":43990,"byte_end":44001,"line_start":71,"line_end":71,"column_start":9,"column_end":20},"name":"base_vertex","qualname":"::slice::Slice::base_vertex","value":"u32","parent":{"krate":0,"index":1436},"children":[],"decl_id":null,"docs":" This is the index of the first vertex in the `VertexBuffer`. This value will be added to\n every index in the index-buffer, effectively moving the start of the `VertexBuffer` to this\n base-vertex.\n","sig":null,"attributes":[{"value":"/ This is the index of the first vertex in the `VertexBuffer`. This value will be added to","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":43768,"byte_end":43860,"line_start":68,"line_end":68,"column_start":5,"column_end":97}},{"value":"/ every index in the index-buffer, effectively moving the start of the `VertexBuffer` to this","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":43865,"byte_end":43960,"line_start":69,"line_end":69,"column_start":5,"column_end":100}},{"value":"/ base-vertex.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":43965,"byte_end":43981,"line_start":70,"line_end":70,"column_start":5,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":1441},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":44058,"byte_end":44067,"line_start":73,"line_end":73,"column_start":9,"column_end":18},"name":"instances","qualname":"::slice::Slice::instances","value":"std::option::Option<(u32, u32)>","parent":{"krate":0,"index":1436},"children":[],"decl_id":null,"docs":" Instancing configuration.\n","sig":null,"attributes":[{"value":"/ Instancing configuration.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":44020,"byte_end":44049,"line_start":72,"line_end":72,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":1442},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":44151,"byte_end":44157,"line_start":75,"line_end":75,"column_start":9,"column_end":15},"name":"buffer","qualname":"::slice::Slice::buffer","value":"slice::IndexBuffer<R>","parent":{"krate":0,"index":1436},"children":[],"decl_id":null,"docs":" Represents the type of index-buffer used.\n","sig":null,"attributes":[{"value":"/ Represents the type of index-buffer used.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":44097,"byte_end":44142,"line_start":74,"line_end":74,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":521},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":44276,"byte_end":44293,"line_start":80,"line_end":80,"column_start":12,"column_end":29},"name":"from_vertex_count","qualname":"<Slice<R>>::from_vertex_count","value":"pub fn from_vertex_count(VertexCount) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Slice` with a given vertex count.\n","sig":null,"attributes":[{"value":"/ Creates a new `Slice` with a given vertex count.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":44212,"byte_end":44264,"line_start":79,"line_end":79,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":522},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":44605,"byte_end":44628,"line_start":90,"line_end":90,"column_start":12,"column_end":35},"name":"new_match_vertex_buffer","qualname":"<Slice<R>>::new_match_vertex_buffer","value":"pub fn new_match_vertex_buffer<V>(&handle::Buffer<R, V>) -> Self where\nV: pso::buffer::Structure<Format>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Slice` to match the supplied vertex buffer, from start to end, in order.\n","sig":null,"attributes":[{"value":"/ Creates a new `Slice` to match the supplied vertex buffer, from start to end, in order.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":44502,"byte_end":44593,"line_start":89,"line_end":89,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":524},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":45030,"byte_end":45044,"line_start":102,"line_end":102,"column_start":12,"column_end":26},"name":"get_prim_count","qualname":"<Slice<R>>::get_prim_count","value":"pub fn get_prim_count(&Self, Primitive) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Calculates the number of primitives of the specified type in this `Slice`.\n","sig":null,"attributes":[{"value":"/ Calculates the number of primitives of the specified type in this `Slice`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":44940,"byte_end":45018,"line_start":101,"line_end":101,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":528},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":45869,"byte_end":45877,"line_start":123,"line_end":123,"column_start":12,"column_end":20},"name":"split_at","qualname":"<Slice<R>>::split_at","value":"pub fn split_at(&Self, VertexCount) -> (Self, Self)","parent":null,"children":[],"decl_id":null,"docs":" Divides one slice into two at an index.","sig":null,"attributes":[{"value":"/ Divides one slice into two at an index.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":45631,"byte_end":45674,"line_start":119,"line_end":119,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":45679,"byte_end":45682,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ The first will contain the range in the index-buffer [self.start, mid) (excluding the index mid itself) and the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":45687,"byte_end":45802,"line_start":121,"line_end":121,"column_start":5,"column_end":120}},{"value":"/ second will contain the range [mid, self.end).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":45807,"byte_end":45857,"line_start":122,"line_end":122,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1466},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":47346,"byte_end":47350,"line_start":155,"line_end":155,"column_start":5,"column_end":9},"name":"Auto","qualname":"::slice::IndexBuffer::Auto","value":"IndexBuffer::Auto","parent":{"krate":0,"index":1464},"children":[],"decl_id":null,"docs":" Represents a hypothetical index-buffer from 0 to infinity. In other words, all vertices\n get processed in order.\n","sig":null,"attributes":[{"value":"/ Represents a hypothetical index-buffer from 0 to infinity. In other words, all vertices","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":47218,"byte_end":47309,"line_start":153,"line_end":153,"column_start":5,"column_end":96}},{"value":"/ get processed in order.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":47314,"byte_end":47341,"line_start":154,"line_end":154,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1468},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":47410,"byte_end":47417,"line_start":157,"line_end":157,"column_start":5,"column_end":12},"name":"Index16","qualname":"::slice::IndexBuffer::Index16","value":"IndexBuffer::Index16(handle::Buffer<R, u16>)","parent":{"krate":0,"index":1464},"children":[],"decl_id":null,"docs":" An index-buffer with unsigned 16 bit indices.\n","sig":null,"attributes":[{"value":"/ An index-buffer with unsigned 16 bit indices.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":47356,"byte_end":47405,"line_start":156,"line_end":156,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1471},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":47501,"byte_end":47508,"line_start":159,"line_end":159,"column_start":5,"column_end":12},"name":"Index32","qualname":"::slice::IndexBuffer::Index32","value":"IndexBuffer::Index32(handle::Buffer<R, u32>)","parent":{"krate":0,"index":1464},"children":[],"decl_id":null,"docs":" An index-buffer with unsigned 32 bit indices.\n","sig":null,"attributes":[{"value":"/ An index-buffer with unsigned 32 bit indices.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":47447,"byte_end":47496,"line_start":158,"line_end":158,"column_start":5,"column_end":54}}]},{"kind":"Enum","id":{"krate":0,"index":1464},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":47186,"byte_end":47197,"line_start":152,"line_end":152,"column_start":10,"column_end":21},"name":"IndexBuffer","qualname":"::slice::IndexBuffer","value":"pub enum IndexBuffer<R: Resources> {\n    Auto,\n    Index16(handle::Buffer<R, u16>),\n    Index32(handle::Buffer<R, u32>),\n}","parent":null,"children":[{"krate":0,"index":1466},{"krate":0,"index":1468},{"krate":0,"index":1471}],"decl_id":null,"docs":" Type of index-buffer used in a Slice.","sig":null,"attributes":[{"value":"/ Type of index-buffer used in a Slice.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":46085,"byte_end":46126,"line_start":133,"line_end":133,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":46127,"byte_end":46130,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ The `Auto` variant represents a hypothetical index-buffer from 0 to infinity. In other words,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":46131,"byte_end":46228,"line_start":135,"line_end":135,"column_start":1,"column_end":98}},{"value":"/ all vertices get processed in order. Do note that the `Slice`'s `start` and `end` restrictions","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":46229,"byte_end":46327,"line_start":136,"line_end":136,"column_start":1,"column_end":99}},{"value":"/ still apply for this variant. To render every vertex in the `VertexBuffer`, you would set","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":46328,"byte_end":46421,"line_start":137,"line_end":137,"column_start":1,"column_end":94}},{"value":"/ `start` to 0, and `end` to the `VertexBuffer`'s length.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":46422,"byte_end":46481,"line_start":138,"line_end":138,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":46482,"byte_end":46485,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ The `Index*` variants represent an actual `Buffer` with a list of vertex-indices. The numeric","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":46486,"byte_end":46583,"line_start":140,"line_end":140,"column_start":1,"column_end":98}},{"value":"/ suffix specifies the amount of bits to use per index. Each of these also contains a","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":46584,"byte_end":46671,"line_start":141,"line_end":141,"column_start":1,"column_end":88}},{"value":"/ base-vertex. This is the index of the first vertex in the `VertexBuffer`. This value will be","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":46672,"byte_end":46768,"line_start":142,"line_end":142,"column_start":1,"column_end":97}},{"value":"/ added to every index in the index-buffer, effectively moving the start of the `VertexBuffer` to","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":46769,"byte_end":46868,"line_start":143,"line_end":143,"column_start":1,"column_end":100}},{"value":"/ this base-vertex.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":46869,"byte_end":46890,"line_start":144,"line_end":144,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":46891,"byte_end":46894,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ # Construction & Handling","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":46895,"byte_end":46924,"line_start":146,"line_end":146,"column_start":1,"column_end":30}},{"value":"/ A `IndexBuffer` can be constructed using the `IntoIndexBuffer` trait, from either a slice or a","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":46925,"byte_end":47023,"line_start":147,"line_end":147,"column_start":1,"column_end":99}},{"value":"/ `Buffer` of integers, using a factory.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":47024,"byte_end":47066,"line_start":148,"line_end":148,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":47067,"byte_end":47070,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ An `IndexBuffer` is exclusively used to create `Slice`s.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":47071,"byte_end":47131,"line_start":150,"line_end":150,"column_start":1,"column_end":61}}]},{"kind":"Trait","id":{"krate":0,"index":532},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":47730,"byte_end":47745,"line_start":168,"line_end":168,"column_start":11,"column_end":26},"name":"IntoIndexBuffer","qualname":"::slice::IntoIndexBuffer","value":"IntoIndexBuffer<R: Resources>","parent":null,"children":[{"krate":0,"index":534}],"decl_id":null,"docs":" A helper trait to create `IndexBuffers` from different kinds of data.\n","sig":null,"attributes":[{"value":"/ A helper trait to create `IndexBuffers` from different kinds of data.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":47646,"byte_end":47719,"line_start":167,"line_end":167,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":534},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":47811,"byte_end":47828,"line_start":170,"line_end":170,"column_start":8,"column_end":25},"name":"into_index_buffer","qualname":"::slice::IntoIndexBuffer::into_index_buffer","value":"pub fn into_index_buffer<F: Factory<R> + ?Sized>(Self, &mut F)\n-> IndexBuffer<R>","parent":{"krate":0,"index":532},"children":[],"decl_id":null,"docs":" Turns self into an `IndexBuffer`.\n","sig":null,"attributes":[{"value":"/ Turns self into an `IndexBuffer`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":47766,"byte_end":47803,"line_start":169,"line_end":169,"column_start":5,"column_end":42}}]},{"kind":"Mod","id":{"krate":0,"index":545},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"pso","qualname":"::pso","value":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","parent":null,"children":[{"krate":0,"index":546},{"krate":0,"index":794},{"krate":0,"index":957},{"krate":0,"index":1191},{"krate":0,"index":1223},{"krate":0,"index":1224},{"krate":0,"index":1226},{"krate":0,"index":1229},{"krate":0,"index":1232},{"krate":0,"index":1235},{"krate":0,"index":1238},{"krate":0,"index":1648},{"krate":0,"index":1659},{"krate":0,"index":1662},{"krate":0,"index":1665},{"krate":0,"index":1667},{"krate":0,"index":1241},{"krate":0,"index":1671},{"krate":0,"index":1684},{"krate":0,"index":1687},{"krate":0,"index":1690},{"krate":0,"index":1692},{"krate":0,"index":1245},{"krate":0,"index":1248},{"krate":0,"index":1251},{"krate":0,"index":1696},{"krate":0,"index":1726},{"krate":0,"index":1729},{"krate":0,"index":1732},{"krate":0,"index":1734},{"krate":0,"index":1255},{"krate":0,"index":1260},{"krate":0,"index":1264},{"krate":0,"index":1269},{"krate":0,"index":1273},{"krate":0,"index":1738},{"krate":0,"index":1745},{"krate":0,"index":1749},{"krate":0,"index":1753},{"krate":0,"index":1756},{"krate":0,"index":1760},{"krate":0,"index":1765},{"krate":0,"index":1768},{"krate":0,"index":1277},{"krate":0,"index":1283},{"krate":0,"index":1299}],"decl_id":null,"docs":" A typed high-level graphics pipeline interface.","sig":null,"attributes":[{"value":"/ A typed high-level graphics pipeline interface.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":49593,"byte_end":49644,"line_start":15,"line_end":15,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":49645,"byte_end":49648,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Overview","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":49649,"byte_end":49663,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/ A `PipelineState` holds all information needed to manage a graphics pipeline. It contains","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":49664,"byte_end":49757,"line_start":18,"line_end":18,"column_start":1,"column_end":94}},{"value":"/ information about the shaders used, and on how to bind variables to these shaders. A ","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":49758,"byte_end":49847,"line_start":19,"line_end":19,"column_start":1,"column_end":90}},{"value":"/ `PipelineState` manifests itself in the form of a Pipeline State Object, or PSO in short.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":49848,"byte_end":49941,"line_start":20,"line_end":20,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":49942,"byte_end":49945,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ A Pipeline State Object exists out of different components. Every component represents","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":49946,"byte_end":50036,"line_start":22,"line_end":22,"column_start":1,"column_end":91}},{"value":"/ a resource handle: a shader input or output/target. The types of these components can be found","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":50037,"byte_end":50135,"line_start":23,"line_end":23,"column_start":1,"column_end":99}},{"value":"/ in this module's submodules, grouped by category.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":50136,"byte_end":50189,"line_start":24,"line_end":24,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":50190,"byte_end":50193,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Before all, a Pipeline State Object must be defined. This is done using the `gfx_pipeline`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":50194,"byte_end":50288,"line_start":26,"line_end":26,"column_start":1,"column_end":95}},{"value":"/ macro. This macro creates three different structures:","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":50289,"byte_end":50346,"line_start":27,"line_end":27,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":50347,"byte_end":50350,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ - The `Init` structure contains the location of every PSO component. During shader linking,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":50351,"byte_end":50446,"line_start":29,"line_end":29,"column_start":1,"column_end":96}},{"value":"/   this is used to construct the `Meta` structure. ","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":50447,"byte_end":50501,"line_start":30,"line_end":30,"column_start":1,"column_end":55}},{"value":"/ - The `Meta` structure contains the layout of every PSO. Using the `Meta` structure, the right","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":50502,"byte_end":50600,"line_start":31,"line_end":31,"column_start":1,"column_end":99}},{"value":"/   data is mapped to the right components.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":50601,"byte_end":50646,"line_start":32,"line_end":32,"column_start":1,"column_end":46}},{"value":"/ - The `Data` structure contains the data of all components, to be sent to the GPU. ","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":50647,"byte_end":50734,"line_start":33,"line_end":33,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":50735,"byte_end":50738,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ # Construction and Handling","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":50739,"byte_end":50770,"line_start":35,"line_end":35,"column_start":1,"column_end":32}},{"value":"/ A Pipeline State Object is constructed by a factory, from its `Init` structure, a `Rasterizer`,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":50771,"byte_end":50870,"line_start":36,"line_end":36,"column_start":1,"column_end":100}},{"value":"/ a primitive type and a shader program.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":50871,"byte_end":50913,"line_start":37,"line_end":37,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":50914,"byte_end":50917,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ After construction an `Encoder` can use the PSO along with a `Data` structure matching that","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":50918,"byte_end":51013,"line_start":39,"line_end":39,"column_start":1,"column_end":96}},{"value":"/ PSO to process the shader pipeline, for instance, using the `draw` method.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":51014,"byte_end":51092,"line_start":40,"line_end":40,"column_start":1,"column_end":79}}]},{"kind":"Mod","id":{"krate":0,"index":546},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"buffer","qualname":"::pso::buffer","value":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","parent":null,"children":[{"krate":0,"index":547},{"krate":0,"index":548},{"krate":0,"index":550},{"krate":0,"index":551},{"krate":0,"index":554},{"krate":0,"index":557},{"krate":0,"index":560},{"krate":0,"index":561},{"krate":0,"index":564},{"krate":0,"index":567},{"krate":0,"index":570},{"krate":0,"index":573},{"krate":0,"index":574},{"krate":0,"index":576},{"krate":0,"index":577},{"krate":0,"index":580},{"krate":0,"index":583},{"krate":0,"index":584},{"krate":0,"index":587},{"krate":0,"index":590},{"krate":0,"index":593},{"krate":0,"index":596},{"krate":0,"index":599},{"krate":0,"index":600},{"krate":0,"index":603},{"krate":0,"index":606},{"krate":0,"index":609},{"krate":0,"index":612},{"krate":0,"index":615},{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":625},{"krate":0,"index":629},{"krate":0,"index":632},{"krate":0,"index":637},{"krate":0,"index":641},{"krate":0,"index":645},{"krate":0,"index":648},{"krate":0,"index":649},{"krate":0,"index":650},{"krate":0,"index":653},{"krate":0,"index":656},{"krate":0,"index":659},{"krate":0,"index":661},{"krate":0,"index":1513},{"krate":0,"index":1517},{"krate":0,"index":1519},{"krate":0,"index":1521},{"krate":0,"index":1522},{"krate":0,"index":1524},{"krate":0,"index":1527},{"krate":0,"index":1528},{"krate":0,"index":663},{"krate":0,"index":668},{"krate":0,"index":671},{"krate":0,"index":673},{"krate":0,"index":677},{"krate":0,"index":680},{"krate":0,"index":1531},{"krate":0,"index":1534},{"krate":0,"index":1536},{"krate":0,"index":1538},{"krate":0,"index":1539},{"krate":0,"index":1541},{"krate":0,"index":1544},{"krate":0,"index":1545},{"krate":0,"index":683},{"krate":0,"index":688},{"krate":0,"index":691},{"krate":0,"index":693},{"krate":0,"index":697},{"krate":0,"index":700},{"krate":0,"index":1548},{"krate":0,"index":1551},{"krate":0,"index":1553},{"krate":0,"index":1555},{"krate":0,"index":1556},{"krate":0,"index":1558},{"krate":0,"index":1561},{"krate":0,"index":1562},{"krate":0,"index":703},{"krate":0,"index":714},{"krate":0,"index":727},{"krate":0,"index":733},{"krate":0,"index":735},{"krate":0,"index":744},{"krate":0,"index":748},{"krate":0,"index":756},{"krate":0,"index":761},{"krate":0,"index":768},{"krate":0,"index":772},{"krate":0,"index":779},{"krate":0,"index":784},{"krate":0,"index":790}],"decl_id":null,"docs":" Buffer components for a PSO.\n","sig":null,"attributes":[{"value":"/ Buffer components for a PSO.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":64404,"byte_end":64436,"line_start":15,"line_end":15,"column_start":1,"column_end":33}}]},{"kind":"Trait","id":{"krate":0,"index":615},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":64931,"byte_end":64940,"line_start":29,"line_end":29,"column_start":11,"column_end":20},"name":"Structure","qualname":"::pso::buffer::Structure","value":"Structure<F>","parent":null,"children":[{"krate":0,"index":617}],"decl_id":null,"docs":" A trait to be implemented by any struct having the layout described\n in the graphics API, like a vertex buffer.\n","sig":null,"attributes":[{"value":"/ A trait to be implemented by any struct having the layout described","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":64802,"byte_end":64873,"line_start":27,"line_end":27,"column_start":1,"column_end":72}},{"value":"/ in the graphics API, like a vertex buffer.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":64874,"byte_end":64920,"line_start":28,"line_end":28,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":617},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":64999,"byte_end":65004,"line_start":31,"line_end":31,"column_start":8,"column_end":13},"name":"query","qualname":"::pso::buffer::Structure::query","value":"pub fn query(&str) -> Option<Element<F>>","parent":{"krate":0,"index":615},"children":[],"decl_id":null,"docs":" Get the layout of an element by name.\n","sig":null,"attributes":[{"value":"/ Get the layout of an element by name.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":64950,"byte_end":64991,"line_start":30,"line_end":30,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":619},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":65171,"byte_end":65189,"line_start":37,"line_end":37,"column_start":12,"column_end":30},"name":"VertexBufferCommon","qualname":"::pso::buffer::VertexBufferCommon","value":"","parent":null,"children":[],"decl_id":null,"docs":" Service struct to simplify the implementations of `VertexBuffer` and `InstanceBuffer`.\n","sig":null,"attributes":[{"value":"/ Service struct to simplify the implementations of `VertexBuffer` and `InstanceBuffer`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":65069,"byte_end":65159,"line_start":36,"line_end":36,"column_start":1,"column_end":91}}]},{"kind":"Trait","id":{"krate":0,"index":645},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":66001,"byte_end":66015,"line_start":66,"line_end":66,"column_start":11,"column_end":25},"name":"ToInstanceRate","qualname":"::pso::buffer::ToInstanceRate","value":"ToInstanceRate","parent":null,"children":[{"krate":0,"index":646},{"krate":0,"index":647}],"decl_id":null,"docs":" Helper trait for `VertexBufferCommon` to support variable instance rate.\n","sig":null,"attributes":[{"value":"/ Helper trait for `VertexBufferCommon` to support variable instance rate.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":65914,"byte_end":65990,"line_start":65,"line_end":65,"column_start":1,"column_end":77}}]},{"kind":"Type","id":{"krate":0,"index":646},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":66079,"byte_end":66083,"line_start":68,"line_end":68,"column_start":10,"column_end":14},"name":"Init","qualname":"::pso::buffer::ToInstanceRate::Init","value":"type Init;","parent":{"krate":0,"index":645},"children":[],"decl_id":null,"docs":" The associated init type for PSO component.\n","sig":null,"attributes":[{"value":"/ The associated init type for PSO component.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":66022,"byte_end":66069,"line_start":67,"line_end":67,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":647},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":66149,"byte_end":66157,"line_start":70,"line_end":70,"column_start":8,"column_end":16},"name":"get_rate","qualname":"::pso::buffer::ToInstanceRate::get_rate","value":"pub fn get_rate(&Self::Init) -> InstanceRate","parent":{"krate":0,"index":645},"children":[],"decl_id":null,"docs":" Get an actual instance rate value from the init.\n","sig":null,"attributes":[{"value":"/ Get an actual instance rate value from the init.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":66089,"byte_end":66141,"line_start":69,"line_end":69,"column_start":5,"column_end":57}}]},{"kind":"Enum","id":{"krate":0,"index":648},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":66257,"byte_end":66269,"line_start":74,"line_end":74,"column_start":10,"column_end":22},"name":"NonInstanced","qualname":"::pso::buffer::NonInstanced","value":"pub enum NonInstanced { }","parent":null,"children":[],"decl_id":null,"docs":" Helper phantom type for per-vertex attributes.\n","sig":null,"attributes":[{"value":"/ Helper phantom type for per-vertex attributes.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":66197,"byte_end":66247,"line_start":73,"line_end":73,"column_start":1,"column_end":51}}]},{"kind":"Enum","id":{"krate":0,"index":649},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":66335,"byte_end":66344,"line_start":76,"line_end":76,"column_start":10,"column_end":19},"name":"Instanced","qualname":"::pso::buffer::Instanced","value":"pub enum Instanced { }","parent":null,"children":[],"decl_id":null,"docs":" Helper phantom type for per-instance attributes.\n","sig":null,"attributes":[{"value":"/ Helper phantom type for per-instance attributes.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":66273,"byte_end":66325,"line_start":75,"line_end":75,"column_start":1,"column_end":53}}]},{"kind":"Type","id":{"krate":0,"index":659},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":66813,"byte_end":66825,"line_start":95,"line_end":95,"column_start":10,"column_end":22},"name":"VertexBuffer","qualname":"::pso::buffer::VertexBuffer","value":"VertexBufferCommon<T, NonInstanced>","parent":null,"children":[],"decl_id":null,"docs":" Vertex buffer component. Advanced per vertex.","sig":null,"attributes":[{"value":"/ Vertex buffer component. Advanced per vertex.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":66709,"byte_end":66758,"line_start":91,"line_end":91,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":66759,"byte_end":66762,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ - init: `()`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":66763,"byte_end":66779,"line_start":93,"line_end":93,"column_start":1,"column_end":17}},{"value":"/ - data: `Buffer<T>`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":66780,"byte_end":66803,"line_start":94,"line_end":94,"column_start":1,"column_end":24}}]},{"kind":"Type","id":{"krate":0,"index":661},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":66962,"byte_end":66976,"line_start":98,"line_end":98,"column_start":10,"column_end":24},"name":"InstanceBuffer","qualname":"::pso::buffer::InstanceBuffer","value":"VertexBufferCommon<T, Instanced>","parent":null,"children":[],"decl_id":null,"docs":" Instance buffer component. Same as the vertex buffer but advances per instance.\n","sig":null,"attributes":[{"value":"/ Instance buffer component. Same as the vertex buffer but advances per instance.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":66869,"byte_end":66952,"line_start":97,"line_end":97,"column_start":1,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":1513},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":67280,"byte_end":67295,"line_start":106,"line_end":106,"column_start":12,"column_end":27},"name":"RawVertexBuffer","qualname":"::pso::buffer::RawVertexBuffer","value":"","parent":null,"children":[],"decl_id":null,"docs":" Raw vertex/instance buffer component. Can be used when the formats of vertex attributes\n are not known at compile time.","sig":null,"attributes":[{"value":"/ Raw vertex/instance buffer component. Can be used when the formats of vertex attributes","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":67017,"byte_end":67108,"line_start":100,"line_end":100,"column_start":1,"column_end":92}},{"value":"/ are not known at compile time.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":67109,"byte_end":67143,"line_start":101,"line_end":101,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":67144,"byte_end":67147,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ - init: `(&[&str, element], stride, inst_rate)`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":67148,"byte_end":67199,"line_start":103,"line_end":103,"column_start":1,"column_end":52}},{"value":"/ - data: `RawBuffer`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":67200,"byte_end":67223,"line_start":104,"line_end":104,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":663},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":67447,"byte_end":67461,"line_start":112,"line_end":112,"column_start":12,"column_end":26},"name":"ConstantBuffer","qualname":"::pso::buffer::ConstantBuffer","value":"","parent":null,"children":[],"decl_id":null,"docs":" Constant buffer component.","sig":null,"attributes":[{"value":"/ Constant buffer component.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":67337,"byte_end":67367,"line_start":108,"line_end":108,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":67368,"byte_end":67371,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ - init: `&str` = name of the buffer","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":67372,"byte_end":67411,"line_start":110,"line_end":110,"column_start":1,"column_end":40}},{"value":"/ - data: `Buffer<T>`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":67412,"byte_end":67435,"line_start":111,"line_end":111,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":1531},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":68458,"byte_end":68475,"line_start":145,"line_end":145,"column_start":12,"column_end":29},"name":"RawConstantBuffer","qualname":"::pso::buffer::RawConstantBuffer","value":"","parent":null,"children":[],"decl_id":null,"docs":" Raw constant buffer component.","sig":null,"attributes":[{"value":"/ Raw constant buffer component.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":68299,"byte_end":68333,"line_start":140,"line_end":140,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":68334,"byte_end":68337,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ - init: `&str` = name of the buffer","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":68338,"byte_end":68377,"line_start":142,"line_end":142,"column_start":1,"column_end":40}},{"value":"/ - data: `RawBuffer`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":68378,"byte_end":68401,"line_start":143,"line_end":143,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":683},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":68745,"byte_end":68751,"line_start":152,"line_end":152,"column_start":12,"column_end":18},"name":"Global","qualname":"::pso::buffer::Global","value":"","parent":null,"children":[],"decl_id":null,"docs":" Global (uniform) constant component. Describes a free-standing value passed\n into the shader, which is not enclosed into any constant buffer.","sig":null,"attributes":[{"value":"/ Global (uniform) constant component. Describes a free-standing value passed","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":68515,"byte_end":68594,"line_start":147,"line_end":147,"column_start":1,"column_end":80}},{"value":"/ into the shader, which is not enclosed into any constant buffer.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":68595,"byte_end":68663,"line_start":148,"line_end":148,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":68664,"byte_end":68667,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ - init: `&str` = name of the constant","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":68668,"byte_end":68709,"line_start":150,"line_end":150,"column_start":1,"column_end":42}},{"value":"/ - data: `T` = value","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":68710,"byte_end":68733,"line_start":151,"line_end":151,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":1548},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":69701,"byte_end":69710,"line_start":186,"line_end":186,"column_start":12,"column_end":21},"name":"RawGlobal","qualname":"::pso::buffer::RawGlobal","value":"","parent":null,"children":[],"decl_id":null,"docs":" Raw global (uniform) constant component. Describes a free-standing value\n passed into the shader, which is not enclosed in any constant buffer.","sig":null,"attributes":[{"value":"/ Raw global (uniform) constant component. Describes a free-standing value","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":69413,"byte_end":69489,"line_start":180,"line_end":180,"column_start":1,"column_end":77}},{"value":"/ passed into the shader, which is not enclosed in any constant buffer.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":69490,"byte_end":69563,"line_start":181,"line_end":181,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":69564,"byte_end":69567,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ - init: `&str` = name of the constant","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":69568,"byte_end":69609,"line_start":183,"line_end":183,"column_start":1,"column_end":42}},{"value":"/ - data: `UniformValue` = value","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":69610,"byte_end":69644,"line_start":184,"line_end":184,"column_start":1,"column_end":35}}]},{"kind":"Mod","id":{"krate":0,"index":794},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"resource","qualname":"::pso::resource","value":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","parent":null,"children":[{"krate":0,"index":795},{"krate":0,"index":796},{"krate":0,"index":798},{"krate":0,"index":799},{"krate":0,"index":802},{"krate":0,"index":805},{"krate":0,"index":808},{"krate":0,"index":811},{"krate":0,"index":812},{"krate":0,"index":815},{"krate":0,"index":818},{"krate":0,"index":821},{"krate":0,"index":824},{"krate":0,"index":825},{"krate":0,"index":827},{"krate":0,"index":828},{"krate":0,"index":831},{"krate":0,"index":834},{"krate":0,"index":837},{"krate":0,"index":840},{"krate":0,"index":845},{"krate":0,"index":848},{"krate":0,"index":850},{"krate":0,"index":854},{"krate":0,"index":857},{"krate":0,"index":1565},{"krate":0,"index":1568},{"krate":0,"index":1570},{"krate":0,"index":1572},{"krate":0,"index":1573},{"krate":0,"index":1575},{"krate":0,"index":1578},{"krate":0,"index":1579},{"krate":0,"index":860},{"krate":0,"index":865},{"krate":0,"index":868},{"krate":0,"index":870},{"krate":0,"index":874},{"krate":0,"index":877},{"krate":0,"index":1582},{"krate":0,"index":1585},{"krate":0,"index":1587},{"krate":0,"index":1589},{"krate":0,"index":1590},{"krate":0,"index":1592},{"krate":0,"index":1595},{"krate":0,"index":1596},{"krate":0,"index":880},{"krate":0,"index":885},{"krate":0,"index":888},{"krate":0,"index":890},{"krate":0,"index":894},{"krate":0,"index":897},{"krate":0,"index":900},{"krate":0,"index":907},{"krate":0,"index":912},{"krate":0,"index":918},{"krate":0,"index":922},{"krate":0,"index":929},{"krate":0,"index":934},{"krate":0,"index":940},{"krate":0,"index":944},{"krate":0,"index":952}],"decl_id":null,"docs":" Resource components for a PSO.\n","sig":null,"attributes":[{"value":"/ Resource components for a PSO.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":79065,"byte_end":79099,"line_start":15,"line_end":15,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":840},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":79544,"byte_end":79558,"line_start":29,"line_end":29,"column_start":12,"column_end":26},"name":"ShaderResource","qualname":"::pso::resource::ShaderResource","value":"","parent":null,"children":[],"decl_id":null,"docs":" Shader resource component (SRV). Typically is a view into some texture,\n but can also be a buffer.","sig":null,"attributes":[{"value":"/ Shader resource component (SRV). Typically is a view into some texture,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":79345,"byte_end":79420,"line_start":24,"line_end":24,"column_start":1,"column_end":76}},{"value":"/ but can also be a buffer.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":79421,"byte_end":79450,"line_start":25,"line_end":25,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":79451,"byte_end":79454,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ - init: `&str` = name of the resource","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":79455,"byte_end":79496,"line_start":27,"line_end":27,"column_start":1,"column_end":42}},{"value":"/ - data: `ShaderResourceView<T>`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":79497,"byte_end":79532,"line_start":28,"line_end":28,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":1565},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":80421,"byte_end":80438,"line_start":62,"line_end":62,"column_start":12,"column_end":29},"name":"RawShaderResource","qualname":"::pso::resource::RawShaderResource","value":"","parent":null,"children":[],"decl_id":null,"docs":" Raw (untyped) shader resource (SRV).","sig":null,"attributes":[{"value":"/ Raw (untyped) shader resource (SRV).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":80210,"byte_end":80250,"line_start":57,"line_end":57,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":80251,"byte_end":80254,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ - init: `&str` = name of the resource. This may change in the future.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":80255,"byte_end":80328,"line_start":59,"line_end":59,"column_start":1,"column_end":74}},{"value":"/ - data: `RawShaderResourceView`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":80329,"byte_end":80364,"line_start":60,"line_end":60,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":860},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":80760,"byte_end":80775,"line_start":70,"line_end":70,"column_start":12,"column_end":27},"name":"UnorderedAccess","qualname":"::pso::resource::UnorderedAccess","value":"","parent":null,"children":[],"decl_id":null,"docs":" Unordered access component (UAV). A writable resource (texture/buffer)\n with no defined access order across simultaneously executing shaders.\n Supported on DX10 and higher.","sig":null,"attributes":[{"value":"/ Unordered access component (UAV). A writable resource (texture/buffer)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":80483,"byte_end":80557,"line_start":64,"line_end":64,"column_start":1,"column_end":75}},{"value":"/ with no defined access order across simultaneously executing shaders.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":80558,"byte_end":80631,"line_start":65,"line_end":65,"column_start":1,"column_end":74}},{"value":"/ Supported on DX10 and higher.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":80632,"byte_end":80665,"line_start":66,"line_end":66,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":80666,"byte_end":80669,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ - init: `&str` = name of the resource","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":80670,"byte_end":80711,"line_start":68,"line_end":68,"column_start":1,"column_end":42}},{"value":"/ - data: `UnorderedAccessView<T>`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":80712,"byte_end":80748,"line_start":69,"line_end":69,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1582},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":81603,"byte_end":81610,"line_start":103,"line_end":103,"column_start":12,"column_end":19},"name":"Sampler","qualname":"::pso::resource::Sampler","value":"","parent":null,"children":[],"decl_id":null,"docs":" Sampler component.","sig":null,"attributes":[{"value":"/ Sampler component.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":81457,"byte_end":81479,"line_start":98,"line_end":98,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":81480,"byte_end":81483,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ - init: `&str` = name of the sampler","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":81484,"byte_end":81524,"line_start":100,"line_end":100,"column_start":1,"column_end":41}},{"value":"/ - data: `Sampler`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":81525,"byte_end":81546,"line_start":101,"line_end":101,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":880},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":82073,"byte_end":82087,"line_start":112,"line_end":112,"column_start":12,"column_end":26},"name":"TextureSampler","qualname":"::pso::resource::TextureSampler","value":"","parent":null,"children":[],"decl_id":null,"docs":" A convenience type for a texture paired with a sampler.\n It only makes sense for DX9 class hardware, where every texture by default\n is bundled with a sampler, hence they are represented by the same name.\n In DX10 and higher samplers are totally separated from the textures.","sig":null,"attributes":[{"value":"/ A convenience type for a texture paired with a sampler.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":81650,"byte_end":81709,"line_start":105,"line_end":105,"column_start":1,"column_end":60}},{"value":"/ It only makes sense for DX9 class hardware, where every texture by default","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":81710,"byte_end":81788,"line_start":106,"line_end":106,"column_start":1,"column_end":79}},{"value":"/ is bundled with a sampler, hence they are represented by the same name.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":81789,"byte_end":81864,"line_start":107,"line_end":107,"column_start":1,"column_end":76}},{"value":"/ In DX10 and higher samplers are totally separated from the textures.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":81865,"byte_end":81937,"line_start":108,"line_end":108,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":81938,"byte_end":81941,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ - init: `&str` = name of the sampler/texture (assuming they match)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":81942,"byte_end":82012,"line_start":110,"line_end":110,"column_start":1,"column_end":71}},{"value":"/ - data: (`ShaderResourceView<T>`, `Sampler`)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":82013,"byte_end":82061,"line_start":111,"line_end":111,"column_start":1,"column_end":49}}]},{"kind":"Mod","id":{"krate":0,"index":957},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"target","qualname":"::pso::target","value":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","parent":null,"children":[{"krate":0,"index":958},{"krate":0,"index":959},{"krate":0,"index":961},{"krate":0,"index":962},{"krate":0,"index":965},{"krate":0,"index":968},{"krate":0,"index":969},{"krate":0,"index":972},{"krate":0,"index":975},{"krate":0,"index":978},{"krate":0,"index":981},{"krate":0,"index":984},{"krate":0,"index":987},{"krate":0,"index":990},{"krate":0,"index":991},{"krate":0,"index":994},{"krate":0,"index":997},{"krate":0,"index":1000},{"krate":0,"index":1003},{"krate":0,"index":1008},{"krate":0,"index":1011},{"krate":0,"index":1013},{"krate":0,"index":1017},{"krate":0,"index":1020},{"krate":0,"index":1023},{"krate":0,"index":1028},{"krate":0,"index":1031},{"krate":0,"index":1033},{"krate":0,"index":1037},{"krate":0,"index":1040},{"krate":0,"index":1599},{"krate":0,"index":1602},{"krate":0,"index":1604},{"krate":0,"index":1606},{"krate":0,"index":1607},{"krate":0,"index":1609},{"krate":0,"index":1612},{"krate":0,"index":1613},{"krate":0,"index":1043},{"krate":0,"index":1047},{"krate":0,"index":1050},{"krate":0,"index":1052},{"krate":0,"index":1056},{"krate":0,"index":1059},{"krate":0,"index":1062},{"krate":0,"index":1066},{"krate":0,"index":1069},{"krate":0,"index":1071},{"krate":0,"index":1075},{"krate":0,"index":1078},{"krate":0,"index":1081},{"krate":0,"index":1085},{"krate":0,"index":1088},{"krate":0,"index":1090},{"krate":0,"index":1094},{"krate":0,"index":1097},{"krate":0,"index":1616},{"krate":0,"index":1619},{"krate":0,"index":1621},{"krate":0,"index":1623},{"krate":0,"index":1624},{"krate":0,"index":1626},{"krate":0,"index":1629},{"krate":0,"index":1630},{"krate":0,"index":1633},{"krate":0,"index":1635},{"krate":0,"index":1637},{"krate":0,"index":1639},{"krate":0,"index":1640},{"krate":0,"index":1642},{"krate":0,"index":1645},{"krate":0,"index":1646},{"krate":0,"index":1100},{"krate":0,"index":1107},{"krate":0,"index":1112},{"krate":0,"index":1119},{"krate":0,"index":1124},{"krate":0,"index":1132},{"krate":0,"index":1136},{"krate":0,"index":1143},{"krate":0,"index":1148},{"krate":0,"index":1155},{"krate":0,"index":1160},{"krate":0,"index":1167},{"krate":0,"index":1172},{"krate":0,"index":1178},{"krate":0,"index":1182},{"krate":0,"index":1187}],"decl_id":null,"docs":" Render target components for a PSO.\n","sig":null,"attributes":[{"value":"/ Render target components for a PSO.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":88310,"byte_end":88349,"line_start":15,"line_end":15,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1003},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":88739,"byte_end":88751,"line_start":28,"line_end":28,"column_start":12,"column_end":24},"name":"RenderTarget","qualname":"::pso::target::RenderTarget","value":"","parent":null,"children":[],"decl_id":null,"docs":" Render target component. Typically points to a color-formatted texture.","sig":null,"attributes":[{"value":"/ Render target component. Typically points to a color-formatted texture.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":88574,"byte_end":88649,"line_start":24,"line_end":24,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":88650,"byte_end":88653,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ - init: `&str` = name of the target","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":88654,"byte_end":88693,"line_start":26,"line_end":26,"column_start":1,"column_end":40}},{"value":"/ - data: `RenderTargetView<T>`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":88694,"byte_end":88727,"line_start":27,"line_end":27,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":1023},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":89555,"byte_end":89566,"line_start":60,"line_end":60,"column_start":12,"column_end":23},"name":"BlendTarget","qualname":"::pso::target::BlendTarget","value":"","parent":null,"children":[],"decl_id":null,"docs":" Render target component with active blending mode.","sig":null,"attributes":[{"value":"/ Render target component with active blending mode.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":89391,"byte_end":89445,"line_start":56,"line_end":56,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":89446,"byte_end":89449,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ - init: (`&str`, `ColorMask`, `Blend` = blending state)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":89450,"byte_end":89509,"line_start":58,"line_end":58,"column_start":1,"column_end":60}},{"value":"/ - data: `RenderTargetView<T>`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":89510,"byte_end":89543,"line_start":59,"line_end":59,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":1599},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":90419,"byte_end":90434,"line_start":93,"line_end":93,"column_start":12,"column_end":27},"name":"RawRenderTarget","qualname":"::pso::target::RawRenderTarget","value":"","parent":null,"children":[],"decl_id":null,"docs":" Raw (untyped) render target component with optional blending.","sig":null,"attributes":[{"value":"/ Raw (untyped) render target component with optional blending.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":90198,"byte_end":90263,"line_start":88,"line_end":88,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":90264,"byte_end":90267,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ - init: (`&str`, `Format`, `ColorMask`, `Option<Blend>`)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":90268,"byte_end":90328,"line_start":90,"line_end":90,"column_start":1,"column_end":61}},{"value":"/ - data: `RawRenderTargetView`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":90329,"byte_end":90362,"line_start":91,"line_end":91,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":1043},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":90567,"byte_end":90578,"line_start":99,"line_end":99,"column_start":12,"column_end":23},"name":"DepthTarget","qualname":"::pso::target::DepthTarget","value":"","parent":null,"children":[],"decl_id":null,"docs":" Depth target component.","sig":null,"attributes":[{"value":"/ Depth target component.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":90456,"byte_end":90483,"line_start":95,"line_end":95,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":90484,"byte_end":90487,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ - init: `Depth` = depth state","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":90488,"byte_end":90521,"line_start":97,"line_end":97,"column_start":1,"column_end":34}},{"value":"/ - data: `DepthStencilView<T>`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":90522,"byte_end":90555,"line_start":98,"line_end":98,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":1062},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":91246,"byte_end":91259,"line_start":127,"line_end":127,"column_start":12,"column_end":25},"name":"StencilTarget","qualname":"::pso::target::StencilTarget","value":"","parent":null,"children":[],"decl_id":null,"docs":" Stencil target component.","sig":null,"attributes":[{"value":"/ Stencil target component.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":91083,"byte_end":91112,"line_start":123,"line_end":123,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":91113,"byte_end":91116,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ - init: `Stencil` = stencil state","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":91117,"byte_end":91154,"line_start":125,"line_end":125,"column_start":1,"column_end":38}},{"value":"/ - data: (`DepthStencilView<T>`, `(front, back)` = stencil reference values)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":91155,"byte_end":91234,"line_start":126,"line_end":126,"column_start":1,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":1081},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":91972,"byte_end":91990,"line_start":155,"line_end":155,"column_start":12,"column_end":30},"name":"DepthStencilTarget","qualname":"::pso::target::DepthStencilTarget","value":"","parent":null,"children":[],"decl_id":null,"docs":" Depth + stencil target component.","sig":null,"attributes":[{"value":"/ Depth + stencil target component.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":91776,"byte_end":91813,"line_start":151,"line_end":151,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":91814,"byte_end":91817,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ - init: (`Depth` = depth state, `Stencil` = stencil state)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":91818,"byte_end":91880,"line_start":153,"line_end":153,"column_start":1,"column_end":63}},{"value":"/ - data: (`DepthStencilView<T>`, `(front, back)` = stencil reference values)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":91881,"byte_end":91960,"line_start":154,"line_end":154,"column_start":1,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":1616},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":92710,"byte_end":92717,"line_start":184,"line_end":184,"column_start":12,"column_end":19},"name":"Scissor","qualname":"::pso::target::Scissor","value":"","parent":null,"children":[],"decl_id":null,"docs":" Scissor component. Sets up the scissor test for rendering.","sig":null,"attributes":[{"value":"/ Scissor component. Sets up the scissor test for rendering.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":92537,"byte_end":92599,"line_start":179,"line_end":179,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":92600,"byte_end":92603,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ - init: `()`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":92604,"byte_end":92620,"line_start":181,"line_end":181,"column_start":1,"column_end":17}},{"value":"/ - data: `Rect` = target area","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":92621,"byte_end":92653,"line_start":182,"line_end":182,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":1633},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":92901,"byte_end":92909,"line_start":191,"line_end":191,"column_start":12,"column_end":20},"name":"BlendRef","qualname":"::pso::target::BlendRef","value":"","parent":null,"children":[],"decl_id":null,"docs":" Blend reference component. Sets up the reference color for blending.","sig":null,"attributes":[{"value":"/ Blend reference component. Sets up the reference color for blending.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":92726,"byte_end":92798,"line_start":186,"line_end":186,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":92799,"byte_end":92802,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ - init: `()`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":92803,"byte_end":92819,"line_start":188,"line_end":188,"column_start":1,"column_end":17}},{"value":"/ - data: `ColorValue`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":92820,"byte_end":92844,"line_start":189,"line_end":189,"column_start":1,"column_end":25}}]},{"kind":"Mod","id":{"krate":0,"index":1191},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\bundle.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"bundle","qualname":"::pso::bundle","value":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\bundle.rs","parent":null,"children":[{"krate":0,"index":1192},{"krate":0,"index":1193},{"krate":0,"index":1196},{"krate":0,"index":1199},{"krate":0,"index":1202},{"krate":0,"index":1205},{"krate":0,"index":1208},{"krate":0,"index":1211},{"krate":0,"index":1217}],"decl_id":null,"docs":" Combine slice data with pipeline state.","sig":null,"attributes":[{"value":"/ Combine slice data with pipeline state.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\bundle.rs","byte_start":99448,"byte_end":99491,"line_start":1,"line_end":1,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\bundle.rs","byte_start":99492,"byte_end":99495,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Suitable for use when PSO is always used with the same one slice.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\bundle.rs","byte_start":99496,"byte_end":99565,"line_start":3,"line_end":3,"column_start":1,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":1211},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\bundle.rs","byte_start":99691,"byte_end":99697,"line_start":9,"line_end":9,"column_start":12,"column_end":18},"name":"Bundle","qualname":"::pso::bundle::Bundle","value":"Bundle { slice, pso, data }","parent":null,"children":[{"krate":0,"index":1214},{"krate":0,"index":1215},{"krate":0,"index":1216}],"decl_id":null,"docs":" Slice-PSO bundle.\n","sig":null,"attributes":[{"value":"/ Slice-PSO bundle.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\bundle.rs","byte_start":99658,"byte_end":99679,"line_start":8,"line_end":8,"column_start":1,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":1214},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\bundle.rs","byte_start":99759,"byte_end":99764,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"name":"slice","qualname":"::pso::bundle::Bundle::slice","value":"slice::Slice<R>","parent":{"krate":0,"index":1211},"children":[],"decl_id":null,"docs":" Slice\n","sig":null,"attributes":[{"value":"/ Slice","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\bundle.rs","byte_start":99741,"byte_end":99750,"line_start":10,"line_end":10,"column_start":5,"column_end":14}}]},{"kind":"Field","id":{"krate":0,"index":1215},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\bundle.rs","byte_start":99807,"byte_end":99810,"line_start":13,"line_end":13,"column_start":9,"column_end":12},"name":"pso","qualname":"::pso::bundle::Bundle::pso","value":"pso::PipelineState<R, <Data as pso::PipelineData<R>>::Meta>","parent":{"krate":0,"index":1211},"children":[],"decl_id":null,"docs":" Pipeline state\n","sig":null,"attributes":[{"value":"/ Pipeline state","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\bundle.rs","byte_start":99780,"byte_end":99798,"line_start":12,"line_end":12,"column_start":5,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":1216},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\bundle.rs","byte_start":99872,"byte_end":99876,"line_start":15,"line_end":15,"column_start":9,"column_end":13},"name":"data","qualname":"::pso::bundle::Bundle::data","value":"Data","parent":{"krate":0,"index":1211},"children":[],"decl_id":null,"docs":" Pipeline data\n","sig":null,"attributes":[{"value":"/ Pipeline data","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\bundle.rs","byte_start":99846,"byte_end":99863,"line_start":14,"line_end":14,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1220},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\bundle.rs","byte_start":99984,"byte_end":99987,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<Bundle<R, Data>>::new","value":"pub fn new(Slice<R>, PipelineState<R, Data::Meta>, Data) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create new Bundle\n","sig":null,"attributes":[{"value":"/ Create new Bundle","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\bundle.rs","byte_start":99951,"byte_end":99972,"line_start":19,"line_end":19,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1221},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\bundle.rs","byte_start":100218,"byte_end":100224,"line_start":30,"line_end":30,"column_start":12,"column_end":18},"name":"encode","qualname":"<Bundle<R, Data>>::encode","value":"pub fn encode<C>(&Self, &mut Encoder<R, C>) where C: CommandBuffer<R>","parent":null,"children":[],"decl_id":null,"docs":" Draw bundle using encoder.\n","sig":null,"attributes":[{"value":"/ Draw bundle using encoder.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\bundle.rs","byte_start":100176,"byte_end":100206,"line_start":29,"line_end":29,"column_start":5,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":1648},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":51701,"byte_end":51711,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"name":"RawDataSet","qualname":"::pso::RawDataSet","value":"RawDataSet { vertex_buffers, constant_buffers, global_constants, resource_views, unordered_views, samplers, pixel_targets, ref_values, scissor }","parent":null,"children":[{"krate":0,"index":1650},{"krate":0,"index":1651},{"krate":0,"index":1652},{"krate":0,"index":1653},{"krate":0,"index":1654},{"krate":0,"index":1655},{"krate":0,"index":1656},{"krate":0,"index":1657},{"krate":0,"index":1658}],"decl_id":null,"docs":" A complete set of raw data that needs to be specified at run-time\n whenever we draw something with a PSO. This is what \"data\" struct\n gets transformed into when we call `encoder.draw(...)` with it.\n It doesn't have any typing information, since PSO knows what\n format and layout to expect from each resource.\n","sig":null,"attributes":[{"value":"/ A complete set of raw data that needs to be specified at run-time","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":51307,"byte_end":51376,"line_start":54,"line_end":54,"column_start":1,"column_end":70}},{"value":"/ whenever we draw something with a PSO. This is what \"data\" struct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":51377,"byte_end":51446,"line_start":55,"line_end":55,"column_start":1,"column_end":70}},{"value":"/ gets transformed into when we call `encoder.draw(...)` with it.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":51447,"byte_end":51514,"line_start":56,"line_end":56,"column_start":1,"column_end":68}},{"value":"/ It doesn't have any typing information, since PSO knows what","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":51515,"byte_end":51579,"line_start":57,"line_end":57,"column_start":1,"column_end":65}},{"value":"/ format and layout to expect from each resource.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":51580,"byte_end":51631,"line_start":58,"line_end":58,"column_start":1,"column_end":52}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":51632,"byte_end":51654,"line_start":59,"line_end":59,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":1650},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":51738,"byte_end":51752,"line_start":62,"line_end":62,"column_start":9,"column_end":23},"name":"vertex_buffers","qualname":"::pso::RawDataSet::vertex_buffers","value":"core::pso::VertexBufferSet<R>","parent":{"krate":0,"index":1648},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1651},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":51790,"byte_end":51806,"line_start":63,"line_end":63,"column_start":9,"column_end":25},"name":"constant_buffers","qualname":"::pso::RawDataSet::constant_buffers","value":"std::vec::Vec<core::pso::ConstantBufferParam<R>>","parent":{"krate":0,"index":1648},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1652},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":51853,"byte_end":51869,"line_start":64,"line_end":64,"column_start":9,"column_end":25},"name":"global_constants","qualname":"::pso::RawDataSet::global_constants","value":"std::vec::Vec<(usize, core::shade::UniformValue)>","parent":{"krate":0,"index":1648},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1653},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":51930,"byte_end":51944,"line_start":65,"line_end":65,"column_start":9,"column_end":23},"name":"resource_views","qualname":"::pso::RawDataSet::resource_views","value":"std::vec::Vec<core::pso::ResourceViewParam<R>>","parent":{"krate":0,"index":1648},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1654},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":51989,"byte_end":52004,"line_start":66,"line_end":66,"column_start":9,"column_end":24},"name":"unordered_views","qualname":"::pso::RawDataSet::unordered_views","value":"std::vec::Vec<core::pso::UnorderedViewParam<R>>","parent":{"krate":0,"index":1648},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1655},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":52050,"byte_end":52058,"line_start":67,"line_end":67,"column_start":9,"column_end":17},"name":"samplers","qualname":"::pso::RawDataSet::samplers","value":"std::vec::Vec<core::pso::SamplerParam<R>>","parent":{"krate":0,"index":1648},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1656},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":52098,"byte_end":52111,"line_start":68,"line_end":68,"column_start":9,"column_end":22},"name":"pixel_targets","qualname":"::pso::RawDataSet::pixel_targets","value":"core::pso::PixelTargetSet<R>","parent":{"krate":0,"index":1648},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1657},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":52148,"byte_end":52158,"line_start":69,"line_end":69,"column_start":9,"column_end":19},"name":"ref_values","qualname":"::pso::RawDataSet::ref_values","value":"draw_state::state::RefValues","parent":{"krate":0,"index":1648},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1658},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":52189,"byte_end":52196,"line_start":70,"line_end":70,"column_start":9,"column_end":16},"name":"scissor","qualname":"::pso::RawDataSet::scissor","value":"draw_state::target::Rect","parent":{"krate":0,"index":1648},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1243},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":52301,"byte_end":52304,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"new","qualname":"<RawDataSet<R>>::new","value":"pub fn new() -> RawDataSet<R>","parent":null,"children":[],"decl_id":null,"docs":" Create an empty data set.\n","sig":null,"attributes":[{"value":"/ Create an empty data set.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":52260,"byte_end":52289,"line_start":74,"line_end":74,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1244},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":52827,"byte_end":52832,"line_start":89,"line_end":89,"column_start":12,"column_end":17},"name":"clear","qualname":"<RawDataSet<R>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clear all contained data.\n","sig":null,"attributes":[{"value":"/ Clear all contained data.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":52786,"byte_end":52815,"line_start":88,"line_end":88,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1673},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":53418,"byte_end":53426,"line_start":106,"line_end":106,"column_start":5,"column_end":13},"name":"NotFound","qualname":"::pso::ElementError::NotFound","value":"ElementError::NotFound(S)","parent":{"krate":0,"index":1671},"children":[],"decl_id":null,"docs":" Element not found.\n","sig":null,"attributes":[{"value":"/ Element not found.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":53391,"byte_end":53413,"line_start":105,"line_end":105,"column_start":5,"column_end":27}}]},{"kind":"StructVariant","id":{"krate":0,"index":1676},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":53468,"byte_end":53474,"line_start":108,"line_end":108,"column_start":5,"column_end":11},"name":"Offset","qualname":"::pso::ElementError::Offset","value":"ElementError::Offset { name, shader_offset, code_offset }","parent":{"krate":0,"index":1671},"children":[],"decl_id":null,"docs":" Element offset mismatch.\n","sig":null,"attributes":[{"value":"/ Element offset mismatch.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":53435,"byte_end":53463,"line_start":107,"line_end":107,"column_start":5,"column_end":33}}]},{"kind":"StructVariant","id":{"krate":0,"index":1680},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":53781,"byte_end":53787,"line_start":117,"line_end":117,"column_start":5,"column_end":11},"name":"Format","qualname":"::pso::ElementError::Format","value":"ElementError::Format { name, shader_format, code_format }","parent":{"krate":0,"index":1671},"children":[],"decl_id":null,"docs":" Element format mismatch.\n","sig":null,"attributes":[{"value":"/ Element format mismatch.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":53748,"byte_end":53776,"line_start":116,"line_end":116,"column_start":5,"column_end":33}}]},{"kind":"Enum","id":{"krate":0,"index":1671},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":53369,"byte_end":53381,"line_start":104,"line_end":104,"column_start":10,"column_end":22},"name":"ElementError","qualname":"::pso::ElementError","value":"pub enum ElementError<S> {\n    NotFound(S),\n    Offset {\n            name: S,\n            shader_offset: c::pso::ElemOffset,\n            code_offset: c::pso::ElemOffset,\n        },\n    Format {\n            name: S,\n            shader_format: c::shade::ConstFormat,\n            code_format: c::shade::ConstFormat,\n        },\n}","parent":null,"children":[{"krate":0,"index":1673},{"krate":0,"index":1676},{"krate":0,"index":1680}],"decl_id":null,"docs":" Error matching an element inside the constant buffer.\n","sig":null,"attributes":[{"value":"/ Error matching an element inside the constant buffer.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":53267,"byte_end":53324,"line_start":102,"line_end":102,"column_start":1,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1698},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":55876,"byte_end":55888,"line_start":172,"line_end":172,"column_start":5,"column_end":17},"name":"VertexImport","qualname":"::pso::InitError::VertexImport","value":"InitError::VertexImport(S, Option<c::format::Format>)","parent":{"krate":0,"index":1696},"children":[],"decl_id":null,"docs":" Vertex attribute mismatch.\n","sig":null,"attributes":[{"value":"/ Vertex attribute mismatch.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":55841,"byte_end":55871,"line_start":171,"line_end":171,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1702},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":55958,"byte_end":55972,"line_start":174,"line_end":174,"column_start":5,"column_end":19},"name":"ConstantBuffer","qualname":"::pso::InitError::ConstantBuffer","value":"InitError::ConstantBuffer(S, Option<ElementError<S>>)","parent":{"krate":0,"index":1696},"children":[],"decl_id":null,"docs":" Constant buffer mismatch.\n","sig":null,"attributes":[{"value":"/ Constant buffer mismatch.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":55924,"byte_end":55953,"line_start":173,"line_end":173,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1706},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":56040,"byte_end":56054,"line_start":176,"line_end":176,"column_start":5,"column_end":19},"name":"GlobalConstant","qualname":"::pso::InitError::GlobalConstant","value":"InitError::GlobalConstant(S, Option<c::shade::CompatibilityError>)","parent":{"krate":0,"index":1696},"children":[],"decl_id":null,"docs":" Global constant mismatch.\n","sig":null,"attributes":[{"value":"/ Global constant mismatch.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":56006,"byte_end":56035,"line_start":175,"line_end":175,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1710},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":56140,"byte_end":56152,"line_start":178,"line_end":178,"column_start":5,"column_end":17},"name":"ResourceView","qualname":"::pso::InitError::ResourceView","value":"InitError::ResourceView(S, Option<()>)","parent":{"krate":0,"index":1696},"children":[],"decl_id":null,"docs":" Shader resource view mismatch.\n","sig":null,"attributes":[{"value":"/ Shader resource view mismatch.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":56101,"byte_end":56135,"line_start":177,"line_end":177,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1714},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":56213,"byte_end":56226,"line_start":180,"line_end":180,"column_start":5,"column_end":18},"name":"UnorderedView","qualname":"::pso::InitError::UnorderedView","value":"InitError::UnorderedView(S, Option<()>)","parent":{"krate":0,"index":1696},"children":[],"decl_id":null,"docs":" Unordered access view mismatch.\n","sig":null,"attributes":[{"value":"/ Unordered access view mismatch.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":56173,"byte_end":56208,"line_start":179,"line_end":179,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1718},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":56273,"byte_end":56280,"line_start":182,"line_end":182,"column_start":5,"column_end":12},"name":"Sampler","qualname":"::pso::InitError::Sampler","value":"InitError::Sampler(S, Option<()>)","parent":{"krate":0,"index":1696},"children":[],"decl_id":null,"docs":" Sampler mismatch.\n","sig":null,"attributes":[{"value":"/ Sampler mismatch.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":56247,"byte_end":56268,"line_start":181,"line_end":181,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1722},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":56332,"byte_end":56343,"line_start":184,"line_end":184,"column_start":5,"column_end":16},"name":"PixelExport","qualname":"::pso::InitError::PixelExport","value":"InitError::PixelExport(S, Option<c::format::Format>)","parent":{"krate":0,"index":1696},"children":[],"decl_id":null,"docs":" Pixel target mismatch.\n","sig":null,"attributes":[{"value":"/ Pixel target mismatch.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":56301,"byte_end":56327,"line_start":183,"line_end":183,"column_start":5,"column_end":31}}]},{"kind":"Enum","id":{"krate":0,"index":1696},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":55822,"byte_end":55831,"line_start":170,"line_end":170,"column_start":10,"column_end":19},"name":"InitError","qualname":"::pso::InitError","value":"pub enum InitError<S> {\n    VertexImport(S, Option<c::format::Format>),\n    ConstantBuffer(S, Option<ElementError<S>>),\n    GlobalConstant(S, Option<c::shade::CompatibilityError>),\n    ResourceView(S, Option<()>),\n    UnorderedView(S, Option<()>),\n    Sampler(S, Option<()>),\n    PixelExport(S, Option<c::format::Format>),\n}","parent":null,"children":[{"krate":0,"index":1698},{"krate":0,"index":1702},{"krate":0,"index":1706},{"krate":0,"index":1710},{"krate":0,"index":1714},{"krate":0,"index":1718},{"krate":0,"index":1722}],"decl_id":null,"docs":" Failure to initilize the link between the shader and the data.\n","sig":null,"attributes":[{"value":"/ Failure to initilize the link between the shader and the data.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":55711,"byte_end":55777,"line_start":168,"line_end":168,"column_start":1,"column_end":67}}]},{"kind":"Trait","id":{"krate":0,"index":1269},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":59248,"byte_end":59260,"line_start":250,"line_end":250,"column_start":11,"column_end":23},"name":"PipelineInit","qualname":"::pso::PipelineInit","value":"PipelineInit","parent":null,"children":[{"krate":0,"index":1270},{"krate":0,"index":1271}],"decl_id":null,"docs":" A service trait implemented by the \"init\" structure of PSO.\n","sig":null,"attributes":[{"value":"/ A service trait implemented by the \"init\" structure of PSO.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":59174,"byte_end":59237,"line_start":249,"line_end":249,"column_start":1,"column_end":64}}]},{"kind":"Type","id":{"krate":0,"index":1270},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":59310,"byte_end":59314,"line_start":252,"line_end":252,"column_start":10,"column_end":14},"name":"Meta","qualname":"::pso::PipelineInit::Meta","value":"type Meta;","parent":{"krate":0,"index":1269},"children":[],"decl_id":null,"docs":" The associated \"meta\" struct.\n","sig":null,"attributes":[{"value":"/ The associated \"meta\" struct.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":59267,"byte_end":59300,"line_start":251,"line_end":251,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1271},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":59501,"byte_end":59508,"line_start":256,"line_end":256,"column_start":8,"column_end":15},"name":"link_to","qualname":"::pso::PipelineInit::link_to","value":"pub fn link_to<'s>(&Self, &mut Descriptor, &'s c::shade::ProgramInfo)\n-> Result<Self::Meta, InitError<&'s str>>","parent":{"krate":0,"index":1269},"children":[],"decl_id":null,"docs":" Attempt to map a PSO descriptor to a give shader program,\n represented by `ProgramInfo`. Returns an instance of the\n \"meta\" struct upon successful mapping.\n","sig":null,"attributes":[{"value":"/ Attempt to map a PSO descriptor to a give shader program,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":59320,"byte_end":59381,"line_start":253,"line_end":253,"column_start":5,"column_end":66}},{"value":"/ represented by `ProgramInfo`. Returns an instance of the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":59386,"byte_end":59446,"line_start":254,"line_end":254,"column_start":5,"column_end":65}},{"value":"/ \"meta\" struct upon successful mapping.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":59451,"byte_end":59493,"line_start":255,"line_end":255,"column_start":5,"column_end":47}}]},{"kind":"Trait","id":{"krate":0,"index":1273},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":59696,"byte_end":59708,"line_start":261,"line_end":261,"column_start":11,"column_end":23},"name":"PipelineData","qualname":"::pso::PipelineData","value":"PipelineData<R: c::Resources>","parent":null,"children":[{"krate":0,"index":1275},{"krate":0,"index":1276}],"decl_id":null,"docs":" a service trait implemented the \"data\" structure of PSO.\n","sig":null,"attributes":[{"value":"/ a service trait implemented the \"data\" structure of PSO.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":59625,"byte_end":59685,"line_start":260,"line_end":260,"column_start":1,"column_end":61}}]},{"kind":"Type","id":{"krate":0,"index":1275},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":59775,"byte_end":59779,"line_start":263,"line_end":263,"column_start":10,"column_end":14},"name":"Meta","qualname":"::pso::PipelineData::Meta","value":"type Meta;","parent":{"krate":0,"index":1273},"children":[],"decl_id":null,"docs":" The associated \"meta\" struct.\n","sig":null,"attributes":[{"value":"/ The associated \"meta\" struct.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":59732,"byte_end":59765,"line_start":262,"line_end":262,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1276},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":59905,"byte_end":59912,"line_start":266,"line_end":266,"column_start":8,"column_end":15},"name":"bake_to","qualname":"::pso::PipelineData::bake_to","value":"pub fn bake_to(&Self, &mut RawDataSet<R>, &Self::Meta,\n&mut c::handle::Manager<R>, &mut AccessInfo<R>)","parent":{"krate":0,"index":1273},"children":[],"decl_id":null,"docs":" Dump all the contained data into the raw data set,\n given the mapping (\"meta\"), and a handle manager.\n","sig":null,"attributes":[{"value":"/ Dump all the contained data into the raw data set,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":59785,"byte_end":59839,"line_start":264,"line_end":264,"column_start":5,"column_end":59}},{"value":"/ given the mapping (\"meta\"), and a handle manager.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":59844,"byte_end":59897,"line_start":265,"line_end":265,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":1738},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":60217,"byte_end":60230,"line_start":275,"line_end":275,"column_start":12,"column_end":25},"name":"PipelineState","qualname":"::pso::PipelineState","value":"","parent":null,"children":[],"decl_id":null,"docs":" A strongly typed Pipleline State Object. See the module documentation for more information.\n","sig":null,"attributes":[{"value":"/ A strongly typed Pipleline State Object. See the module documentation for more information.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":60065,"byte_end":60160,"line_start":273,"line_end":273,"column_start":1,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":1280},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":60473,"byte_end":60476,"line_start":280,"line_end":280,"column_start":12,"column_end":15},"name":"new","qualname":"<PipelineState<R, M>>::new","value":"pub fn new(c::handle::RawPipelineState<R>, c::Primitive, M)\n-> PipelineState<R, M>","parent":null,"children":[],"decl_id":null,"docs":" Create a new PSO from a raw handle and the \"meta\" instance.\n","sig":null,"attributes":[{"value":"/ Create a new PSO from a raw handle and the \"meta\" instance.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":60398,"byte_end":60461,"line_start":279,"line_end":279,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1281},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":60675,"byte_end":60685,"line_start":285,"line_end":285,"column_start":12,"column_end":22},"name":"get_handle","qualname":"<PipelineState<R, M>>::get_handle","value":"pub fn get_handle(&Self) -> &c::handle::RawPipelineState<R>","parent":null,"children":[],"decl_id":null,"docs":" Get a raw handle reference.\n","sig":null,"attributes":[{"value":"/ Get a raw handle reference.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":60632,"byte_end":60663,"line_start":284,"line_end":284,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1282},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":60890,"byte_end":60898,"line_start":290,"line_end":290,"column_start":12,"column_end":20},"name":"get_meta","qualname":"<PipelineState<R, M>>::get_meta","value":"pub fn get_meta(&Self) -> &M","parent":null,"children":[],"decl_id":null,"docs":" Get a \"meta\" struct reference. Can be used by the user to check\n what resources are actually used and what not.\n","sig":null,"attributes":[{"value":"/ Get a \"meta\" struct reference. Can be used by the user to check","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":60756,"byte_end":60823,"line_start":288,"line_end":288,"column_start":5,"column_end":72}},{"value":"/ what resources are actually used and what not.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":60828,"byte_end":60878,"line_start":289,"line_end":289,"column_start":5,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":1283},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":61044,"byte_end":61052,"line_start":297,"line_end":297,"column_start":11,"column_end":19},"name":"DataLink","qualname":"::pso::DataLink","value":"DataLink<'a>: Sized","parent":null,"children":[{"krate":0,"index":1285},{"krate":0,"index":1286},{"krate":0,"index":1287},{"krate":0,"index":1288},{"krate":0,"index":1289},{"krate":0,"index":1290},{"krate":0,"index":1292},{"krate":0,"index":1293},{"krate":0,"index":1294},{"krate":0,"index":1295},{"krate":0,"index":1296},{"krate":0,"index":1297},{"krate":0,"index":1298}],"decl_id":null,"docs":" The \"link\" logic portion of a PSO component.\n Defines the input data for the component.\n","sig":null,"attributes":[{"value":"/ The \"link\" logic portion of a PSO component.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":60939,"byte_end":60987,"line_start":295,"line_end":295,"column_start":1,"column_end":49}},{"value":"/ Defines the input data for the component.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":60988,"byte_end":61033,"line_start":296,"line_end":296,"column_start":1,"column_end":46}}]},{"kind":"Type","id":{"krate":0,"index":1285},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":61147,"byte_end":61151,"line_start":299,"line_end":299,"column_start":10,"column_end":14},"name":"Init","qualname":"::pso::DataLink::Init","value":"type Init: 'a;","parent":{"krate":0,"index":1283},"children":[],"decl_id":null,"docs":" The assotiated \"init\" type - a member of the PSO \"init\" struct.\n","sig":null,"attributes":[{"value":"/ The assotiated \"init\" type - a member of the PSO \"init\" struct.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":61070,"byte_end":61137,"line_start":298,"line_end":298,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1286},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":61202,"byte_end":61205,"line_start":301,"line_end":301,"column_start":8,"column_end":11},"name":"new","qualname":"::pso::DataLink::new","value":"pub fn new() -> Self","parent":{"krate":0,"index":1283},"children":[],"decl_id":null,"docs":" Create a new empty data link.\n","sig":null,"attributes":[{"value":"/ Create a new empty data link.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":61161,"byte_end":61194,"line_start":300,"line_end":300,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1287},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":61283,"byte_end":61292,"line_start":303,"line_end":303,"column_start":8,"column_end":17},"name":"is_active","qualname":"::pso::DataLink::is_active","value":"pub fn is_active(&Self) -> bool","parent":{"krate":0,"index":1283},"children":[],"decl_id":null,"docs":" Check if this link is actually used by the shader.\n","sig":null,"attributes":[{"value":"/ Check if this link is actually used by the shader.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":61221,"byte_end":61275,"line_start":302,"line_end":302,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1288},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":61393,"byte_end":61411,"line_start":305,"line_end":305,"column_start":8,"column_end":26},"name":"link_vertex_buffer","qualname":"::pso::DataLink::link_vertex_buffer","value":"pub fn link_vertex_buffer(&mut Self, c::pso::BufferIndex, &Self::Init)\n-> Option<c::pso::VertexBufferDesc>","parent":{"krate":0,"index":1283},"children":[],"decl_id":null,"docs":" Attempt to link with a vertex buffer containing multiple attributes.\n","sig":null,"attributes":[{"value":"/ Attempt to link with a vertex buffer containing multiple attributes.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":61313,"byte_end":61385,"line_start":304,"line_end":304,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1289},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":61590,"byte_end":61600,"line_start":308,"line_end":308,"column_start":8,"column_end":18},"name":"link_input","qualname":"::pso::DataLink::link_input","value":"pub fn link_input(&mut Self, &c::shade::AttributeVar, &Self::Init)\n-> Option<Result<c::pso::AttributeDesc, c::format::Format>>","parent":{"krate":0,"index":1283},"children":[],"decl_id":null,"docs":" Attempt to link with a vertex attribute.\n","sig":null,"attributes":[{"value":"/ Attempt to link with a vertex attribute.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":61538,"byte_end":61582,"line_start":307,"line_end":307,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1290},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":61798,"byte_end":61818,"line_start":311,"line_end":311,"column_start":8,"column_end":28},"name":"link_constant_buffer","qualname":"::pso::DataLink::link_constant_buffer","value":"pub fn link_constant_buffer<'b>(&mut Self, &'b c::shade::ConstantBufferVar,\n&Self::Init)\n-> Option<Result<c::pso::ConstantBufferDesc, ElementError<&'b str>>>","parent":{"krate":0,"index":1283},"children":[],"decl_id":null,"docs":" Attempt to link with a constant buffer.\n","sig":null,"attributes":[{"value":"/ Attempt to link with a constant buffer.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":61747,"byte_end":61790,"line_start":310,"line_end":310,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1292},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":62047,"byte_end":62067,"line_start":314,"line_end":314,"column_start":8,"column_end":28},"name":"link_global_constant","qualname":"::pso::DataLink::link_global_constant","value":"pub fn link_global_constant(&mut Self, &c::shade::ConstVar, &Self::Init)\n-> Option<Result<(), c::shade::CompatibilityError>>","parent":{"krate":0,"index":1283},"children":[],"decl_id":null,"docs":" Attempt to link with a global constant.\n","sig":null,"attributes":[{"value":"/ Attempt to link with a global constant.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":61996,"byte_end":62039,"line_start":313,"line_end":313,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1293},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":62275,"byte_end":62286,"line_start":317,"line_end":317,"column_start":8,"column_end":19},"name":"link_output","qualname":"::pso::DataLink::link_output","value":"pub fn link_output(&mut Self, &c::shade::OutputVar, &Self::Init)\n-> Option<Result<c::pso::ColorTargetDesc, c::format::Format>>","parent":{"krate":0,"index":1283},"children":[],"decl_id":null,"docs":" Attempt to link with an output render target (RTV).\n","sig":null,"attributes":[{"value":"/ Attempt to link with an output render target (RTV).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":62212,"byte_end":62267,"line_start":316,"line_end":316,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1294},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":62495,"byte_end":62513,"line_start":320,"line_end":320,"column_start":8,"column_end":26},"name":"link_depth_stencil","qualname":"::pso::DataLink::link_depth_stencil","value":"pub fn link_depth_stencil(&mut Self, &Self::Init)\n-> Option<c::pso::DepthStencilDesc>","parent":{"krate":0,"index":1283},"children":[],"decl_id":null,"docs":" Attempt to link with a depth-stencil target (DSV).\n","sig":null,"attributes":[{"value":"/ Attempt to link with a depth-stencil target (DSV).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":62433,"byte_end":62487,"line_start":319,"line_end":319,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1295},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":62673,"byte_end":62691,"line_start":323,"line_end":323,"column_start":8,"column_end":26},"name":"link_resource_view","qualname":"::pso::DataLink::link_resource_view","value":"pub fn link_resource_view(&mut Self, &c::shade::TextureVar, &Self::Init)\n-> Option<Result<c::pso::ResourceViewDesc, c::format::Format>>","parent":{"krate":0,"index":1283},"children":[],"decl_id":null,"docs":" Attempt to link with a shader resource (SRV).\n","sig":null,"attributes":[{"value":"/ Attempt to link with a shader resource (SRV).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":62616,"byte_end":62665,"line_start":322,"line_end":322,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1296},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":62906,"byte_end":62925,"line_start":326,"line_end":326,"column_start":8,"column_end":27},"name":"link_unordered_view","qualname":"::pso::DataLink::link_unordered_view","value":"pub fn link_unordered_view(&mut Self, &c::shade::UnorderedVar, &Self::Init)\n-> Option<Result<c::pso::UnorderedViewDesc, c::format::Format>>","parent":{"krate":0,"index":1283},"children":[],"decl_id":null,"docs":" Attempt to link with an unordered access (UAV).\n","sig":null,"attributes":[{"value":"/ Attempt to link with an unordered access (UAV).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":62847,"byte_end":62898,"line_start":325,"line_end":325,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1297},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":63128,"byte_end":63140,"line_start":329,"line_end":329,"column_start":8,"column_end":20},"name":"link_sampler","qualname":"::pso::DataLink::link_sampler","value":"pub fn link_sampler(&mut Self, &c::shade::SamplerVar, &Self::Init)\n-> Option<c::pso::SamplerDesc>","parent":{"krate":0,"index":1283},"children":[],"decl_id":null,"docs":" Attempt to link with a sampler.\n","sig":null,"attributes":[{"value":"/ Attempt to link with a sampler.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":63085,"byte_end":63120,"line_start":328,"line_end":328,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1298},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":63301,"byte_end":63313,"line_start":332,"line_end":332,"column_start":8,"column_end":20},"name":"link_scissor","qualname":"::pso::DataLink::link_scissor","value":"pub fn link_scissor(&mut Self) -> bool","parent":{"krate":0,"index":1283},"children":[],"decl_id":null,"docs":" Attempt to enable scissor test.\n","sig":null,"attributes":[{"value":"/ Attempt to enable scissor test.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":63258,"byte_end":63293,"line_start":331,"line_end":331,"column_start":5,"column_end":40}}]},{"kind":"Trait","id":{"krate":0,"index":1299},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":63471,"byte_end":63479,"line_start":337,"line_end":337,"column_start":11,"column_end":19},"name":"DataBind","qualname":"::pso::DataBind","value":"DataBind<R: c::Resources>","parent":null,"children":[{"krate":0,"index":1301},{"krate":0,"index":1302}],"decl_id":null,"docs":" The \"bind\" logic portion of the PSO component.\n Defines how the user data translates into the raw data set.\n","sig":null,"attributes":[{"value":"/ The \"bind\" logic portion of the PSO component.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":63346,"byte_end":63396,"line_start":335,"line_end":335,"column_start":1,"column_end":51}},{"value":"/ Defines how the user data translates into the raw data set.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":63397,"byte_end":63460,"line_start":336,"line_end":336,"column_start":1,"column_end":64}}]},{"kind":"Type","id":{"krate":0,"index":1301},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":63580,"byte_end":63584,"line_start":339,"line_end":339,"column_start":10,"column_end":14},"name":"Data","qualname":"::pso::DataBind::Data","value":"type Data;","parent":{"krate":0,"index":1299},"children":[],"decl_id":null,"docs":" The associated \"data\" type - a member of the PSO \"data\" struct.\n","sig":null,"attributes":[{"value":"/ The associated \"data\" type - a member of the PSO \"data\" struct.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":63503,"byte_end":63570,"line_start":338,"line_end":338,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1302},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":63644,"byte_end":63651,"line_start":341,"line_end":341,"column_start":8,"column_end":15},"name":"bind_to","qualname":"::pso::DataBind::bind_to","value":"pub fn bind_to(&Self, &mut RawDataSet<R>, &Self::Data,\n&mut c::handle::Manager<R>, &mut AccessInfo<R>)","parent":{"krate":0,"index":1299},"children":[],"decl_id":null,"docs":" Dump the given data into the raw data set.\n","sig":null,"attributes":[{"value":"/ Dump the given data into the raw data set.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":63590,"byte_end":63636,"line_start":340,"line_end":340,"column_start":5,"column_end":51}}]},{"kind":"Mod","id":{"krate":0,"index":1303},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\shade.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"shade","qualname":"::shade","value":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\shade.rs","parent":null,"children":[{"krate":0,"index":1304},{"krate":0,"index":1307},{"krate":0,"index":1310},{"krate":0,"index":1311},{"krate":0,"index":1314},{"krate":0,"index":1317},{"krate":0,"index":1320},{"krate":0,"index":1323},{"krate":0,"index":1325},{"krate":0,"index":1773},{"krate":0,"index":1775},{"krate":0,"index":1777},{"krate":0,"index":1779},{"krate":0,"index":1782},{"krate":0,"index":1785},{"krate":0,"index":1788},{"krate":0,"index":1791},{"krate":0,"index":1794},{"krate":0,"index":1797},{"krate":0,"index":1800},{"krate":0,"index":1803},{"krate":0,"index":1806},{"krate":0,"index":1810},{"krate":0,"index":1814},{"krate":0,"index":1818},{"krate":0,"index":1837},{"krate":0,"index":1839},{"krate":0,"index":1841},{"krate":0,"index":1842},{"krate":0,"index":1326},{"krate":0,"index":1328}],"decl_id":null,"docs":" Shaders\n Shader parameter handling.\n","sig":null,"attributes":[{"value":"/ Shaders","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":5213,"byte_end":5224,"line_start":139,"line_end":139,"column_start":1,"column_end":12}},{"value":"/ Shader parameter handling.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\shade.rs","byte_start":100967,"byte_end":100997,"line_start":15,"line_end":15,"column_start":1,"column_end":31}}]},{"kind":"Trait","id":{"krate":0,"index":1323},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\shade.rs","byte_start":101174,"byte_end":101183,"line_start":25,"line_end":25,"column_start":11,"column_end":20},"name":"ToUniform","qualname":"::shade::ToUniform","value":"ToUniform: Copy","parent":null,"children":[{"krate":0,"index":1324}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\shade.rs","byte_start":101141,"byte_end":101163,"line_start":24,"line_end":24,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":1324},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\shade.rs","byte_start":101199,"byte_end":101206,"line_start":26,"line_end":26,"column_start":8,"column_end":15},"name":"convert","qualname":"::shade::ToUniform::convert","value":"pub fn convert(Self) -> core::UniformValue","parent":{"krate":0,"index":1323},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1819},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\shade.rs","byte_start":102431,"byte_end":102437,"line_start":75,"line_end":75,"column_start":5,"column_end":11},"name":"Vertex","qualname":"::shade::ProgramError::Vertex","value":"ProgramError::Vertex(core::CreateShaderError)","parent":{"krate":0,"index":1818},"children":[],"decl_id":null,"docs":" Unable to compile the vertex shader\n","sig":null,"attributes":[{"value":"/ Unable to compile the vertex shader","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\shade.rs","byte_start":102387,"byte_end":102426,"line_start":74,"line_end":74,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1822},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\shade.rs","byte_start":102510,"byte_end":102514,"line_start":77,"line_end":77,"column_start":5,"column_end":9},"name":"Hull","qualname":"::shade::ProgramError::Hull","value":"ProgramError::Hull(core::CreateShaderError)","parent":{"krate":0,"index":1818},"children":[],"decl_id":null,"docs":" Unable to compile the hull shader\n","sig":null,"attributes":[{"value":"/ Unable to compile the hull shader","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\shade.rs","byte_start":102468,"byte_end":102505,"line_start":76,"line_end":76,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1825},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\shade.rs","byte_start":102589,"byte_end":102595,"line_start":79,"line_end":79,"column_start":5,"column_end":11},"name":"Domain","qualname":"::shade::ProgramError::Domain","value":"ProgramError::Domain(core::CreateShaderError)","parent":{"krate":0,"index":1818},"children":[],"decl_id":null,"docs":" Unable to compile the domain shader\n","sig":null,"attributes":[{"value":"/ Unable to compile the domain shader","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\shade.rs","byte_start":102545,"byte_end":102584,"line_start":78,"line_end":78,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1828},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\shade.rs","byte_start":102672,"byte_end":102680,"line_start":81,"line_end":81,"column_start":5,"column_end":13},"name":"Geometry","qualname":"::shade::ProgramError::Geometry","value":"ProgramError::Geometry(core::CreateShaderError)","parent":{"krate":0,"index":1818},"children":[],"decl_id":null,"docs":" Unable to compile the geometry shader\n","sig":null,"attributes":[{"value":"/ Unable to compile the geometry shader","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\shade.rs","byte_start":102626,"byte_end":102667,"line_start":80,"line_end":80,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1831},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\shade.rs","byte_start":102754,"byte_end":102759,"line_start":83,"line_end":83,"column_start":5,"column_end":10},"name":"Pixel","qualname":"::shade::ProgramError::Pixel","value":"ProgramError::Pixel(core::CreateShaderError)","parent":{"krate":0,"index":1818},"children":[],"decl_id":null,"docs":" Unable to compile the pixel shader\n","sig":null,"attributes":[{"value":"/ Unable to compile the pixel shader","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\shade.rs","byte_start":102711,"byte_end":102749,"line_start":82,"line_end":82,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1834},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\shade.rs","byte_start":102813,"byte_end":102817,"line_start":85,"line_end":85,"column_start":5,"column_end":9},"name":"Link","qualname":"::shade::ProgramError::Link","value":"ProgramError::Link(core::CreateProgramError)","parent":{"krate":0,"index":1818},"children":[],"decl_id":null,"docs":" Unable to link\n","sig":null,"attributes":[{"value":"/ Unable to link","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\shade.rs","byte_start":102790,"byte_end":102808,"line_start":84,"line_end":84,"column_start":5,"column_end":23}}]},{"kind":"Enum","id":{"krate":0,"index":1818},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\shade.rs","byte_start":102368,"byte_end":102380,"line_start":73,"line_end":73,"column_start":10,"column_end":22},"name":"ProgramError","qualname":"::shade::ProgramError","value":"pub enum ProgramError {\n    Vertex(core::CreateShaderError),\n    Hull(core::CreateShaderError),\n    Domain(core::CreateShaderError),\n    Geometry(core::CreateShaderError),\n    Pixel(core::CreateShaderError),\n    Link(core::CreateProgramError),\n}","parent":null,"children":[{"krate":0,"index":1819},{"krate":0,"index":1822},{"krate":0,"index":1825},{"krate":0,"index":1828},{"krate":0,"index":1831},{"krate":0,"index":1834}],"decl_id":null,"docs":" Program linking error\n","sig":null,"attributes":[{"value":"/ Program linking error","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\shade.rs","byte_start":102298,"byte_end":102323,"line_start":71,"line_end":71,"column_start":1,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":1331},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\macros\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"macros","qualname":"::macros","value":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\macros\\mod.rs","parent":null,"children":[{"krate":0,"index":1332},{"krate":0,"index":1336},{"krate":0,"index":1343},{"krate":0,"index":1344}],"decl_id":null,"docs":" Convenience macros\n Various helper macros.\n","sig":null,"attributes":[{"value":"/ Convenience macros","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":5240,"byte_end":5262,"line_start":141,"line_end":141,"column_start":1,"column_end":23}},{"value":"/ Various helper macros.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\macros\\mod.rs","byte_start":105046,"byte_end":105072,"line_start":15,"line_end":15,"column_start":1,"column_end":27}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":7234,"byte_end":7243,"line_start":63,"line_end":63,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":8073,"byte_end":8082,"line_start":83,"line_end":83,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":307}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":9173,"byte_end":9184,"line_start":121,"line_end":121,"column_start":59,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":313}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":9764,"byte_end":9775,"line_start":134,"line_end":134,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":316}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":11034,"byte_end":11041,"line_start":166,"line_end":166,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":11355,"byte_end":11362,"line_start":177,"line_end":177,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":324},{"krate":0,"index":326},{"krate":0,"index":328},{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":336},{"krate":0,"index":338},{"krate":0,"index":343},{"krate":0,"index":347},{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":352},{"krate":0,"index":354},{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":361},{"krate":0,"index":363}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":29705,"byte_end":29723,"line_start":43,"line_end":43,"column_start":48,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":435}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":30168,"byte_end":30186,"line_start":53,"line_end":53,"column_start":53,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":438}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":30631,"byte_end":30649,"line_start":63,"line_end":63,"column_start":46,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":441},{"krate":0,"index":442}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":31421,"byte_end":31439,"line_start":82,"line_end":82,"column_start":32,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":445}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":31568,"byte_end":31586,"line_start":88,"line_end":88,"column_start":37,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":448}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":31723,"byte_end":31741,"line_start":94,"line_end":94,"column_start":33,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":451}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":40523,"byte_end":40524,"line_start":277,"line_end":277,"column_start":53,"column_end":54},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":44197,"byte_end":44202,"line_start":78,"line_end":78,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":521},{"krate":0,"index":522},{"krate":0,"index":524},{"krate":0,"index":528}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":47568,"byte_end":47579,"line_start":162,"line_end":162,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":531}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":47940,"byte_end":47951,"line_start":173,"line_end":173,"column_start":43,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":538}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":65274,"byte_end":65292,"line_start":39,"line_end":39,"column_start":26,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":628}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":65395,"byte_end":65413,"line_start":45,"line_end":45,"column_start":19,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":65455,"byte_end":65473,"line_start":47,"line_end":47,"column_start":32,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":635}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":65598,"byte_end":65616,"line_start":53,"line_end":53,"column_start":22,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":640}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":65737,"byte_end":65755,"line_start":59,"line_end":59,"column_start":32,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":644}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":66373,"byte_end":66385,"line_start":78,"line_end":78,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":651},{"krate":0,"index":652}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":66505,"byte_end":66514,"line_start":82,"line_end":82,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":654},{"krate":0,"index":655}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":66617,"byte_end":66629,"line_start":86,"line_end":86,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":657},{"krate":0,"index":658}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":67586,"byte_end":67600,"line_start":114,"line_end":114,"column_start":54,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":670}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":67728,"byte_end":67742,"line_start":120,"line_end":120,"column_start":47,"column_end":61},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":67809,"byte_end":67823,"line_start":122,"line_end":122,"column_start":60,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":675}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":67973,"byte_end":67987,"line_start":128,"line_end":128,"column_start":50,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":679}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":68133,"byte_end":68147,"line_start":134,"line_end":134,"column_start":60,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":682}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":68828,"byte_end":68834,"line_start":154,"line_end":154,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":690}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":68942,"byte_end":68948,"line_start":160,"line_end":160,"column_start":27,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":68995,"byte_end":69001,"line_start":162,"line_end":162,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":695}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":69131,"byte_end":69137,"line_start":168,"line_end":168,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":699}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":69263,"byte_end":69269,"line_start":174,"line_end":174,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":702}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":71158,"byte_end":71176,"line_start":225,"line_end":225,"column_start":20,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":718},{"krate":0,"index":719},{"krate":0,"index":720},{"krate":0,"index":721},{"krate":0,"index":725}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":72011,"byte_end":72029,"line_start":251,"line_end":251,"column_start":42,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":731},{"krate":0,"index":732}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":72329,"byte_end":72344,"line_start":262,"line_end":262,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":734}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":72694,"byte_end":72709,"line_start":274,"line_end":274,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":737},{"krate":0,"index":738},{"krate":0,"index":739},{"krate":0,"index":740},{"krate":0,"index":741}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":73465,"byte_end":73480,"line_start":297,"line_end":297,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":746},{"krate":0,"index":747}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":74050,"byte_end":74064,"line_start":316,"line_end":316,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":751},{"krate":0,"index":752},{"krate":0,"index":753},{"krate":0,"index":754}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":75321,"byte_end":75335,"line_start":348,"line_end":348,"column_start":17,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":759},{"krate":0,"index":760}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":75653,"byte_end":75670,"line_start":359,"line_end":359,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":763},{"krate":0,"index":764},{"krate":0,"index":765},{"krate":0,"index":766}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":76222,"byte_end":76239,"line_start":378,"line_end":378,"column_start":36,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":770},{"krate":0,"index":771}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":76753,"byte_end":76759,"line_start":393,"line_end":393,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":775},{"krate":0,"index":776},{"krate":0,"index":777},{"krate":0,"index":778}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":77286,"byte_end":77292,"line_start":408,"line_end":408,"column_start":50,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":782},{"krate":0,"index":783}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":77620,"byte_end":77629,"line_start":420,"line_end":420,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":786},{"krate":0,"index":787},{"krate":0,"index":788},{"krate":0,"index":789}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":78129,"byte_end":78138,"line_start":439,"line_end":439,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":792},{"krate":0,"index":793}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":79621,"byte_end":79635,"line_start":31,"line_end":31,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":847}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":79732,"byte_end":79746,"line_start":37,"line_end":37,"column_start":16,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":79782,"byte_end":79796,"line_start":39,"line_end":39,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":852}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":79915,"byte_end":79929,"line_start":45,"line_end":45,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":856}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":80044,"byte_end":80058,"line_start":51,"line_end":51,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":859}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":80862,"byte_end":80877,"line_start":72,"line_end":72,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":867}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":80974,"byte_end":80989,"line_start":78,"line_end":78,"column_start":16,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":81025,"byte_end":81040,"line_start":80,"line_end":80,"column_start":29,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":872}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":81159,"byte_end":81174,"line_start":86,"line_end":86,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":876}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":81289,"byte_end":81304,"line_start":92,"line_end":92,"column_start":29,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":879}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":82143,"byte_end":82157,"line_start":114,"line_end":114,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":887}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":82275,"byte_end":82289,"line_start":120,"line_end":120,"column_start":16,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":82325,"byte_end":82339,"line_start":122,"line_end":122,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":892}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":82486,"byte_end":82500,"line_start":129,"line_end":129,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":896}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":82618,"byte_end":82632,"line_start":135,"line_end":135,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":899}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":82828,"byte_end":82842,"line_start":141,"line_end":141,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":903},{"krate":0,"index":904},{"krate":0,"index":905},{"krate":0,"index":906}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":83280,"byte_end":83294,"line_start":155,"line_end":155,"column_start":39,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":910},{"krate":0,"index":911}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":83624,"byte_end":83641,"line_start":166,"line_end":166,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":914},{"krate":0,"index":915},{"krate":0,"index":916},{"krate":0,"index":917}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":84174,"byte_end":84191,"line_start":185,"line_end":185,"column_start":36,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":920},{"krate":0,"index":921}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":84701,"byte_end":84716,"line_start":200,"line_end":200,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":925},{"krate":0,"index":926},{"krate":0,"index":927},{"krate":0,"index":928}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":85271,"byte_end":85286,"line_start":219,"line_end":219,"column_start":39,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":932},{"krate":0,"index":933}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":85806,"byte_end":85813,"line_start":234,"line_end":234,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":936},{"krate":0,"index":937},{"krate":0,"index":938},{"krate":0,"index":939}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":86278,"byte_end":86285,"line_start":253,"line_end":253,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":942},{"krate":0,"index":943}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":86718,"byte_end":86732,"line_start":267,"line_end":267,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":947},{"krate":0,"index":948},{"krate":0,"index":949},{"krate":0,"index":950},{"krate":0,"index":951}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":87321,"byte_end":87335,"line_start":284,"line_end":284,"column_start":39,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":955},{"krate":0,"index":956}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":88814,"byte_end":88826,"line_start":30,"line_end":30,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1010}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":88923,"byte_end":88935,"line_start":36,"line_end":36,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":88971,"byte_end":88983,"line_start":38,"line_end":38,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1015}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":89102,"byte_end":89114,"line_start":44,"line_end":44,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1019}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":89229,"byte_end":89241,"line_start":50,"line_end":50,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1022}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":89627,"byte_end":89638,"line_start":62,"line_end":62,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1030}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":89735,"byte_end":89746,"line_start":68,"line_end":68,"column_start":16,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":89782,"byte_end":89793,"line_start":70,"line_end":70,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1035}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":89912,"byte_end":89923,"line_start":76,"line_end":76,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1039}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":90038,"byte_end":90049,"line_start":82,"line_end":82,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1042}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":90622,"byte_end":90633,"line_start":101,"line_end":101,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1049}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":90701,"byte_end":90712,"line_start":105,"line_end":105,"column_start":16,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":90748,"byte_end":90759,"line_start":107,"line_end":107,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1054}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":90841,"byte_end":90852,"line_start":111,"line_end":111,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1058}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":90951,"byte_end":90962,"line_start":117,"line_end":117,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1061}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":91303,"byte_end":91316,"line_start":129,"line_end":129,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1068}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":91384,"byte_end":91397,"line_start":133,"line_end":133,"column_start":16,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":91433,"byte_end":91446,"line_start":135,"line_end":135,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1073}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":91528,"byte_end":91541,"line_start":139,"line_end":139,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1077}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":91640,"byte_end":91653,"line_start":145,"line_end":145,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1080}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":92034,"byte_end":92052,"line_start":157,"line_end":157,"column_start":23,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1087}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":92120,"byte_end":92138,"line_start":161,"line_end":161,"column_start":16,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":92174,"byte_end":92192,"line_start":163,"line_end":163,"column_start":29,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1092}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":92274,"byte_end":92292,"line_start":167,"line_end":167,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1096}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":92391,"byte_end":92409,"line_start":173,"line_end":173,"column_start":29,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1099}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":92963,"byte_end":92975,"line_start":193,"line_end":193,"column_start":52,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":1103},{"krate":0,"index":1104},{"krate":0,"index":1105},{"krate":0,"index":1106}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":93566,"byte_end":93578,"line_start":213,"line_end":213,"column_start":39,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1110},{"krate":0,"index":1111}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":94021,"byte_end":94032,"line_start":227,"line_end":227,"column_start":51,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1115},{"krate":0,"index":1116},{"krate":0,"index":1117},{"krate":0,"index":1118}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":94521,"byte_end":94532,"line_start":241,"line_end":241,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1122},{"krate":0,"index":1123}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":94860,"byte_end":94875,"line_start":252,"line_end":252,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1126},{"krate":0,"index":1127},{"krate":0,"index":1128},{"krate":0,"index":1129}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":95626,"byte_end":95641,"line_start":276,"line_end":276,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1134},{"krate":0,"index":1135}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":96069,"byte_end":96080,"line_start":290,"line_end":290,"column_start":51,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1139},{"krate":0,"index":1140},{"krate":0,"index":1141},{"krate":0,"index":1142}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":96393,"byte_end":96404,"line_start":299,"line_end":299,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1146},{"krate":0,"index":1147}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":96828,"byte_end":96841,"line_start":311,"line_end":311,"column_start":53,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":1151},{"krate":0,"index":1152},{"krate":0,"index":1153},{"krate":0,"index":1154}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":97158,"byte_end":97171,"line_start":320,"line_end":320,"column_start":39,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1158},{"krate":0,"index":1159}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":97681,"byte_end":97699,"line_start":333,"line_end":333,"column_start":58,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":1163},{"krate":0,"index":1164},{"krate":0,"index":1165},{"krate":0,"index":1166}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":98037,"byte_end":98055,"line_start":342,"line_end":342,"column_start":39,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1170},{"krate":0,"index":1171}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":98534,"byte_end":98541,"line_start":356,"line_end":356,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1174},{"krate":0,"index":1175},{"krate":0,"index":1176},{"krate":0,"index":1177}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":98748,"byte_end":98755,"line_start":363,"line_end":363,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1180},{"krate":0,"index":1181}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":99031,"byte_end":99039,"line_start":374,"line_end":374,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1184},{"krate":0,"index":1185},{"krate":0,"index":1186}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":99175,"byte_end":99183,"line_start":380,"line_end":380,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1189},{"krate":0,"index":1190}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\bundle.rs","byte_start":99929,"byte_end":99935,"line_start":18,"line_end":18,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1220},{"krate":0,"index":1221}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":52240,"byte_end":52250,"line_start":73,"line_end":73,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1243},{"krate":0,"index":1244}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":54109,"byte_end":54121,"line_start":127,"line_end":127,"column_start":53,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":1247}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":54745,"byte_end":54757,"line_start":139,"line_end":139,"column_start":46,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1250}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":55077,"byte_end":55089,"line_start":149,"line_end":149,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1253}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":56416,"byte_end":56425,"line_start":187,"line_end":187,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1257}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":57094,"byte_end":57103,"line_start":202,"line_end":202,"column_start":53,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1262}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":57963,"byte_end":57972,"line_start":218,"line_end":218,"column_start":46,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1266},{"krate":0,"index":1268}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":60372,"byte_end":60385,"line_start":278,"line_end":278,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1280},{"krate":0,"index":1281},{"krate":0,"index":1282}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\shade.rs","byte_start":102870,"byte_end":102882,"line_start":88,"line_end":88,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1327}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\shade.rs","byte_start":103519,"byte_end":103531,"line_start":101,"line_end":101,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1329},{"krate":0,"index":1330}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":5208,"byte_end":5211,"line_start":138,"line_end":138,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":545}},{"kind":"Mod","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":51102,"byte_end":51108,"line_start":42,"line_end":42,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":546}},{"kind":"Mod","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":51118,"byte_end":51126,"line_start":43,"line_end":43,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":794}},{"kind":"Mod","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":51136,"byte_end":51142,"line_start":44,"line_end":44,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":957}},{"kind":"Mod","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":51152,"byte_end":51158,"line_start":45,"line_end":45,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1191}},{"kind":"Mod","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":5233,"byte_end":5238,"line_start":140,"line_end":140,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":1303}},{"kind":"Mod","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":5271,"byte_end":5277,"line_start":142,"line_end":142,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1331}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":7234,"byte_end":7243,"line_start":63,"line_end":63,"column_start":29,"column_end":38},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1345},"to":{"krate":2,"index":9609}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":8073,"byte_end":8082,"line_start":83,"line_end":83,"column_start":22,"column_end":31},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1345},"to":{"krate":1,"index":2452}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":9173,"byte_end":9184,"line_start":121,"line_end":121,"column_start":59,"column_end":70},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1378},"to":{"krate":2,"index":9609}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":9764,"byte_end":9775,"line_start":134,"line_end":134,"column_start":52,"column_end":63},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1378},"to":{"krate":1,"index":2452}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":11034,"byte_end":11041,"line_start":166,"line_end":166,"column_start":35,"column_end":42},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1401},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":11355,"byte_end":11362,"line_start":177,"line_end":177,"column_start":43,"column_end":50},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1401},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":29705,"byte_end":29723,"line_start":43,"line_end":43,"column_start":48,"column_end":66},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1412},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":30168,"byte_end":30186,"line_start":53,"line_end":53,"column_start":53,"column_end":71},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1412},"to":{"krate":2,"index":9609}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":30631,"byte_end":30649,"line_start":63,"line_end":63,"column_start":46,"column_end":64},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1412},"to":{"krate":1,"index":2452}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":31421,"byte_end":31439,"line_start":82,"line_end":82,"column_start":32,"column_end":50},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1412},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":31568,"byte_end":31586,"line_start":88,"line_end":88,"column_start":37,"column_end":55},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1412},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":31723,"byte_end":31741,"line_start":94,"line_end":94,"column_start":33,"column_end":51},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1412},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":32061,"byte_end":32068,"line_start":102,"line_end":102,"column_start":37,"column_end":44},"kind":"SuperTrait","from":{"krate":18,"index":416},"to":{"krate":0,"index":452}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":40523,"byte_end":40524,"line_start":277,"line_end":277,"column_start":53,"column_end":54},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":485},"to":{"krate":0,"index":452}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":44197,"byte_end":44202,"line_start":78,"line_end":78,"column_start":20,"column_end":25},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1436},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":47568,"byte_end":47579,"line_start":162,"line_end":162,"column_start":32,"column_end":43},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1464},"to":{"krate":2,"index":3002}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":47940,"byte_end":47951,"line_start":173,"line_end":173,"column_start":43,"column_end":54},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1464},"to":{"krate":0,"index":532}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":65274,"byte_end":65292,"line_start":39,"line_end":39,"column_start":26,"column_end":44},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":619},"to":{"krate":2,"index":2675}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":65395,"byte_end":65413,"line_start":45,"line_end":45,"column_start":19,"column_end":37},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":619},"to":{"krate":2,"index":2680}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":65455,"byte_end":65473,"line_start":47,"line_end":47,"column_start":32,"column_end":50},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":619},"to":{"krate":2,"index":9809}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":65598,"byte_end":65616,"line_start":53,"line_end":53,"column_start":22,"column_end":40},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":619},"to":{"krate":2,"index":2645}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":65737,"byte_end":65755,"line_start":59,"line_end":59,"column_start":32,"column_end":50},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":619},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":66373,"byte_end":66385,"line_start":78,"line_end":78,"column_start":25,"column_end":37},"kind":{"Impl":{"id":21}},"from":{"krate":18,"index":1143},"to":{"krate":0,"index":645}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":66505,"byte_end":66514,"line_start":82,"line_end":82,"column_start":25,"column_end":34},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":649},"to":{"krate":0,"index":645}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":66617,"byte_end":66629,"line_start":86,"line_end":86,"column_start":25,"column_end":37},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":648},"to":{"krate":0,"index":645}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":67586,"byte_end":67600,"line_start":114,"line_end":114,"column_start":54,"column_end":68},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":663},"to":{"krate":2,"index":2675}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":67728,"byte_end":67742,"line_start":120,"line_end":120,"column_start":47,"column_end":61},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":663},"to":{"krate":2,"index":2680}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":67809,"byte_end":67823,"line_start":122,"line_end":122,"column_start":60,"column_end":74},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":663},"to":{"krate":2,"index":9809}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":67973,"byte_end":67987,"line_start":128,"line_end":128,"column_start":50,"column_end":64},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":663},"to":{"krate":2,"index":2645}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":68133,"byte_end":68147,"line_start":134,"line_end":134,"column_start":60,"column_end":74},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":663},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":68828,"byte_end":68834,"line_start":154,"line_end":154,"column_start":34,"column_end":40},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":683},"to":{"krate":2,"index":2675}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":68942,"byte_end":68948,"line_start":160,"line_end":160,"column_start":27,"column_end":33},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":683},"to":{"krate":2,"index":2680}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":68995,"byte_end":69001,"line_start":162,"line_end":162,"column_start":40,"column_end":46},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":683},"to":{"krate":2,"index":9809}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":69131,"byte_end":69137,"line_start":168,"line_end":168,"column_start":30,"column_end":36},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":683},"to":{"krate":2,"index":2645}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":69263,"byte_end":69269,"line_start":174,"line_end":174,"column_start":40,"column_end":46},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":683},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":71158,"byte_end":71176,"line_start":225,"line_end":225,"column_start":20,"column_end":38},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":619},"to":{"krate":0,"index":1283}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":72011,"byte_end":72029,"line_start":251,"line_end":251,"column_start":42,"column_end":60},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":619},"to":{"krate":0,"index":1299}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":72329,"byte_end":72344,"line_start":262,"line_end":262,"column_start":6,"column_end":21},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1513},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":72694,"byte_end":72709,"line_start":274,"line_end":274,"column_start":27,"column_end":42},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1513},"to":{"krate":0,"index":1283}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":73465,"byte_end":73480,"line_start":297,"line_end":297,"column_start":36,"column_end":51},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1513},"to":{"krate":0,"index":1299}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":74050,"byte_end":74064,"line_start":316,"line_end":316,"column_start":18,"column_end":32},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":663},"to":{"krate":0,"index":1283}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":75321,"byte_end":75335,"line_start":348,"line_end":348,"column_start":17,"column_end":31},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":663},"to":{"krate":0,"index":1299}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":75653,"byte_end":75670,"line_start":359,"line_end":359,"column_start":27,"column_end":44},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1531},"to":{"krate":0,"index":1283}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":76222,"byte_end":76239,"line_start":378,"line_end":378,"column_start":36,"column_end":53},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1531},"to":{"krate":0,"index":1299}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":76753,"byte_end":76759,"line_start":393,"line_end":393,"column_start":51,"column_end":57},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":683},"to":{"krate":0,"index":1283}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":77286,"byte_end":77292,"line_start":408,"line_end":408,"column_start":50,"column_end":56},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":683},"to":{"krate":0,"index":1299}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":77620,"byte_end":77629,"line_start":420,"line_end":420,"column_start":27,"column_end":36},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1548},"to":{"krate":0,"index":1283}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":78129,"byte_end":78138,"line_start":439,"line_end":439,"column_start":36,"column_end":45},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1548},"to":{"krate":0,"index":1299}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":79621,"byte_end":79635,"line_start":31,"line_end":31,"column_start":23,"column_end":37},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":840},"to":{"krate":2,"index":2675}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":79732,"byte_end":79746,"line_start":37,"line_end":37,"column_start":16,"column_end":30},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":840},"to":{"krate":2,"index":2680}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":79782,"byte_end":79796,"line_start":39,"line_end":39,"column_start":29,"column_end":43},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":840},"to":{"krate":2,"index":9809}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":79915,"byte_end":79929,"line_start":45,"line_end":45,"column_start":19,"column_end":33},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":840},"to":{"krate":2,"index":2645}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":80044,"byte_end":80058,"line_start":51,"line_end":51,"column_start":29,"column_end":43},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":840},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":80862,"byte_end":80877,"line_start":72,"line_end":72,"column_start":23,"column_end":38},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":860},"to":{"krate":2,"index":2675}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":80974,"byte_end":80989,"line_start":78,"line_end":78,"column_start":16,"column_end":31},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":860},"to":{"krate":2,"index":2680}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":81025,"byte_end":81040,"line_start":80,"line_end":80,"column_start":29,"column_end":44},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":860},"to":{"krate":2,"index":9809}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":81159,"byte_end":81174,"line_start":86,"line_end":86,"column_start":19,"column_end":34},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":860},"to":{"krate":2,"index":2645}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":81289,"byte_end":81304,"line_start":92,"line_end":92,"column_start":29,"column_end":44},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":860},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":82143,"byte_end":82157,"line_start":114,"line_end":114,"column_start":23,"column_end":37},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":880},"to":{"krate":2,"index":2675}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":82275,"byte_end":82289,"line_start":120,"line_end":120,"column_start":16,"column_end":30},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":880},"to":{"krate":2,"index":2680}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":82325,"byte_end":82339,"line_start":122,"line_end":122,"column_start":29,"column_end":43},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":880},"to":{"krate":2,"index":9809}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":82486,"byte_end":82500,"line_start":129,"line_end":129,"column_start":19,"column_end":33},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":880},"to":{"krate":2,"index":2645}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":82618,"byte_end":82632,"line_start":135,"line_end":135,"column_start":29,"column_end":43},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":880},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":82828,"byte_end":82842,"line_start":141,"line_end":141,"column_start":30,"column_end":44},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":840},"to":{"krate":0,"index":1283}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":83280,"byte_end":83294,"line_start":155,"line_end":155,"column_start":39,"column_end":53},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":840},"to":{"krate":0,"index":1299}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":83624,"byte_end":83641,"line_start":166,"line_end":166,"column_start":27,"column_end":44},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1565},"to":{"krate":0,"index":1283}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":84174,"byte_end":84191,"line_start":185,"line_end":185,"column_start":36,"column_end":53},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1565},"to":{"krate":0,"index":1299}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":84701,"byte_end":84716,"line_start":200,"line_end":200,"column_start":30,"column_end":45},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":860},"to":{"krate":0,"index":1283}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":85271,"byte_end":85286,"line_start":219,"line_end":219,"column_start":39,"column_end":54},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":860},"to":{"krate":0,"index":1299}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":85806,"byte_end":85813,"line_start":234,"line_end":234,"column_start":27,"column_end":34},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1582},"to":{"krate":0,"index":1283}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":86278,"byte_end":86285,"line_start":253,"line_end":253,"column_start":36,"column_end":43},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1582},"to":{"krate":0,"index":1299}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":86718,"byte_end":86732,"line_start":267,"line_end":267,"column_start":30,"column_end":44},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":880},"to":{"krate":0,"index":1283}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":87321,"byte_end":87335,"line_start":284,"line_end":284,"column_start":39,"column_end":53},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":880},"to":{"krate":0,"index":1299}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":88814,"byte_end":88826,"line_start":30,"line_end":30,"column_start":23,"column_end":35},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1003},"to":{"krate":2,"index":2675}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":88923,"byte_end":88935,"line_start":36,"line_end":36,"column_start":16,"column_end":28},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1003},"to":{"krate":2,"index":2680}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":88971,"byte_end":88983,"line_start":38,"line_end":38,"column_start":29,"column_end":41},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1003},"to":{"krate":2,"index":9809}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":89102,"byte_end":89114,"line_start":44,"line_end":44,"column_start":19,"column_end":31},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1003},"to":{"krate":2,"index":2645}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":89229,"byte_end":89241,"line_start":50,"line_end":50,"column_start":29,"column_end":41},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1003},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":89627,"byte_end":89638,"line_start":62,"line_end":62,"column_start":23,"column_end":34},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1023},"to":{"krate":2,"index":2675}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":89735,"byte_end":89746,"line_start":68,"line_end":68,"column_start":16,"column_end":27},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1023},"to":{"krate":2,"index":2680}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":89782,"byte_end":89793,"line_start":70,"line_end":70,"column_start":29,"column_end":40},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1023},"to":{"krate":2,"index":9809}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":89912,"byte_end":89923,"line_start":76,"line_end":76,"column_start":19,"column_end":30},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1023},"to":{"krate":2,"index":2645}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":90038,"byte_end":90049,"line_start":82,"line_end":82,"column_start":29,"column_end":40},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1023},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":90622,"byte_end":90633,"line_start":101,"line_end":101,"column_start":23,"column_end":34},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1043},"to":{"krate":2,"index":2675}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":90701,"byte_end":90712,"line_start":105,"line_end":105,"column_start":16,"column_end":27},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1043},"to":{"krate":2,"index":2680}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":90748,"byte_end":90759,"line_start":107,"line_end":107,"column_start":29,"column_end":40},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1043},"to":{"krate":2,"index":9809}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":90841,"byte_end":90852,"line_start":111,"line_end":111,"column_start":19,"column_end":30},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1043},"to":{"krate":2,"index":2645}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":90951,"byte_end":90962,"line_start":117,"line_end":117,"column_start":29,"column_end":40},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1043},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":91303,"byte_end":91316,"line_start":129,"line_end":129,"column_start":23,"column_end":36},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1062},"to":{"krate":2,"index":2675}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":91384,"byte_end":91397,"line_start":133,"line_end":133,"column_start":16,"column_end":29},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1062},"to":{"krate":2,"index":2680}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":91433,"byte_end":91446,"line_start":135,"line_end":135,"column_start":29,"column_end":42},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1062},"to":{"krate":2,"index":9809}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":91528,"byte_end":91541,"line_start":139,"line_end":139,"column_start":19,"column_end":32},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1062},"to":{"krate":2,"index":2645}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":91640,"byte_end":91653,"line_start":145,"line_end":145,"column_start":29,"column_end":42},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1062},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":92034,"byte_end":92052,"line_start":157,"line_end":157,"column_start":23,"column_end":41},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1081},"to":{"krate":2,"index":2675}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":92120,"byte_end":92138,"line_start":161,"line_end":161,"column_start":16,"column_end":34},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1081},"to":{"krate":2,"index":2680}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":92174,"byte_end":92192,"line_start":163,"line_end":163,"column_start":29,"column_end":47},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1081},"to":{"krate":2,"index":9809}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":92274,"byte_end":92292,"line_start":167,"line_end":167,"column_start":19,"column_end":37},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1081},"to":{"krate":2,"index":2645}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":92391,"byte_end":92409,"line_start":173,"line_end":173,"column_start":29,"column_end":47},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1081},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":92963,"byte_end":92975,"line_start":193,"line_end":193,"column_start":52,"column_end":64},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1003},"to":{"krate":0,"index":1283}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":93566,"byte_end":93578,"line_start":213,"line_end":213,"column_start":39,"column_end":51},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1003},"to":{"krate":0,"index":1299}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":94021,"byte_end":94032,"line_start":227,"line_end":227,"column_start":51,"column_end":62},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1023},"to":{"krate":0,"index":1283}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":94521,"byte_end":94532,"line_start":241,"line_end":241,"column_start":39,"column_end":50},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1023},"to":{"krate":0,"index":1299}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":94860,"byte_end":94875,"line_start":252,"line_end":252,"column_start":27,"column_end":42},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1599},"to":{"krate":0,"index":1283}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":95626,"byte_end":95641,"line_start":276,"line_end":276,"column_start":36,"column_end":51},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1599},"to":{"krate":0,"index":1299}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":96069,"byte_end":96080,"line_start":290,"line_end":290,"column_start":51,"column_end":62},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1043},"to":{"krate":0,"index":1283}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":96393,"byte_end":96404,"line_start":299,"line_end":299,"column_start":39,"column_end":50},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1043},"to":{"krate":0,"index":1299}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":96828,"byte_end":96841,"line_start":311,"line_end":311,"column_start":53,"column_end":66},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1062},"to":{"krate":0,"index":1283}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":97158,"byte_end":97171,"line_start":320,"line_end":320,"column_start":39,"column_end":52},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1062},"to":{"krate":0,"index":1299}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":97681,"byte_end":97699,"line_start":333,"line_end":333,"column_start":58,"column_end":76},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1081},"to":{"krate":0,"index":1283}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":98037,"byte_end":98055,"line_start":342,"line_end":342,"column_start":39,"column_end":57},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1081},"to":{"krate":0,"index":1299}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":98534,"byte_end":98541,"line_start":356,"line_end":356,"column_start":27,"column_end":34},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1616},"to":{"krate":0,"index":1283}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":98748,"byte_end":98755,"line_start":363,"line_end":363,"column_start":36,"column_end":43},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1616},"to":{"krate":0,"index":1299}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":99031,"byte_end":99039,"line_start":374,"line_end":374,"column_start":27,"column_end":35},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1633},"to":{"krate":0,"index":1283}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":99175,"byte_end":99183,"line_start":380,"line_end":380,"column_start":36,"column_end":44},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1633},"to":{"krate":0,"index":1299}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\bundle.rs","byte_start":99929,"byte_end":99935,"line_start":18,"line_end":18,"column_start":43,"column_end":49},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1211},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":52240,"byte_end":52250,"line_start":73,"line_end":73,"column_start":23,"column_end":33},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1648},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":54109,"byte_end":54121,"line_start":127,"line_end":127,"column_start":53,"column_end":65},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1671},"to":{"krate":2,"index":9609}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":54745,"byte_end":54757,"line_start":139,"line_end":139,"column_start":46,"column_end":58},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1671},"to":{"krate":1,"index":2452}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":55077,"byte_end":55089,"line_start":149,"line_end":149,"column_start":42,"column_end":54},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1671},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":56416,"byte_end":56425,"line_start":187,"line_end":187,"column_start":39,"column_end":48},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":1696},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":57094,"byte_end":57103,"line_start":202,"line_end":202,"column_start":53,"column_end":62},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":1696},"to":{"krate":2,"index":9609}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":57963,"byte_end":57972,"line_start":218,"line_end":218,"column_start":46,"column_end":55},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":1696},"to":{"krate":1,"index":2452}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":60372,"byte_end":60385,"line_start":278,"line_end":278,"column_start":26,"column_end":39},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":1738},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":61058,"byte_end":61063,"line_start":297,"line_end":297,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":3029},"to":{"krate":0,"index":1283}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\shade.rs","byte_start":101185,"byte_end":101189,"line_start":25,"line_end":25,"column_start":22,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":3034},"to":{"krate":0,"index":1323}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\shade.rs","byte_start":102870,"byte_end":102882,"line_start":88,"line_end":88,"column_start":23,"column_end":35},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":1818},"to":{"krate":2,"index":9609}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\shade.rs","byte_start":103519,"byte_end":103531,"line_start":101,"line_end":101,"column_start":16,"column_end":28},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":1818},"to":{"krate":1,"index":2452}}]}