{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0","program":"C:\\Users\\milla\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","draw_state","C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=042ff32716f6d528","-C","extra-filename=-042ff32716f6d528","--out-dir","c:\\Users\\milla\\Desktop\\coding\\GameOfLife\\ggez\\game_of_life\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\milla\\Desktop\\coding\\GameOfLife\\ggez\\game_of_life\\target\\rls\\debug\\deps","--extern","bitflags=c:\\Users\\milla\\Desktop\\coding\\GameOfLife\\ggez\\game_of_life\\target\\rls\\debug\\deps\\libbitflags-76ea738380d1bede.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\milla\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\milla\\Desktop\\coding\\GameOfLife\\ggez\\game_of_life\\target\\rls\\debug\\deps\\libdraw_state-042ff32716f6d528.rmeta"},"prelude":{"crate_id":{"name":"draw_state","disambiguator":[10340675538045552622,0]},"crate_root":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src","external_crates":[{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src/lib.rs","num":1,"id":{"name":"std","disambiguator":[7379719041391505039,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src/lib.rs","num":2,"id":{"name":"core","disambiguator":[5226548339696486402,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[15782588708828798436,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11258588358156983047,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6811839233127289238,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6798478037195512723,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12572258325454906649,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[598470195457823820,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7285820039251336650,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15004074270013699283,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src/lib.rs","num":11,"id":{"name":"std_detect","disambiguator":[6568562326383462027,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[7532148157145861684,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src/lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[15660406440960571571,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src/lib.rs","num":14,"id":{"name":"bitflags","disambiguator":[906870646478561945,0]}}],"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src/lib.rs","byte_start":600,"byte_end":832,"line_start":15,"line_end":27,"column_start":1,"column_end":16}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src/lib.rs","byte_start":600,"byte_end":832,"line_start":15,"line_end":27,"column_start":1,"column_end":16},"name":"","qualname":"::","value":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":39},{"krate":0,"index":73}],"decl_id":null,"docs":" Graphics state blocks for gfx-rs\n","sig":null,"attributes":[{"value":"/ Graphics state blocks for gfx-rs","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src/lib.rs","byte_start":600,"byte_end":636,"line_start":15,"line_end":15,"column_start":1,"column_end":37}},{"value":"deny(missing_docs, missing_copy_implementations)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src/lib.rs","byte_start":638,"byte_end":690,"line_start":17,"line_end":17,"column_start":1,"column_end":53}}]},{"kind":"Mod","id":{"krate":0,"index":4},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\preset.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"preset","qualname":"::preset","value":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\preset.rs","parent":null,"children":[{"krate":0,"index":5},{"krate":0,"index":27}],"decl_id":null,"docs":" State presets\n","sig":null,"attributes":[{"value":"/ State presets","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\preset.rs","byte_start":1434,"byte_end":1451,"line_start":15,"line_end":15,"column_start":1,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":5},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\preset.rs","byte_start":1488,"byte_end":1493,"line_start":18,"line_end":18,"column_start":9,"column_end":14},"name":"blend","qualname":"::preset::blend","value":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\preset.rs","parent":null,"children":[{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26}],"decl_id":null,"docs":" Blending preset modes.\n","sig":null,"attributes":[{"value":"/ Blending preset modes.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\preset.rs","byte_start":1453,"byte_end":1479,"line_start":17,"line_end":17,"column_start":1,"column_end":27}}]},{"kind":"Const","id":{"krate":0,"index":22},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\preset.rs","byte_start":1638,"byte_end":1645,"line_start":22,"line_end":22,"column_start":15,"column_end":22},"name":"REPLACE","qualname":"::preset::blend::REPLACE","value":"Blend","parent":null,"children":[],"decl_id":null,"docs":" When combining two fragments, choose the source value\n","sig":null,"attributes":[{"value":"/ When combining two fragments, choose the source value","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\preset.rs","byte_start":1566,"byte_end":1623,"line_start":21,"line_end":21,"column_start":5,"column_end":62}}]},{"kind":"Const","id":{"krate":0,"index":23},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\preset.rs","byte_start":2061,"byte_end":2064,"line_start":36,"line_end":36,"column_start":12,"column_end":15},"name":"ADD","qualname":"::preset::blend::ADD","value":"Blend","parent":null,"children":[],"decl_id":null,"docs":" When combining two fragments, add their values together, saturating at 1.0\n","sig":null,"attributes":[{"value":"/ When combining two fragments, add their values together, saturating at 1.0","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\preset.rs","byte_start":1971,"byte_end":2049,"line_start":35,"line_end":35,"column_start":2,"column_end":80}}]},{"kind":"Const","id":{"krate":0,"index":24},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\preset.rs","byte_start":2469,"byte_end":2477,"line_start":50,"line_end":50,"column_start":15,"column_end":23},"name":"MULTIPLY","qualname":"::preset::blend::MULTIPLY","value":"Blend","parent":null,"children":[],"decl_id":null,"docs":" When combining two fragments, multiply their values together.\n","sig":null,"attributes":[{"value":"/ When combining two fragments, multiply their values together.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\preset.rs","byte_start":2389,"byte_end":2454,"line_start":49,"line_end":49,"column_start":5,"column_end":70}}]},{"kind":"Const","id":{"krate":0,"index":25},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\preset.rs","byte_start":3199,"byte_end":3204,"line_start":67,"line_end":67,"column_start":15,"column_end":20},"name":"ALPHA","qualname":"::preset::blend::ALPHA","value":"Blend","parent":null,"children":[],"decl_id":null,"docs":" When combining two fragments, add the value of the source times its alpha channel with the\n value of the destination multiplied by the inverse of the source alpha channel. Has the\n usual transparency effect: mixes the two colors using a fraction of each one specified by\n the alpha of the source.\n","sig":null,"attributes":[{"value":"/ When combining two fragments, add the value of the source times its alpha channel with the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\preset.rs","byte_start":2863,"byte_end":2957,"line_start":63,"line_end":63,"column_start":5,"column_end":99}},{"value":"/ value of the destination multiplied by the inverse of the source alpha channel. Has the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\preset.rs","byte_start":2962,"byte_end":3053,"line_start":64,"line_end":64,"column_start":5,"column_end":96}},{"value":"/ usual transparency effect: mixes the two colors using a fraction of each one specified by","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\preset.rs","byte_start":3058,"byte_end":3151,"line_start":65,"line_end":65,"column_start":5,"column_end":98}},{"value":"/ the alpha of the source.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\preset.rs","byte_start":3156,"byte_end":3184,"line_start":66,"line_end":66,"column_start":5,"column_end":33}}]},{"kind":"Const","id":{"krate":0,"index":26},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\preset.rs","byte_start":3986,"byte_end":3992,"line_start":85,"line_end":85,"column_start":15,"column_end":21},"name":"INVERT","qualname":"::preset::blend::INVERT","value":"Blend","parent":null,"children":[],"decl_id":null,"docs":" When combining two fragments, subtract the destination color from a constant color\n using the source color as weight. Has an invert effect with the constant color\n as base and source color controlling displacement from the base color.\n A white source color and a white value results in plain invert.\n The output alpha is same as destination alpha.\n","sig":null,"attributes":[{"value":"/ When combining two fragments, subtract the destination color from a constant color","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\preset.rs","byte_start":3592,"byte_end":3678,"line_start":80,"line_end":80,"column_start":5,"column_end":91}},{"value":"/ using the source color as weight. Has an invert effect with the constant color","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\preset.rs","byte_start":3683,"byte_end":3765,"line_start":81,"line_end":81,"column_start":5,"column_end":87}},{"value":"/ as base and source color controlling displacement from the base color.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\preset.rs","byte_start":3770,"byte_end":3844,"line_start":82,"line_end":82,"column_start":5,"column_end":79}},{"value":"/ A white source color and a white value results in plain invert.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\preset.rs","byte_start":3849,"byte_end":3916,"line_start":83,"line_end":83,"column_start":5,"column_end":72}},{"value":"/ The output alpha is same as destination alpha.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\preset.rs","byte_start":3921,"byte_end":3971,"line_start":84,"line_end":84,"column_start":5,"column_end":55}}]},{"kind":"Mod","id":{"krate":0,"index":27},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\preset.rs","byte_start":4818,"byte_end":4823,"line_start":107,"line_end":107,"column_start":9,"column_end":14},"name":"depth","qualname":"::preset::depth","value":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\preset.rs","parent":null,"children":[{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":32},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38}],"decl_id":null,"docs":" [Depth](../../state/struct.Depth.html) presets for depth tests.","sig":null,"attributes":[{"value":"/ [Depth](../../state/struct.Depth.html) presets for depth tests.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\preset.rs","byte_start":4378,"byte_end":4445,"line_start":99,"line_end":99,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\preset.rs","byte_start":4446,"byte_end":4449,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ Depth testing is used to avoid drawing \"further away\" fragments on top of already drawn","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\preset.rs","byte_start":4450,"byte_end":4541,"line_start":101,"line_end":101,"column_start":1,"column_end":92}},{"value":"/ fragments. Each fragment's output depth is tested against a depth buffer, if the test fails","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\preset.rs","byte_start":4542,"byte_end":4637,"line_start":102,"line_end":102,"column_start":1,"column_end":96}},{"value":"/ the fragment will not be drawn.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\preset.rs","byte_start":4638,"byte_end":4673,"line_start":103,"line_end":103,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\preset.rs","byte_start":4674,"byte_end":4677,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ A fragment's output depth is the interpolated vertex z-value, or otherwise","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\preset.rs","byte_start":4678,"byte_end":4756,"line_start":105,"line_end":105,"column_start":1,"column_end":79}},{"value":"/ explicitly set (ie in OpenGL by *gl_FragDepth*).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\preset.rs","byte_start":4757,"byte_end":4809,"line_start":106,"line_end":106,"column_start":1,"column_end":53}}]},{"kind":"Const","id":{"krate":0,"index":35},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\preset.rs","byte_start":5003,"byte_end":5012,"line_start":112,"line_end":112,"column_start":15,"column_end":24},"name":"PASS_TEST","qualname":"::preset::depth::PASS_TEST","value":"Depth","parent":null,"children":[],"decl_id":null,"docs":" When rendering a fragment, draw regardless of depth buffer state.\n Rendering will not update the depth buffer.\n","sig":null,"attributes":[{"value":"/ When rendering a fragment, draw regardless of depth buffer state.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\preset.rs","byte_start":4867,"byte_end":4936,"line_start":110,"line_end":110,"column_start":5,"column_end":74}},{"value":"/ Rendering will not update the depth buffer.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\preset.rs","byte_start":4941,"byte_end":4988,"line_start":111,"line_end":111,"column_start":5,"column_end":52}}]},{"kind":"Const","id":{"krate":0,"index":36},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\preset.rs","byte_start":5229,"byte_end":5239,"line_start":119,"line_end":119,"column_start":15,"column_end":25},"name":"PASS_WRITE","qualname":"::preset::depth::PASS_WRITE","value":"Depth","parent":null,"children":[],"decl_id":null,"docs":" When rendering a fragment, draw regardless of depth buffer state.\n Rendering will update the depth buffer.\n","sig":null,"attributes":[{"value":"/ When rendering a fragment, draw regardless of depth buffer state.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\preset.rs","byte_start":5097,"byte_end":5166,"line_start":117,"line_end":117,"column_start":5,"column_end":74}},{"value":"/ Rendering will update the depth buffer.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\preset.rs","byte_start":5171,"byte_end":5214,"line_start":118,"line_end":118,"column_start":5,"column_end":48}}]},{"kind":"Const","id":{"krate":0,"index":37},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\preset.rs","byte_start":5378,"byte_end":5393,"line_start":125,"line_end":125,"column_start":15,"column_end":30},"name":"LESS_EQUAL_TEST","qualname":"::preset::depth::LESS_EQUAL_TEST","value":"Depth","parent":null,"children":[],"decl_id":null,"docs":" \"<=\" comparison with read-only depth\n","sig":null,"attributes":[{"value":"/ \"<=\" comparison with read-only depth","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\preset.rs","byte_start":5323,"byte_end":5363,"line_start":124,"line_end":124,"column_start":5,"column_end":45}}]},{"kind":"Const","id":{"krate":0,"index":38},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\preset.rs","byte_start":5711,"byte_end":5727,"line_start":133,"line_end":133,"column_start":15,"column_end":31},"name":"LESS_EQUAL_WRITE","qualname":"::preset::depth::LESS_EQUAL_WRITE","value":"Depth","parent":null,"children":[],"decl_id":null,"docs":" When rendering a fragment, only draw when the fragment's output depth **is less than or\n equal to** the current depth buffer value.\n Rendering will update the depth buffer with the new depth value.\n","sig":null,"attributes":[{"value":"/ When rendering a fragment, only draw when the fragment's output depth **is less than or","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\preset.rs","byte_start":5481,"byte_end":5572,"line_start":130,"line_end":130,"column_start":5,"column_end":96}},{"value":"/ equal to** the current depth buffer value.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\preset.rs","byte_start":5577,"byte_end":5623,"line_start":131,"line_end":131,"column_start":5,"column_end":51}},{"value":"/ Rendering will update the depth buffer with the new depth value.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\preset.rs","byte_start":5628,"byte_end":5696,"line_start":132,"line_end":132,"column_start":5,"column_end":73}}]},{"kind":"Mod","id":{"krate":0,"index":39},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"state","qualname":"::state","value":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","parent":null,"children":[{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":43},{"krate":0,"index":46},{"krate":0,"index":80},{"krate":0,"index":85},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":93},{"krate":0,"index":96},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":101},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":103},{"krate":0,"index":107},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":115},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":122},{"krate":0,"index":124},{"krate":0,"index":131},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":139},{"krate":0,"index":142},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":147},{"krate":0,"index":149},{"krate":0,"index":157},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":165},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":172},{"krate":0,"index":174},{"krate":0,"index":176},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":184},{"krate":0,"index":187},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":192},{"krate":0,"index":194},{"krate":0,"index":200},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":208},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":215},{"krate":0,"index":52},{"krate":0,"index":217},{"krate":0,"index":234},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":242},{"krate":0,"index":245},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":250},{"krate":0,"index":252},{"krate":0,"index":269},{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":277},{"krate":0,"index":280},{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":285},{"krate":0,"index":287},{"krate":0,"index":294},{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":302},{"krate":0,"index":305},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":311},{"krate":0,"index":56},{"krate":0,"index":313},{"krate":0,"index":316},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":321},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":326},{"krate":0,"index":329},{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":335},{"krate":0,"index":58},{"krate":0,"index":337},{"krate":0,"index":340},{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":345},{"krate":0,"index":346},{"krate":0,"index":348},{"krate":0,"index":351},{"krate":0,"index":353},{"krate":0,"index":354},{"krate":0,"index":357},{"krate":0,"index":60},{"krate":0,"index":359},{"krate":0,"index":370},{"krate":0,"index":372},{"krate":0,"index":373},{"krate":0,"index":375},{"krate":0,"index":376},{"krate":0,"index":378},{"krate":0,"index":381},{"krate":0,"index":383},{"krate":0,"index":384},{"krate":0,"index":386},{"krate":0,"index":388},{"krate":0,"index":401},{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":409},{"krate":0,"index":412},{"krate":0,"index":414},{"krate":0,"index":415},{"krate":0,"index":417},{"krate":0,"index":419},{"krate":0,"index":432},{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":440},{"krate":0,"index":443},{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":449},{"krate":0,"index":451},{"krate":0,"index":455},{"krate":0,"index":457},{"krate":0,"index":458},{"krate":0,"index":460},{"krate":0,"index":461},{"krate":0,"index":463},{"krate":0,"index":466},{"krate":0,"index":468},{"krate":0,"index":469},{"krate":0,"index":472},{"krate":0,"index":62},{"krate":0,"index":474},{"krate":0,"index":477},{"krate":0,"index":479},{"krate":0,"index":480},{"krate":0,"index":482},{"krate":0,"index":483},{"krate":0,"index":485},{"krate":0,"index":488},{"krate":0,"index":489},{"krate":0,"index":492},{"krate":0,"index":64},{"krate":0,"index":66},{"krate":0,"index":494},{"krate":0,"index":496},{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":504},{"krate":0,"index":506},{"krate":0,"index":508},{"krate":0,"index":510},{"krate":0,"index":513},{"krate":0,"index":521},{"krate":0,"index":523},{"krate":0,"index":525},{"krate":0,"index":527},{"krate":0,"index":529},{"krate":0,"index":553},{"krate":0,"index":556},{"krate":0,"index":558},{"krate":0,"index":561},{"krate":0,"index":563},{"krate":0,"index":566},{"krate":0,"index":568},{"krate":0,"index":571},{"krate":0,"index":573},{"krate":0,"index":576},{"krate":0,"index":579},{"krate":0,"index":596},{"krate":0,"index":599},{"krate":0,"index":601},{"krate":0,"index":602},{"krate":0,"index":604},{"krate":0,"index":605},{"krate":0,"index":607},{"krate":0,"index":610},{"krate":0,"index":611},{"krate":0,"index":614},{"krate":0,"index":68},{"krate":0,"index":616},{"krate":0,"index":619},{"krate":0,"index":621},{"krate":0,"index":622},{"krate":0,"index":624},{"krate":0,"index":625},{"krate":0,"index":628},{"krate":0,"index":70}],"decl_id":null,"docs":" Fixed-function hardware state.","sig":null,"attributes":[{"value":"/ Fixed-function hardware state.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":6412,"byte_end":6446,"line_start":15,"line_end":15,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":6447,"byte_end":6450,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Configures the primitive assembly (PA), rasterizer, and output merger (OM) blocks.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":6451,"byte_end":6537,"line_start":17,"line_end":17,"column_start":1,"column_end":87}}]},{"kind":"TupleVariant","id":{"krate":0,"index":81},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":6836,"byte_end":6845,"line_start":29,"line_end":29,"column_start":5,"column_end":14},"name":"Clockwise","qualname":"::state::FrontFace::Clockwise","value":"FrontFace::Clockwise","parent":{"krate":0,"index":80},"children":[],"decl_id":null,"docs":" Clockwise winding order.\n","sig":null,"attributes":[{"value":"/ Clockwise winding order.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":6803,"byte_end":6831,"line_start":28,"line_end":28,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":83},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":6892,"byte_end":6908,"line_start":31,"line_end":31,"column_start":5,"column_end":21},"name":"CounterClockwise","qualname":"::state::FrontFace::CounterClockwise","value":"FrontFace::CounterClockwise","parent":{"krate":0,"index":80},"children":[],"decl_id":null,"docs":" Counter-clockwise winding order.\n","sig":null,"attributes":[{"value":"/ Counter-clockwise winding order.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":6851,"byte_end":6887,"line_start":30,"line_end":30,"column_start":5,"column_end":41}}]},{"kind":"Enum","id":{"krate":0,"index":80},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":6787,"byte_end":6796,"line_start":27,"line_end":27,"column_start":10,"column_end":19},"name":"FrontFace","qualname":"::state::FrontFace","value":"pub enum FrontFace { Clockwise, CounterClockwise, }","parent":null,"children":[{"krate":0,"index":81},{"krate":0,"index":83}],"decl_id":null,"docs":" The front face winding order of a set of vertices.\n","sig":null,"attributes":[{"value":"/ The front face winding order of a set of vertices.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":6594,"byte_end":6648,"line_start":24,"line_end":24,"column_start":1,"column_end":55}}]},{"kind":"Type","id":{"krate":0,"index":49},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":6993,"byte_end":7002,"line_start":36,"line_end":36,"column_start":10,"column_end":19},"name":"LineWidth","qualname":"::state::LineWidth","value":"i32","parent":null,"children":[],"decl_id":null,"docs":" Width of a line.\n Could be f32 if not for Hash deriving issues.\n","sig":null,"attributes":[{"value":"/ Width of a line.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":6913,"byte_end":6933,"line_start":34,"line_end":34,"column_start":1,"column_end":21}},{"value":"/ Could be f32 if not for Hash deriving issues.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":6934,"byte_end":6983,"line_start":35,"line_end":35,"column_start":1,"column_end":50}}]},{"kind":"Type","id":{"krate":0,"index":50},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":7099,"byte_end":7110,"line_start":39,"line_end":39,"column_start":10,"column_end":21},"name":"OffsetSlope","qualname":"::state::OffsetSlope","value":"i32","parent":null,"children":[],"decl_id":null,"docs":" Slope depth offset factor\n Could be f32 if not for Hash deriving issues.\n","sig":null,"attributes":[{"value":"/ Slope depth offset factor","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":7010,"byte_end":7039,"line_start":37,"line_end":37,"column_start":1,"column_end":30}},{"value":"/ Could be f32 if not for Hash deriving issues.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":7040,"byte_end":7089,"line_start":38,"line_end":38,"column_start":1,"column_end":50}}]},{"kind":"Type","id":{"krate":0,"index":51},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":7273,"byte_end":7284,"line_start":43,"line_end":43,"column_start":10,"column_end":21},"name":"OffsetUnits","qualname":"::state::OffsetUnits","value":"i32","parent":null,"children":[],"decl_id":null,"docs":" Number of units to offset, where\n the unit is the minimal difference in the depth value\n dictated by the precision of the depth buffer.\n","sig":null,"attributes":[{"value":"/ Number of units to offset, where","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":7118,"byte_end":7154,"line_start":40,"line_end":40,"column_start":1,"column_end":37}},{"value":"/ the unit is the minimal difference in the depth value","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":7155,"byte_end":7212,"line_start":41,"line_end":41,"column_start":1,"column_end":58}},{"value":"/ dictated by the precision of the depth buffer.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":7213,"byte_end":7263,"line_start":42,"line_end":42,"column_start":1,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":103},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":7483,"byte_end":7489,"line_start":48,"line_end":48,"column_start":12,"column_end":18},"name":"Offset","qualname":"::state::Offset","value":"","parent":null,"children":[],"decl_id":null,"docs":" How to offset vertices in screen space, if at all.\n","sig":null,"attributes":[{"value":"/ How to offset vertices in screen space, if at all.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":7293,"byte_end":7347,"line_start":45,"line_end":45,"column_start":1,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":105},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":7490,"byte_end":7505,"line_start":48,"line_end":48,"column_start":19,"column_end":34},"name":"0","qualname":"::state::Offset::0","value":"i32","parent":{"krate":0,"index":103},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":106},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":7507,"byte_end":7522,"line_start":48,"line_end":48,"column_start":36,"column_end":51},"name":"1","qualname":"::state::Offset::1","value":"i32","parent":{"krate":0,"index":103},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":125},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":7735,"byte_end":7742,"line_start":55,"line_end":55,"column_start":5,"column_end":12},"name":"Nothing","qualname":"::state::CullFace::Nothing","value":"CullFace::Nothing","parent":{"krate":0,"index":124},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":127},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":7748,"byte_end":7753,"line_start":56,"line_end":56,"column_start":5,"column_end":10},"name":"Front","qualname":"::state::CullFace::Front","value":"CullFace::Front","parent":{"krate":0,"index":124},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":129},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":7759,"byte_end":7763,"line_start":57,"line_end":57,"column_start":5,"column_end":9},"name":"Back","qualname":"::state::CullFace::Back","value":"CullFace::Back","parent":{"krate":0,"index":124},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":124},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":7720,"byte_end":7728,"line_start":54,"line_end":54,"column_start":10,"column_end":18},"name":"CullFace","qualname":"::state::CullFace","value":"pub enum CullFace { Nothing, Front, Back, }","parent":null,"children":[{"krate":0,"index":125},{"krate":0,"index":127},{"krate":0,"index":129}],"decl_id":null,"docs":" Which face, if any, to cull.\n","sig":null,"attributes":[{"value":"/ Which face, if any, to cull.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":7526,"byte_end":7558,"line_start":50,"line_end":50,"column_start":1,"column_end":33}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":7559,"byte_end":7581,"line_start":51,"line_end":51,"column_start":1,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":150},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":7984,"byte_end":7989,"line_start":65,"line_end":65,"column_start":5,"column_end":10},"name":"Point","qualname":"::state::RasterMethod::Point","value":"RasterMethod::Point","parent":{"krate":0,"index":149},"children":[],"decl_id":null,"docs":" Rasterize as a point.\n","sig":null,"attributes":[{"value":"/ Rasterize as a point.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":7954,"byte_end":7979,"line_start":64,"line_end":64,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":152},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":8045,"byte_end":8049,"line_start":67,"line_end":67,"column_start":5,"column_end":9},"name":"Line","qualname":"::state::RasterMethod::Line","value":"RasterMethod::Line(LineWidth)","parent":{"krate":0,"index":149},"children":[],"decl_id":null,"docs":" Rasterize as a line with the given width.\n","sig":null,"attributes":[{"value":"/ Rasterize as a line with the given width.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":7995,"byte_end":8040,"line_start":66,"line_end":66,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":155},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":8095,"byte_end":8099,"line_start":69,"line_end":69,"column_start":5,"column_end":9},"name":"Fill","qualname":"::state::RasterMethod::Fill","value":"RasterMethod::Fill","parent":{"krate":0,"index":149},"children":[],"decl_id":null,"docs":" Rasterize as a face.\n","sig":null,"attributes":[{"value":"/ Rasterize as a face.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":8066,"byte_end":8090,"line_start":68,"line_end":68,"column_start":5,"column_end":29}}]},{"kind":"Enum","id":{"krate":0,"index":149},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":7935,"byte_end":7947,"line_start":63,"line_end":63,"column_start":10,"column_end":22},"name":"RasterMethod","qualname":"::state::RasterMethod","value":"pub enum RasterMethod { Point, Line(LineWidth), Fill, }","parent":null,"children":[{"krate":0,"index":150},{"krate":0,"index":152},{"krate":0,"index":155}],"decl_id":null,"docs":" How to rasterize a primitive.\n","sig":null,"attributes":[{"value":"/ How to rasterize a primitive.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":7768,"byte_end":7801,"line_start":60,"line_end":60,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":174},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":8281,"byte_end":8292,"line_start":75,"line_end":75,"column_start":12,"column_end":23},"name":"MultiSample","qualname":"::state::MultiSample","value":"","parent":null,"children":[],"decl_id":null,"docs":" Multi-sampling rasterization mode\n","sig":null,"attributes":[{"value":"/ Multi-sampling rasterization mode","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":8103,"byte_end":8140,"line_start":72,"line_end":72,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":194},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":8632,"byte_end":8642,"line_start":83,"line_end":83,"column_start":12,"column_end":22},"name":"Rasterizer","qualname":"::state::Rasterizer","value":"Rasterizer { front_face, cull_face, method, offset, samples }","parent":null,"children":[{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199}],"decl_id":null,"docs":" Primitive rasterization state. Note that GL allows different raster\n method to be used for front and back, while this abstraction does not.\n","sig":null,"attributes":[{"value":"/ Primitive rasterization state. Note that GL allows different raster","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":8350,"byte_end":8421,"line_start":79,"line_end":79,"column_start":1,"column_end":72}},{"value":"/ method to be used for front and back, while this abstraction does not.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":8422,"byte_end":8496,"line_start":80,"line_end":80,"column_start":1,"column_end":75}}]},{"kind":"Field","id":{"krate":0,"index":195},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":8730,"byte_end":8740,"line_start":85,"line_end":85,"column_start":9,"column_end":19},"name":"front_face","qualname":"::state::Rasterizer::front_face","value":"state::FrontFace","parent":{"krate":0,"index":194},"children":[],"decl_id":null,"docs":" Which vertex winding is considered to be the front face for culling.\n","sig":null,"attributes":[{"value":"/ Which vertex winding is considered to be the front face for culling.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":8649,"byte_end":8721,"line_start":84,"line_end":84,"column_start":5,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":196},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":8798,"byte_end":8807,"line_start":87,"line_end":87,"column_start":9,"column_end":18},"name":"cull_face","qualname":"::state::Rasterizer::cull_face","value":"state::CullFace","parent":{"krate":0,"index":194},"children":[],"decl_id":null,"docs":" Which face should be culled.\n","sig":null,"attributes":[{"value":"/ Which face should be culled.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":8757,"byte_end":8789,"line_start":86,"line_end":86,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":197},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":8868,"byte_end":8874,"line_start":89,"line_end":89,"column_start":9,"column_end":15},"name":"method","qualname":"::state::Rasterizer::method","value":"state::RasterMethod","parent":{"krate":0,"index":194},"children":[],"decl_id":null,"docs":" How to rasterize this primitive.\n","sig":null,"attributes":[{"value":"/ How to rasterize this primitive.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":8823,"byte_end":8859,"line_start":88,"line_end":88,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":198},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":8935,"byte_end":8941,"line_start":91,"line_end":91,"column_start":9,"column_end":15},"name":"offset","qualname":"::state::Rasterizer::offset","value":"std::option::Option<state::Offset>","parent":{"krate":0,"index":194},"children":[],"decl_id":null,"docs":" Any polygon offset to apply.\n","sig":null,"attributes":[{"value":"/ Any polygon offset to apply.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":8894,"byte_end":8926,"line_start":90,"line_end":90,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":199},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":8996,"byte_end":9003,"line_start":93,"line_end":93,"column_start":9,"column_end":16},"name":"samples","qualname":"::state::Rasterizer::samples","value":"std::option::Option<state::MultiSample>","parent":{"krate":0,"index":194},"children":[],"decl_id":null,"docs":" Multi-sampling mode.\n","sig":null,"attributes":[{"value":"/ Multi-sampling mode.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":8963,"byte_end":8987,"line_start":92,"line_end":92,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":9099,"byte_end":9107,"line_start":98,"line_end":98,"column_start":12,"column_end":20},"name":"new_fill","qualname":"<Rasterizer>::new_fill","value":"pub fn new_fill() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new filling rasterizer.\n","sig":null,"attributes":[{"value":"/ Create a new filling rasterizer.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":9051,"byte_end":9087,"line_start":97,"line_end":97,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":9388,"byte_end":9402,"line_start":109,"line_end":109,"column_start":12,"column_end":26},"name":"with_cull_back","qualname":"<Rasterizer>::with_cull_back","value":"pub fn with_cull_back(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Add back face culling.\n","sig":null,"attributes":[{"value":"/ Add back face culling.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":9350,"byte_end":9376,"line_start":108,"line_end":108,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":9554,"byte_end":9565,"line_start":117,"line_end":117,"column_start":12,"column_end":23},"name":"with_offset","qualname":"<Rasterizer>::with_offset","value":"pub fn with_offset(Self, f32, OffsetUnits) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Add polygon offset.\n","sig":null,"attributes":[{"value":"/ Add polygon offset.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":9519,"byte_end":9542,"line_start":116,"line_end":116,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":218},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":9945,"byte_end":9950,"line_start":130,"line_end":130,"column_start":5,"column_end":10},"name":"Never","qualname":"::state::Comparison::Never","value":"Comparison::Never","parent":{"krate":0,"index":217},"children":[],"decl_id":null,"docs":" `false`\n","sig":null,"attributes":[{"value":"/ `false`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":9929,"byte_end":9940,"line_start":129,"line_end":129,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":220},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":9972,"byte_end":9976,"line_start":132,"line_end":132,"column_start":5,"column_end":9},"name":"Less","qualname":"::state::Comparison::Less","value":"Comparison::Less","parent":{"krate":0,"index":217},"children":[],"decl_id":null,"docs":" `x < y`\n","sig":null,"attributes":[{"value":"/ `x < y`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":9956,"byte_end":9967,"line_start":131,"line_end":131,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":222},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":9999,"byte_end":10008,"line_start":134,"line_end":134,"column_start":5,"column_end":14},"name":"LessEqual","qualname":"::state::Comparison::LessEqual","value":"Comparison::LessEqual","parent":{"krate":0,"index":217},"children":[],"decl_id":null,"docs":" `x <= y`\n","sig":null,"attributes":[{"value":"/ `x <= y`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":9982,"byte_end":9994,"line_start":133,"line_end":133,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":224},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":10031,"byte_end":10036,"line_start":136,"line_end":136,"column_start":5,"column_end":10},"name":"Equal","qualname":"::state::Comparison::Equal","value":"Comparison::Equal","parent":{"krate":0,"index":217},"children":[],"decl_id":null,"docs":" `x == y`\n","sig":null,"attributes":[{"value":"/ `x == y`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":10014,"byte_end":10026,"line_start":135,"line_end":135,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":226},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":10059,"byte_end":10071,"line_start":138,"line_end":138,"column_start":5,"column_end":17},"name":"GreaterEqual","qualname":"::state::Comparison::GreaterEqual","value":"Comparison::GreaterEqual","parent":{"krate":0,"index":217},"children":[],"decl_id":null,"docs":" `x >= y`\n","sig":null,"attributes":[{"value":"/ `x >= y`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":10042,"byte_end":10054,"line_start":137,"line_end":137,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":228},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":10093,"byte_end":10100,"line_start":140,"line_end":140,"column_start":5,"column_end":12},"name":"Greater","qualname":"::state::Comparison::Greater","value":"Comparison::Greater","parent":{"krate":0,"index":217},"children":[],"decl_id":null,"docs":" `x > y`\n","sig":null,"attributes":[{"value":"/ `x > y`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":10077,"byte_end":10088,"line_start":139,"line_end":139,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":230},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":10123,"byte_end":10131,"line_start":142,"line_end":142,"column_start":5,"column_end":13},"name":"NotEqual","qualname":"::state::Comparison::NotEqual","value":"Comparison::NotEqual","parent":{"krate":0,"index":217},"children":[],"decl_id":null,"docs":" `x != y`\n","sig":null,"attributes":[{"value":"/ `x != y`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":10106,"byte_end":10118,"line_start":141,"line_end":141,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":232},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":10152,"byte_end":10158,"line_start":144,"line_end":144,"column_start":5,"column_end":11},"name":"Always","qualname":"::state::Comparison::Always","value":"Comparison::Always","parent":{"krate":0,"index":217},"children":[],"decl_id":null,"docs":" `true`\n","sig":null,"attributes":[{"value":"/ `true`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":10137,"byte_end":10147,"line_start":143,"line_end":143,"column_start":5,"column_end":15}}]},{"kind":"Enum","id":{"krate":0,"index":217},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":9912,"byte_end":9922,"line_start":128,"line_end":128,"column_start":10,"column_end":20},"name":"Comparison","qualname":"::state::Comparison","value":"pub enum Comparison {\n    Never,\n    Less,\n    LessEqual,\n    Equal,\n    GreaterEqual,\n    Greater,\n    NotEqual,\n    Always,\n}","parent":null,"children":[{"krate":0,"index":218},{"krate":0,"index":220},{"krate":0,"index":222},{"krate":0,"index":224},{"krate":0,"index":226},{"krate":0,"index":228},{"krate":0,"index":230},{"krate":0,"index":232}],"decl_id":null,"docs":" A pixel-wise comparison function.\n","sig":null,"attributes":[{"value":"/ A pixel-wise comparison function.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":9736,"byte_end":9773,"line_start":125,"line_end":125,"column_start":1,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":253},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":10434,"byte_end":10438,"line_start":153,"line_end":153,"column_start":5,"column_end":9},"name":"Keep","qualname":"::state::StencilOp::Keep","value":"StencilOp::Keep","parent":{"krate":0,"index":252},"children":[],"decl_id":null,"docs":" Keep the current value in the stencil buffer (no change).\n","sig":null,"attributes":[{"value":"/ Keep the current value in the stencil buffer (no change).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":10368,"byte_end":10429,"line_start":152,"line_end":152,"column_start":5,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":255},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":10497,"byte_end":10501,"line_start":155,"line_end":155,"column_start":5,"column_end":9},"name":"Zero","qualname":"::state::StencilOp::Zero","value":"StencilOp::Zero","parent":{"krate":0,"index":252},"children":[],"decl_id":null,"docs":" Set the value in the stencil buffer to zero.\n","sig":null,"attributes":[{"value":"/ Set the value in the stencil buffer to zero.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":10444,"byte_end":10492,"line_start":154,"line_end":154,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":257},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":10574,"byte_end":10581,"line_start":157,"line_end":157,"column_start":5,"column_end":12},"name":"Replace","qualname":"::state::StencilOp::Replace","value":"StencilOp::Replace","parent":{"krate":0,"index":252},"children":[],"decl_id":null,"docs":" Set the stencil buffer value to `value` from `StencilSide`\n","sig":null,"attributes":[{"value":"/ Set the stencil buffer value to `value` from `StencilSide`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":10507,"byte_end":10569,"line_start":156,"line_end":156,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":259},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":10662,"byte_end":10676,"line_start":159,"line_end":159,"column_start":5,"column_end":19},"name":"IncrementClamp","qualname":"::state::StencilOp::IncrementClamp","value":"StencilOp::IncrementClamp","parent":{"krate":0,"index":252},"children":[],"decl_id":null,"docs":" Increment the stencil buffer value, clamping to its maximum value.\n","sig":null,"attributes":[{"value":"/ Increment the stencil buffer value, clamping to its maximum value.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":10587,"byte_end":10657,"line_start":158,"line_end":158,"column_start":5,"column_end":75}}]},{"kind":"TupleVariant","id":{"krate":0,"index":261},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":10760,"byte_end":10773,"line_start":161,"line_end":161,"column_start":5,"column_end":18},"name":"IncrementWrap","qualname":"::state::StencilOp::IncrementWrap","value":"StencilOp::IncrementWrap","parent":{"krate":0,"index":252},"children":[],"decl_id":null,"docs":" Increment the stencil buffer value, wrapping around to 0 on overflow.\n","sig":null,"attributes":[{"value":"/ Increment the stencil buffer value, wrapping around to 0 on overflow.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":10682,"byte_end":10755,"line_start":160,"line_end":160,"column_start":5,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":263},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":10854,"byte_end":10868,"line_start":163,"line_end":163,"column_start":5,"column_end":19},"name":"DecrementClamp","qualname":"::state::StencilOp::DecrementClamp","value":"StencilOp::DecrementClamp","parent":{"krate":0,"index":252},"children":[],"decl_id":null,"docs":" Decrement the stencil buffer value, clamping to its minimum value.\n","sig":null,"attributes":[{"value":"/ Decrement the stencil buffer value, clamping to its minimum value.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":10779,"byte_end":10849,"line_start":162,"line_end":162,"column_start":5,"column_end":75}}]},{"kind":"TupleVariant","id":{"krate":0,"index":265},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":10968,"byte_end":10981,"line_start":165,"line_end":165,"column_start":5,"column_end":18},"name":"DecrementWrap","qualname":"::state::StencilOp::DecrementWrap","value":"StencilOp::DecrementWrap","parent":{"krate":0,"index":252},"children":[],"decl_id":null,"docs":" Decrement the stencil buffer value, wrapping around to the maximum value on overflow.\n","sig":null,"attributes":[{"value":"/ Decrement the stencil buffer value, wrapping around to the maximum value on overflow.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":10874,"byte_end":10963,"line_start":164,"line_end":164,"column_start":5,"column_end":94}}]},{"kind":"TupleVariant","id":{"krate":0,"index":267},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":11051,"byte_end":11057,"line_start":167,"line_end":167,"column_start":5,"column_end":11},"name":"Invert","qualname":"::state::StencilOp::Invert","value":"StencilOp::Invert","parent":{"krate":0,"index":252},"children":[],"decl_id":null,"docs":" Bitwise invert the current value in the stencil buffer.\n","sig":null,"attributes":[{"value":"/ Bitwise invert the current value in the stencil buffer.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":10987,"byte_end":11046,"line_start":166,"line_end":166,"column_start":5,"column_end":64}}]},{"kind":"Enum","id":{"krate":0,"index":252},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":10352,"byte_end":10361,"line_start":151,"line_end":151,"column_start":10,"column_end":19},"name":"StencilOp","qualname":"::state::StencilOp","value":"pub enum StencilOp {\n    Keep,\n    Zero,\n    Replace,\n    IncrementClamp,\n    IncrementWrap,\n    DecrementClamp,\n    DecrementWrap,\n    Invert,\n}","parent":null,"children":[{"krate":0,"index":253},{"krate":0,"index":255},{"krate":0,"index":257},{"krate":0,"index":259},{"krate":0,"index":261},{"krate":0,"index":263},{"krate":0,"index":265},{"krate":0,"index":267}],"decl_id":null,"docs":" Stencil mask operation.\n","sig":null,"attributes":[{"value":"/ Stencil mask operation.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":10163,"byte_end":10190,"line_start":147,"line_end":147,"column_start":1,"column_end":28}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":10191,"byte_end":10213,"line_start":148,"line_end":148,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":287},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":11257,"byte_end":11268,"line_start":173,"line_end":173,"column_start":12,"column_end":23},"name":"StencilSide","qualname":"::state::StencilSide","value":"StencilSide { fun, mask_read, mask_write, op_fail, op_depth_fail, op_pass }","parent":null,"children":[{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293}],"decl_id":null,"docs":" Complete stencil state for a given side of a face.\n","sig":null,"attributes":[{"value":"/ Complete stencil state for a given side of a face.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":11062,"byte_end":11116,"line_start":170,"line_end":170,"column_start":1,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":288},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":11355,"byte_end":11358,"line_start":175,"line_end":175,"column_start":9,"column_end":12},"name":"fun","qualname":"::state::StencilSide::fun","value":"state::Comparison","parent":{"krate":0,"index":287},"children":[],"decl_id":null,"docs":" Comparison function to use to determine if the stencil test passes.\n","sig":null,"attributes":[{"value":"/ Comparison function to use to determine if the stencil test passes.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":11275,"byte_end":11346,"line_start":174,"line_end":174,"column_start":5,"column_end":76}}]},{"kind":"Field","id":{"krate":0,"index":289},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":11525,"byte_end":11534,"line_start":178,"line_end":178,"column_start":9,"column_end":18},"name":"mask_read","qualname":"::state::StencilSide::mask_read","value":"u8","parent":{"krate":0,"index":287},"children":[],"decl_id":null,"docs":" A mask that is ANDd with both the stencil buffer value and the reference value when they\n are read before doing the stencil test.\n","sig":null,"attributes":[{"value":"/ A mask that is ANDd with both the stencil buffer value and the reference value when they","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":11376,"byte_end":11468,"line_start":176,"line_end":176,"column_start":5,"column_end":97}},{"value":"/ are read before doing the stencil test.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":11473,"byte_end":11516,"line_start":177,"line_end":177,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":290},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":11650,"byte_end":11660,"line_start":180,"line_end":180,"column_start":9,"column_end":19},"name":"mask_write","qualname":"::state::StencilSide::mask_write","value":"u8","parent":{"krate":0,"index":287},"children":[],"decl_id":null,"docs":" A mask that is ANDd with the stencil value before writing to the stencil buffer.\n","sig":null,"attributes":[{"value":"/ A mask that is ANDd with the stencil value before writing to the stencil buffer.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":11557,"byte_end":11641,"line_start":179,"line_end":179,"column_start":5,"column_end":89}}]},{"kind":"Field","id":{"krate":0,"index":291},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":11743,"byte_end":11750,"line_start":182,"line_end":182,"column_start":9,"column_end":16},"name":"op_fail","qualname":"::state::StencilSide::op_fail","value":"state::StencilOp","parent":{"krate":0,"index":287},"children":[],"decl_id":null,"docs":" What operation to do if the stencil test fails.\n","sig":null,"attributes":[{"value":"/ What operation to do if the stencil test fails.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":11683,"byte_end":11734,"line_start":181,"line_end":181,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":292},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":11852,"byte_end":11865,"line_start":184,"line_end":184,"column_start":9,"column_end":22},"name":"op_depth_fail","qualname":"::state::StencilSide::op_depth_fail","value":"state::StencilOp","parent":{"krate":0,"index":287},"children":[],"decl_id":null,"docs":" What operation to do if the stenil test passes but the depth test fails.\n","sig":null,"attributes":[{"value":"/ What operation to do if the stenil test passes but the depth test fails.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":11767,"byte_end":11843,"line_start":183,"line_end":183,"column_start":5,"column_end":81}}]},{"kind":"Field","id":{"krate":0,"index":293},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":11956,"byte_end":11963,"line_start":186,"line_end":186,"column_start":9,"column_end":16},"name":"op_pass","qualname":"::state::StencilSide::op_pass","value":"state::StencilOp","parent":{"krate":0,"index":287},"children":[],"decl_id":null,"docs":" What operation to do if both the depth and stencil test pass.\n","sig":null,"attributes":[{"value":"/ What operation to do if both the depth and stencil test pass.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":11882,"byte_end":11947,"line_start":185,"line_end":185,"column_start":5,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":313},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":12602,"byte_end":12609,"line_start":206,"line_end":206,"column_start":12,"column_end":19},"name":"Stencil","qualname":"::state::Stencil","value":"Stencil { front, back }","parent":null,"children":[{"krate":0,"index":314},{"krate":0,"index":315}],"decl_id":null,"docs":" Complete stencil state, specifying how to handle the front and back side of a face.\n","sig":null,"attributes":[{"value":"/ Complete stencil state, specifying how to handle the front and back side of a face.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":12342,"byte_end":12429,"line_start":202,"line_end":202,"column_start":1,"column_end":88}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":12430,"byte_end":12452,"line_start":203,"line_end":203,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":314},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":12620,"byte_end":12625,"line_start":207,"line_end":207,"column_start":9,"column_end":14},"name":"front","qualname":"::state::Stencil::front","value":"state::StencilSide","parent":{"krate":0,"index":313},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":315},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":12648,"byte_end":12652,"line_start":208,"line_end":208,"column_start":9,"column_end":13},"name":"back","qualname":"::state::Stencil::back","value":"state::StencilSide","parent":{"krate":0,"index":313},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":12754,"byte_end":12757,"line_start":213,"line_end":213,"column_start":12,"column_end":15},"name":"new","qualname":"<Stencil>::new","value":"pub fn new(Comparison, target::Stencil, (StencilOp, StencilOp, StencilOp))\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new stencil state with a given function.\n","sig":null,"attributes":[{"value":"/ Create a new stencil state with a given function.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":12689,"byte_end":12742,"line_start":212,"line_end":212,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":337},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":13341,"byte_end":13346,"line_start":234,"line_end":234,"column_start":12,"column_end":17},"name":"Depth","qualname":"::state::Depth","value":"Depth { fun, write }","parent":null,"children":[{"krate":0,"index":338},{"krate":0,"index":339}],"decl_id":null,"docs":" Depth test state.\n","sig":null,"attributes":[{"value":"/ Depth test state.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":13179,"byte_end":13200,"line_start":231,"line_end":231,"column_start":1,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":338},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":13393,"byte_end":13396,"line_start":236,"line_end":236,"column_start":9,"column_end":12},"name":"fun","qualname":"::state::Depth::fun","value":"state::Comparison","parent":{"krate":0,"index":337},"children":[],"decl_id":null,"docs":" Comparison function to use.\n","sig":null,"attributes":[{"value":"/ Comparison function to use.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":13353,"byte_end":13384,"line_start":235,"line_end":235,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":339},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":13479,"byte_end":13484,"line_start":238,"line_end":238,"column_start":9,"column_end":14},"name":"write","qualname":"::state::Depth::write","value":"bool","parent":{"krate":0,"index":337},"children":[],"decl_id":null,"docs":" Specify whether to write to the depth buffer or not.\n","sig":null,"attributes":[{"value":"/ Specify whether to write to the depth buffer or not.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":13414,"byte_end":13470,"line_start":237,"line_end":237,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":360},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":13944,"byte_end":13947,"line_start":256,"line_end":256,"column_start":5,"column_end":8},"name":"Add","qualname":"::state::Equation::Add","value":"Equation::Add","parent":{"krate":0,"index":359},"children":[],"decl_id":null,"docs":" Adds source and destination.\n Source and destination are multiplied by blending parameters before addition.\n","sig":null,"attributes":[{"value":"/ Adds source and destination.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":13821,"byte_end":13853,"line_start":254,"line_end":254,"column_start":5,"column_end":37}},{"value":"/ Source and destination are multiplied by blending parameters before addition.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":13858,"byte_end":13939,"line_start":255,"line_end":255,"column_start":5,"column_end":86}}]},{"kind":"TupleVariant","id":{"krate":0,"index":362},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":14085,"byte_end":14088,"line_start":259,"line_end":259,"column_start":5,"column_end":8},"name":"Sub","qualname":"::state::Equation::Sub","value":"Equation::Sub","parent":{"krate":0,"index":359},"children":[],"decl_id":null,"docs":" Subtracts destination from source.\n Source and destination are multiplied by blending parameters before subtraction.\n","sig":null,"attributes":[{"value":"/ Subtracts destination from source.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":13953,"byte_end":13991,"line_start":257,"line_end":257,"column_start":5,"column_end":43}},{"value":"/ Source and destination are multiplied by blending parameters before subtraction.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":13996,"byte_end":14080,"line_start":258,"line_end":258,"column_start":5,"column_end":89}}]},{"kind":"TupleVariant","id":{"krate":0,"index":364},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":14226,"byte_end":14232,"line_start":262,"line_end":262,"column_start":5,"column_end":11},"name":"RevSub","qualname":"::state::Equation::RevSub","value":"Equation::RevSub","parent":{"krate":0,"index":359},"children":[],"decl_id":null,"docs":" Subtracts source from destination.\n Source and destination are multiplied by blending parameters before subtraction.\n","sig":null,"attributes":[{"value":"/ Subtracts source from destination.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":14094,"byte_end":14132,"line_start":260,"line_end":260,"column_start":5,"column_end":43}},{"value":"/ Source and destination are multiplied by blending parameters before subtraction.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":14137,"byte_end":14221,"line_start":261,"line_end":261,"column_start":5,"column_end":89}}]},{"kind":"TupleVariant","id":{"krate":0,"index":366},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":14343,"byte_end":14346,"line_start":265,"line_end":265,"column_start":5,"column_end":8},"name":"Min","qualname":"::state::Equation::Min","value":"Equation::Min","parent":{"krate":0,"index":359},"children":[],"decl_id":null,"docs":" Component-wise minimum value of source and destination.\n Blending parameters are ignored.\n","sig":null,"attributes":[{"value":"/ Component-wise minimum value of source and destination.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":14238,"byte_end":14297,"line_start":263,"line_end":263,"column_start":5,"column_end":64}},{"value":"/ Blending parameters are ignored.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":14302,"byte_end":14338,"line_start":264,"line_end":264,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":368},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":14457,"byte_end":14460,"line_start":268,"line_end":268,"column_start":5,"column_end":8},"name":"Max","qualname":"::state::Equation::Max","value":"Equation::Max","parent":{"krate":0,"index":359},"children":[],"decl_id":null,"docs":" Component-wise maximum value of source and destination.\n Blending parameters are ignored.\n","sig":null,"attributes":[{"value":"/ Component-wise maximum value of source and destination.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":14352,"byte_end":14411,"line_start":266,"line_end":266,"column_start":5,"column_end":64}},{"value":"/ Blending parameters are ignored.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":14416,"byte_end":14452,"line_start":267,"line_end":267,"column_start":5,"column_end":41}}]},{"kind":"Enum","id":{"krate":0,"index":359},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":13806,"byte_end":13814,"line_start":253,"line_end":253,"column_start":10,"column_end":18},"name":"Equation","qualname":"::state::Equation","value":"pub enum Equation { Add, Sub, RevSub, Min, Max, }","parent":null,"children":[{"krate":0,"index":360},{"krate":0,"index":362},{"krate":0,"index":364},{"krate":0,"index":366},{"krate":0,"index":368}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":13645,"byte_end":13667,"line_start":250,"line_end":250,"column_start":1,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":389},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":14643,"byte_end":14654,"line_start":275,"line_end":275,"column_start":5,"column_end":16},"name":"SourceColor","qualname":"::state::BlendValue::SourceColor","value":"BlendValue::SourceColor","parent":{"krate":0,"index":388},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":391},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":14660,"byte_end":14671,"line_start":276,"line_end":276,"column_start":5,"column_end":16},"name":"SourceAlpha","qualname":"::state::BlendValue::SourceAlpha","value":"BlendValue::SourceAlpha","parent":{"krate":0,"index":388},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":393},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":14677,"byte_end":14686,"line_start":277,"line_end":277,"column_start":5,"column_end":14},"name":"DestColor","qualname":"::state::BlendValue::DestColor","value":"BlendValue::DestColor","parent":{"krate":0,"index":388},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":395},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":14692,"byte_end":14701,"line_start":278,"line_end":278,"column_start":5,"column_end":14},"name":"DestAlpha","qualname":"::state::BlendValue::DestAlpha","value":"BlendValue::DestAlpha","parent":{"krate":0,"index":388},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":397},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":14707,"byte_end":14717,"line_start":279,"line_end":279,"column_start":5,"column_end":15},"name":"ConstColor","qualname":"::state::BlendValue::ConstColor","value":"BlendValue::ConstColor","parent":{"krate":0,"index":388},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":399},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":14723,"byte_end":14733,"line_start":280,"line_end":280,"column_start":5,"column_end":15},"name":"ConstAlpha","qualname":"::state::BlendValue::ConstAlpha","value":"BlendValue::ConstAlpha","parent":{"krate":0,"index":388},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":388},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":14626,"byte_end":14636,"line_start":274,"line_end":274,"column_start":10,"column_end":20},"name":"BlendValue","qualname":"::state::BlendValue","value":"pub enum BlendValue {\n    SourceColor,\n    SourceAlpha,\n    DestColor,\n    DestAlpha,\n    ConstColor,\n    ConstAlpha,\n}","parent":null,"children":[{"krate":0,"index":389},{"krate":0,"index":391},{"krate":0,"index":393},{"krate":0,"index":395},{"krate":0,"index":397},{"krate":0,"index":399}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":14465,"byte_end":14487,"line_start":271,"line_end":271,"column_start":1,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":420},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":14912,"byte_end":14916,"line_start":287,"line_end":287,"column_start":5,"column_end":9},"name":"Zero","qualname":"::state::Factor::Zero","value":"Factor::Zero","parent":{"krate":0,"index":419},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":422},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":14922,"byte_end":14925,"line_start":288,"line_end":288,"column_start":5,"column_end":8},"name":"One","qualname":"::state::Factor::One","value":"Factor::One","parent":{"krate":0,"index":419},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":424},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":14931,"byte_end":14951,"line_start":289,"line_end":289,"column_start":5,"column_end":25},"name":"SourceAlphaSaturated","qualname":"::state::Factor::SourceAlphaSaturated","value":"Factor::SourceAlphaSaturated","parent":{"krate":0,"index":419},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":426},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":14957,"byte_end":14965,"line_start":290,"line_end":290,"column_start":5,"column_end":13},"name":"ZeroPlus","qualname":"::state::Factor::ZeroPlus","value":"Factor::ZeroPlus(BlendValue)","parent":{"krate":0,"index":419},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":429},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":14983,"byte_end":14991,"line_start":291,"line_end":291,"column_start":5,"column_end":13},"name":"OneMinus","qualname":"::state::Factor::OneMinus","value":"Factor::OneMinus(BlendValue)","parent":{"krate":0,"index":419},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":419},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":14899,"byte_end":14905,"line_start":286,"line_end":286,"column_start":10,"column_end":16},"name":"Factor","qualname":"::state::Factor","value":"pub enum Factor {\n    Zero,\n    One,\n    SourceAlphaSaturated,\n    ZeroPlus(BlendValue),\n    OneMinus(BlendValue),\n}","parent":null,"children":[{"krate":0,"index":420},{"krate":0,"index":422},{"krate":0,"index":424},{"krate":0,"index":426},{"krate":0,"index":429}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":14738,"byte_end":14760,"line_start":283,"line_end":283,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":451},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":15171,"byte_end":15183,"line_start":297,"line_end":297,"column_start":12,"column_end":24},"name":"BlendChannel","qualname":"::state::BlendChannel","value":"BlendChannel { equation, source, destination }","parent":null,"children":[{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":454}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":15008,"byte_end":15030,"line_start":294,"line_end":294,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":452},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":15194,"byte_end":15202,"line_start":298,"line_end":298,"column_start":9,"column_end":17},"name":"equation","qualname":"::state::BlendChannel::equation","value":"state::Equation","parent":{"krate":0,"index":451},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":453},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":15222,"byte_end":15228,"line_start":299,"line_end":299,"column_start":9,"column_end":15},"name":"source","qualname":"::state::BlendChannel::source","value":"state::Factor","parent":{"krate":0,"index":451},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":454},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":15246,"byte_end":15257,"line_start":300,"line_end":300,"column_start":9,"column_end":20},"name":"destination","qualname":"::state::BlendChannel::destination","value":"state::Factor","parent":{"krate":0,"index":451},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":474},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":15640,"byte_end":15645,"line_start":316,"line_end":316,"column_start":12,"column_end":17},"name":"Blend","qualname":"::state::Blend","value":"Blend { color, alpha }","parent":null,"children":[{"krate":0,"index":475},{"krate":0,"index":476}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":15480,"byte_end":15502,"line_start":313,"line_end":313,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":475},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":15656,"byte_end":15661,"line_start":317,"line_end":317,"column_start":9,"column_end":14},"name":"color","qualname":"::state::Blend::color","value":"state::BlendChannel","parent":{"krate":0,"index":474},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":476},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":15685,"byte_end":15690,"line_start":318,"line_end":318,"column_start":9,"column_end":14},"name":"alpha","qualname":"::state::Blend::alpha","value":"state::BlendChannel","parent":{"krate":0,"index":474},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":15789,"byte_end":15792,"line_start":323,"line_end":323,"column_start":12,"column_end":15},"name":"new","qualname":"<Blend>::new","value":"pub fn new(Equation, Factor, Factor) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new blend state with a given equation.\n","sig":null,"attributes":[{"value":"/ Create a new blend state with a given equation.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":15726,"byte_end":15777,"line_start":322,"line_end":322,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":494},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":16364,"byte_end":16373,"line_start":346,"line_end":346,"column_start":16,"column_end":25},"name":"ColorMask","qualname":"::state::ColorMask","value":"ColorMask {  }","parent":null,"children":[{"krate":0,"index":495}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":12946805,"byte_end":12946814,"line_start":362,"line_end":362,"column_start":11,"column_end":20}}]},{"kind":"Const","id":{"krate":0,"index":530},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":16425,"byte_end":16428,"line_start":348,"line_end":348,"column_start":15,"column_end":18},"name":"RED","qualname":"::state::ColorMask::RED","value":"Self","parent":{"krate":0,"index":529},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":12952024,"byte_end":12952042,"line_start":520,"line_end":520,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":531},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":16485,"byte_end":16490,"line_start":350,"line_end":350,"column_start":15,"column_end":20},"name":"GREEN","qualname":"::state::ColorMask::GREEN","value":"Self","parent":{"krate":0,"index":529},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":12952024,"byte_end":12952042,"line_start":520,"line_end":520,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":532},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":16545,"byte_end":16549,"line_start":352,"line_end":352,"column_start":15,"column_end":19},"name":"BLUE","qualname":"::state::ColorMask::BLUE","value":"Self","parent":{"krate":0,"index":529},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":12952024,"byte_end":12952042,"line_start":520,"line_end":520,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":533},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":16605,"byte_end":16610,"line_start":354,"line_end":354,"column_start":15,"column_end":20},"name":"ALPHA","qualname":"::state::ColorMask::ALPHA","value":"Self","parent":{"krate":0,"index":529},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":12952024,"byte_end":12952042,"line_start":520,"line_end":520,"column_start":19,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":596},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":16812,"byte_end":16817,"line_start":361,"line_end":361,"column_start":12,"column_end":17},"name":"Color","qualname":"::state::Color","value":"Color { mask, blend }","parent":null,"children":[{"krate":0,"index":597},{"krate":0,"index":598}],"decl_id":null,"docs":" The state of an active color render target\n","sig":null,"attributes":[{"value":"/ The state of an active color render target","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":16630,"byte_end":16676,"line_start":358,"line_end":358,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":597},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":16855,"byte_end":16859,"line_start":363,"line_end":363,"column_start":9,"column_end":13},"name":"mask","qualname":"::state::Color::mask","value":"state::ColorMask","parent":{"krate":0,"index":596},"children":[],"decl_id":null,"docs":" Color mask to use.\n","sig":null,"attributes":[{"value":"/ Color mask to use.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":16824,"byte_end":16846,"line_start":362,"line_end":362,"column_start":5,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":598},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":16907,"byte_end":16912,"line_start":365,"line_end":365,"column_start":9,"column_end":14},"name":"blend","qualname":"::state::Color::blend","value":"std::option::Option<state::Blend>","parent":{"krate":0,"index":596},"children":[],"decl_id":null,"docs":" Optional blending.\n","sig":null,"attributes":[{"value":"/ Optional blending.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":16876,"byte_end":16898,"line_start":364,"line_end":364,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":616},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":17317,"byte_end":17326,"line_start":381,"line_end":381,"column_start":12,"column_end":21},"name":"RefValues","qualname":"::state::RefValues","value":"RefValues { stencil, blend }","parent":null,"children":[{"krate":0,"index":617},{"krate":0,"index":618}],"decl_id":null,"docs":" The complete set of the rasterizer reference values.\n Switching these doesn't roll the hardware context.\n","sig":null,"attributes":[{"value":"/ The complete set of the rasterizer reference values.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":17080,"byte_end":17136,"line_start":377,"line_end":377,"column_start":1,"column_end":57}},{"value":"/ Switching these doesn't roll the hardware context.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":17137,"byte_end":17191,"line_start":378,"line_end":378,"column_start":1,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":617},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":17376,"byte_end":17383,"line_start":383,"line_end":383,"column_start":9,"column_end":16},"name":"stencil","qualname":"::state::RefValues::stencil","value":"(u8, u8)","parent":{"krate":0,"index":616},"children":[],"decl_id":null,"docs":" Stencil front and back values.\n","sig":null,"attributes":[{"value":"/ Stencil front and back values.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":17333,"byte_end":17367,"line_start":382,"line_end":382,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":618},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":17459,"byte_end":17464,"line_start":385,"line_end":385,"column_start":9,"column_end":14},"name":"blend","qualname":"::state::RefValues::blend","value":"[f32; 4]","parent":{"krate":0,"index":616},"children":[],"decl_id":null,"docs":" Constant blend color.\n","sig":null,"attributes":[{"value":"/ Constant blend color.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":17425,"byte_end":17450,"line_start":384,"line_end":384,"column_start":5,"column_end":30}}]},{"kind":"Mod","id":{"krate":0,"index":73},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\target.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"target","qualname":"::target","value":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\target.rs","parent":null,"children":[{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":630},{"krate":0,"index":635},{"krate":0,"index":637},{"krate":0,"index":638},{"krate":0,"index":640},{"krate":0,"index":643},{"krate":0,"index":644},{"krate":0,"index":647},{"krate":0,"index":78},{"krate":0,"index":649},{"krate":0,"index":651},{"krate":0,"index":652},{"krate":0,"index":653},{"krate":0,"index":656},{"krate":0,"index":657},{"krate":0,"index":659},{"krate":0,"index":661},{"krate":0,"index":663},{"krate":0,"index":665},{"krate":0,"index":668},{"krate":0,"index":674},{"krate":0,"index":676},{"krate":0,"index":678},{"krate":0,"index":680},{"krate":0,"index":682},{"krate":0,"index":704},{"krate":0,"index":707},{"krate":0,"index":709},{"krate":0,"index":712},{"krate":0,"index":714},{"krate":0,"index":717},{"krate":0,"index":719},{"krate":0,"index":722},{"krate":0,"index":724},{"krate":0,"index":727},{"krate":0,"index":730}],"decl_id":null,"docs":" Render target specification.\n","sig":null,"attributes":[{"value":"/ Render target specification.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\target.rs","byte_start":18243,"byte_end":18275,"line_start":15,"line_end":15,"column_start":1,"column_end":33}}]},{"kind":"Type","id":{"krate":0,"index":74},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\target.rs","byte_start":18409,"byte_end":18414,"line_start":20,"line_end":20,"column_start":10,"column_end":15},"name":"Layer","qualname":"::target::Layer","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" A depth value, specifying which plane to select out of a 3D texture.\n","sig":null,"attributes":[{"value":"/ A depth value, specifying which plane to select out of a 3D texture.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\target.rs","byte_start":18327,"byte_end":18399,"line_start":19,"line_end":19,"column_start":1,"column_end":73}}]},{"kind":"Type","id":{"krate":0,"index":75},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\target.rs","byte_start":18472,"byte_end":18477,"line_start":22,"line_end":22,"column_start":10,"column_end":15},"name":"Level","qualname":"::target::Level","value":"u8","parent":null,"children":[],"decl_id":null,"docs":" Mipmap level to select in a texture.\n","sig":null,"attributes":[{"value":"/ Mipmap level to select in a texture.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\target.rs","byte_start":18422,"byte_end":18462,"line_start":21,"line_end":21,"column_start":1,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":76},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\target.rs","byte_start":18539,"byte_end":18544,"line_start":24,"line_end":24,"column_start":10,"column_end":15},"name":"Depth","qualname":"::target::Depth","value":"f32","parent":null,"children":[],"decl_id":null,"docs":" A single depth value from a depth buffer.\n","sig":null,"attributes":[{"value":"/ A single depth value from a depth buffer.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\target.rs","byte_start":18484,"byte_end":18529,"line_start":23,"line_end":23,"column_start":1,"column_end":46}}]},{"kind":"Type","id":{"krate":0,"index":77},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\target.rs","byte_start":18616,"byte_end":18623,"line_start":26,"line_end":26,"column_start":10,"column_end":17},"name":"Stencil","qualname":"::target::Stencil","value":"u8","parent":null,"children":[],"decl_id":null,"docs":" A single value from a stencil stencstencil buffer.\n","sig":null,"attributes":[{"value":"/ A single value from a stencil stencstencil buffer.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\target.rs","byte_start":18552,"byte_end":18606,"line_start":25,"line_end":25,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":630},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\target.rs","byte_start":18814,"byte_end":18818,"line_start":32,"line_end":32,"column_start":12,"column_end":16},"name":"Rect","qualname":"::target::Rect","value":"Rect { x, y, w, h }","parent":null,"children":[{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":634}],"decl_id":null,"docs":" A screen space rectangle\n","sig":null,"attributes":[{"value":"/ A screen space rectangle","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\target.rs","byte_start":18631,"byte_end":18659,"line_start":28,"line_end":28,"column_start":1,"column_end":29}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\target.rs","byte_start":18660,"byte_end":18682,"line_start":29,"line_end":29,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":631},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\target.rs","byte_start":18829,"byte_end":18830,"line_start":33,"line_end":33,"column_start":9,"column_end":10},"name":"x","qualname":"::target::Rect::x","value":"u16","parent":{"krate":0,"index":630},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":632},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\target.rs","byte_start":18845,"byte_end":18846,"line_start":34,"line_end":34,"column_start":9,"column_end":10},"name":"y","qualname":"::target::Rect::y","value":"u16","parent":{"krate":0,"index":630},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":633},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\target.rs","byte_start":18861,"byte_end":18862,"line_start":35,"line_end":35,"column_start":9,"column_end":10},"name":"w","qualname":"::target::Rect::w","value":"u16","parent":{"krate":0,"index":630},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":634},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\target.rs","byte_start":18877,"byte_end":18878,"line_start":36,"line_end":36,"column_start":9,"column_end":10},"name":"h","qualname":"::target::Rect::h","value":"u16","parent":{"krate":0,"index":630},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":78},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\target.rs","byte_start":18941,"byte_end":18951,"line_start":40,"line_end":40,"column_start":10,"column_end":20},"name":"ColorValue","qualname":"::target::ColorValue","value":"[f32; ]","parent":null,"children":[],"decl_id":null,"docs":" A color with floating-point components.\n","sig":null,"attributes":[{"value":"/ A color with floating-point components.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\target.rs","byte_start":18888,"byte_end":18931,"line_start":39,"line_end":39,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":649},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\target.rs","byte_start":19099,"byte_end":19105,"line_start":45,"line_end":45,"column_start":16,"column_end":22},"name":"Mirror","qualname":"::target::Mirror","value":"Mirror {  }","parent":null,"children":[{"krate":0,"index":650}],"decl_id":null,"docs":" Mirroring flags, used for blitting\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":683},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\target.rs","byte_start":19138,"byte_end":19139,"line_start":47,"line_end":47,"column_start":15,"column_end":16},"name":"X","qualname":"::target::Mirror::X","value":"Self","parent":{"krate":0,"index":682},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":684},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\target.rs","byte_start":19175,"byte_end":19176,"line_start":49,"line_end":49,"column_start":15,"column_end":16},"name":"Y","qualname":"::target::Mirror::Y","value":"Self","parent":{"krate":0,"index":682},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":9034,"byte_end":9044,"line_start":96,"line_end":96,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":11996,"byte_end":12007,"line_start":189,"line_end":189,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":57}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":12675,"byte_end":12682,"line_start":211,"line_end":211,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":59}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":13512,"byte_end":13517,"line_start":241,"line_end":241,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":61}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":15287,"byte_end":15299,"line_start":303,"line_end":303,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":63}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":15714,"byte_end":15719,"line_start":321,"line_end":321,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":16074,"byte_end":16079,"line_start":336,"line_end":336,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":67}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":16949,"byte_end":16954,"line_start":368,"line_end":368,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":17506,"byte_end":17515,"line_start":388,"line_end":388,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":71}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src/lib.rs","byte_start":794,"byte_end":800,"line_start":25,"line_end":25,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":4}},{"kind":"Mod","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src/lib.rs","byte_start":810,"byte_end":815,"line_start":26,"line_end":26,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":39}},{"kind":"Mod","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src/lib.rs","byte_start":825,"byte_end":831,"line_start":27,"line_end":27,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":73}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":9034,"byte_end":9044,"line_start":96,"line_end":96,"column_start":6,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":194},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":11996,"byte_end":12007,"line_start":189,"line_end":189,"column_start":18,"column_end":29},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":287},"to":{"krate":2,"index":3002}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":12675,"byte_end":12682,"line_start":211,"line_end":211,"column_start":6,"column_end":13},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":313},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":13512,"byte_end":13517,"line_start":241,"line_end":241,"column_start":18,"column_end":23},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":337},"to":{"krate":2,"index":3002}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":15287,"byte_end":15299,"line_start":303,"line_end":303,"column_start":18,"column_end":30},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":451},"to":{"krate":2,"index":3002}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":15714,"byte_end":15719,"line_start":321,"line_end":321,"column_start":6,"column_end":11},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":474},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":16074,"byte_end":16079,"line_start":336,"line_end":336,"column_start":21,"column_end":26},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":474},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":16949,"byte_end":16954,"line_start":368,"line_end":368,"column_start":18,"column_end":23},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":596},"to":{"krate":2,"index":3002}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\draw_state-0.8.0\\src\\state.rs","byte_start":17506,"byte_end":17515,"line_start":388,"line_end":388,"column_start":18,"column_end":27},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":616},"to":{"krate":2,"index":3002}}]}