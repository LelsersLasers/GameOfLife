{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13","program":"C:\\Users\\milla\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","zip","--edition=2018","C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"bzip2\"","-C","metadata=2925e71d782348c8","-C","extra-filename=-2925e71d782348c8","--out-dir","c:\\Users\\milla\\Desktop\\Code\\GameOfLife\\ggez\\game_of_life\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\milla\\Desktop\\Code\\GameOfLife\\ggez\\game_of_life\\target\\rls\\debug\\deps","--extern","byteorder=c:\\Users\\milla\\Desktop\\Code\\GameOfLife\\ggez\\game_of_life\\target\\rls\\debug\\deps\\libbyteorder-77d82841e8d9822e.rmeta","--extern","bzip2=c:\\Users\\milla\\Desktop\\Code\\GameOfLife\\ggez\\game_of_life\\target\\rls\\debug\\deps\\libbzip2-bb0497426d73df55.rmeta","--extern","crc32fast=c:\\Users\\milla\\Desktop\\Code\\GameOfLife\\ggez\\game_of_life\\target\\rls\\debug\\deps\\libcrc32fast-b060ddc6dc9ee4e0.rmeta","--extern","thiserror=c:\\Users\\milla\\Desktop\\Code\\GameOfLife\\ggez\\game_of_life\\target\\rls\\debug\\deps\\libthiserror-94837897373fb341.rmeta","--cap-lints","allow","-L","native=c:\\Users\\milla\\Desktop\\Code\\GameOfLife\\ggez\\game_of_life\\target\\rls\\debug\\build\\bzip2-sys-5a148f52f065b43b\\out\\lib","--error-format=json","--sysroot","C:\\Users\\milla\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\milla\\Desktop\\Code\\GameOfLife\\ggez\\game_of_life\\target\\rls\\debug\\deps\\libzip-2925e71d782348c8.rmeta"},"prelude":{"crate_id":{"name":"zip","disambiguator":[3484577683300871467,0]},"crate_root":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src","external_crates":[{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[7379719041391505039,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[5226548339696486402,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[15782588708828798436,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11258588358156983047,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6811839233127289238,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[6798478037195512723,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12572258325454906649,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[598470195457823820,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7285820039251336650,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15004074270013699283,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\lib.rs","num":11,"id":{"name":"std_detect","disambiguator":[6568562326383462027,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[7532148157145861684,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[15660406440960571571,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\crc32.rs","num":14,"id":{"name":"crc32fast","disambiguator":[2318731209867044845,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\crc32.rs","num":15,"id":{"name":"cfg_if","disambiguator":[10169579803109374085,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","num":16,"id":{"name":"byteorder","disambiguator":[6856623506392020765,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","num":17,"id":{"name":"bzip2","disambiguator":[16523205199386314566,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","num":18,"id":{"name":"bzip2_sys","disambiguator":[11287764708537911433,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","num":19,"id":{"name":"libc","disambiguator":[1034754467202605485,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\result.rs","num":20,"id":{"name":"thiserror","disambiguator":[5757967449648403266,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\result.rs","num":21,"id":{"name":"thiserror_impl","disambiguator":[7131954567169534538,0]}}],"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\lib.rs","byte_start":0,"byte_end":589,"line_start":1,"line_end":21,"column_start":1,"column_end":15}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":583},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\lib.rs","byte_start":352,"byte_end":369,"line_start":8,"line_end":8,"column_start":29,"column_end":46},"alias_span":null,"name":"CompressionMethod","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":603},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\lib.rs","byte_start":392,"byte_end":402,"line_start":9,"line_end":9,"column_start":22,"column_end":32},"alias_span":null,"name":"ZipArchive","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":663},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\lib.rs","byte_start":426,"byte_end":434,"line_start":10,"line_end":10,"column_start":23,"column_end":31},"alias_span":null,"name":"DateTime","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":452},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\lib.rs","byte_start":458,"byte_end":467,"line_start":11,"line_end":11,"column_start":23,"column_end":32},"alias_span":null,"name":"ZipWriter","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\lib.rs","byte_start":0,"byte_end":589,"line_start":1,"line_end":21,"column_start":1,"column_end":15},"name":"","qualname":"::","value":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":9},{"krate":0,"index":12},{"krate":0,"index":15},{"krate":0,"index":46},{"krate":0,"index":61},{"krate":0,"index":82},{"krate":0,"index":274},{"krate":0,"index":287},{"krate":0,"index":355},{"krate":0,"index":379},{"krate":0,"index":541}],"decl_id":null,"docs":" An ergonomic API for reading and writing ZIP files.","sig":null,"attributes":[{"value":"/ An ergonomic API for reading and writing ZIP files.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\lib.rs","byte_start":0,"byte_end":55,"line_start":1,"line_end":1,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\lib.rs","byte_start":56,"byte_end":59,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The current implementation is based on [PKWARE's APPNOTE.TXT v6.3.9](https://pkware.cachefly.net/webdocs/casestudies/APPNOTE.TXT)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\lib.rs","byte_start":60,"byte_end":193,"line_start":3,"line_end":3,"column_start":1,"column_end":134}},{"value":"warn(missing_docs)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\lib.rs","byte_start":300,"byte_end":322,"line_start":6,"line_end":6,"column_start":1,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":584},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\compression.rs","byte_start":1093,"byte_end":1099,"line_start":16,"line_end":16,"column_start":5,"column_end":11},"name":"Stored","qualname":"::compression::CompressionMethod::Stored","value":"CompressionMethod::Stored","parent":{"krate":0,"index":583},"children":[],"decl_id":null,"docs":" Store the file as is\n","sig":null,"attributes":[{"value":"/ Store the file as is","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\compression.rs","byte_start":1064,"byte_end":1088,"line_start":15,"line_end":15,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":586},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\compression.rs","byte_start":1347,"byte_end":1352,"line_start":26,"line_end":26,"column_start":5,"column_end":10},"name":"Bzip2","qualname":"::compression::CompressionMethod::Bzip2","value":"CompressionMethod::Bzip2","parent":{"krate":0,"index":583},"children":[],"decl_id":null,"docs":" Compress the file using BZIP2\n","sig":null,"attributes":[{"value":"/ Compress the file using BZIP2","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\compression.rs","byte_start":1279,"byte_end":1312,"line_start":24,"line_end":24,"column_start":5,"column_end":38}},{"value":"cfg(feature = \"bzip2\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\compression.rs","byte_start":1317,"byte_end":1342,"line_start":25,"line_end":25,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":588},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\compression.rs","byte_start":1468,"byte_end":1479,"line_start":29,"line_end":29,"column_start":5,"column_end":16},"name":"Unsupported","qualname":"::compression::CompressionMethod::Unsupported","value":"CompressionMethod::Unsupported(u16)","parent":{"krate":0,"index":583},"children":[],"decl_id":null,"docs":" Unsupported compression method\n","sig":null,"attributes":[{"value":"/ Unsupported compression method","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\compression.rs","byte_start":1358,"byte_end":1392,"line_start":27,"line_end":27,"column_start":5,"column_end":39}},{"value":"deprecated(since = \"0.5.7\", note = \"use the constants instead\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\compression.rs","byte_start":1397,"byte_end":1463,"line_start":28,"line_end":28,"column_start":5,"column_end":71}}]},{"kind":"Enum","id":{"krate":0,"index":583},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\compression.rs","byte_start":1040,"byte_end":1057,"line_start":14,"line_end":14,"column_start":10,"column_end":27},"name":"CompressionMethod","qualname":"::compression::CompressionMethod","value":"pub enum CompressionMethod { Stored, Bzip2, Unsupported(u16), }","parent":null,"children":[{"krate":0,"index":584},{"krate":0,"index":586},{"krate":0,"index":588}],"decl_id":null,"docs":" Identifies the storage format used to compress a file within a ZIP archive.","sig":null,"attributes":[{"value":"allow(deprecated)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\compression.rs","byte_start":645,"byte_end":665,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/ Identifies the storage format used to compress a file within a ZIP archive.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\compression.rs","byte_start":666,"byte_end":745,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\compression.rs","byte_start":746,"byte_end":749,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Each file's compression method is stored alongside it, allowing the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\compression.rs","byte_start":750,"byte_end":821,"line_start":8,"line_end":8,"column_start":1,"column_end":72}},{"value":"/ contents to be read without context.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\compression.rs","byte_start":822,"byte_end":862,"line_start":9,"line_end":9,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\compression.rs","byte_start":863,"byte_end":866,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ When creating ZIP files, you may choose the method to use with","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\compression.rs","byte_start":867,"byte_end":933,"line_start":11,"line_end":11,"column_start":1,"column_end":67}},{"value":"/ [`zip::write::FileOptions::compression_method`]","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\compression.rs","byte_start":934,"byte_end":985,"line_start":12,"line_end":12,"column_start":1,"column_end":52}}]},{"kind":"Const","id":{"krate":0,"index":20},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\compression.rs","byte_start":1617,"byte_end":1622,"line_start":34,"line_end":34,"column_start":15,"column_end":20},"name":"STORE","qualname":"::compression::CompressionMethod::STORE","value":"Self","parent":{"krate":0,"index":19},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":21},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\compression.rs","byte_start":1672,"byte_end":1678,"line_start":35,"line_end":35,"column_start":15,"column_end":21},"name":"SHRINK","qualname":"::compression::CompressionMethod::SHRINK","value":"Self","parent":{"krate":0,"index":19},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":22},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\compression.rs","byte_start":1736,"byte_end":1744,"line_start":36,"line_end":36,"column_start":15,"column_end":23},"name":"REDUCE_1","qualname":"::compression::CompressionMethod::REDUCE_1","value":"Self","parent":{"krate":0,"index":19},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":23},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\compression.rs","byte_start":1802,"byte_end":1810,"line_start":37,"line_end":37,"column_start":15,"column_end":23},"name":"REDUCE_2","qualname":"::compression::CompressionMethod::REDUCE_2","value":"Self","parent":{"krate":0,"index":19},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":24},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\compression.rs","byte_start":1868,"byte_end":1876,"line_start":38,"line_end":38,"column_start":15,"column_end":23},"name":"REDUCE_3","qualname":"::compression::CompressionMethod::REDUCE_3","value":"Self","parent":{"krate":0,"index":19},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":25},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\compression.rs","byte_start":1934,"byte_end":1942,"line_start":39,"line_end":39,"column_start":15,"column_end":23},"name":"REDUCE_4","qualname":"::compression::CompressionMethod::REDUCE_4","value":"Self","parent":{"krate":0,"index":19},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":26},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\compression.rs","byte_start":2000,"byte_end":2007,"line_start":40,"line_end":40,"column_start":15,"column_end":22},"name":"IMPLODE","qualname":"::compression::CompressionMethod::IMPLODE","value":"Self","parent":{"krate":0,"index":19},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":27},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\compression.rs","byte_start":2369,"byte_end":2376,"line_start":52,"line_end":52,"column_start":15,"column_end":22},"name":"DEFLATE","qualname":"::compression::CompressionMethod::DEFLATE","value":"Self","parent":{"krate":0,"index":19},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(not(any(feature = \"deflate\", feature = \"deflate-miniz\", feature =\n\"deflate-zlib\")))","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\compression.rs","byte_start":2234,"byte_end":2354,"line_start":47,"line_end":51,"column_start":5,"column_end":9}}]},{"kind":"Const","id":{"krate":0,"index":28},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\compression.rs","byte_start":2434,"byte_end":2443,"line_start":53,"line_end":53,"column_start":15,"column_end":24},"name":"DEFLATE64","qualname":"::compression::CompressionMethod::DEFLATE64","value":"Self","parent":{"krate":0,"index":19},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":29},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\compression.rs","byte_start":2501,"byte_end":2515,"line_start":54,"line_end":54,"column_start":15,"column_end":29},"name":"PKWARE_IMPLODE","qualname":"::compression::CompressionMethod::PKWARE_IMPLODE","value":"Self","parent":{"krate":0,"index":19},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":30},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\compression.rs","byte_start":2604,"byte_end":2609,"line_start":56,"line_end":56,"column_start":15,"column_end":20},"name":"BZIP2","qualname":"::compression::CompressionMethod::BZIP2","value":"Self","parent":{"krate":0,"index":19},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"bzip2\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\compression.rs","byte_start":2564,"byte_end":2589,"line_start":55,"line_end":55,"column_start":5,"column_end":30}}]},{"kind":"Const","id":{"krate":0,"index":31},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\compression.rs","byte_start":2757,"byte_end":2761,"line_start":59,"line_end":59,"column_start":15,"column_end":19},"name":"LZMA","qualname":"::compression::CompressionMethod::LZMA","value":"Self","parent":{"krate":0,"index":19},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":32},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\compression.rs","byte_start":2820,"byte_end":2833,"line_start":60,"line_end":60,"column_start":15,"column_end":28},"name":"IBM_ZOS_CMPSC","qualname":"::compression::CompressionMethod::IBM_ZOS_CMPSC","value":"Self","parent":{"krate":0,"index":19},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":33},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\compression.rs","byte_start":2892,"byte_end":2901,"line_start":61,"line_end":61,"column_start":15,"column_end":24},"name":"IBM_TERSE","qualname":"::compression::CompressionMethod::IBM_TERSE","value":"Self","parent":{"krate":0,"index":19},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":34},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\compression.rs","byte_start":2960,"byte_end":2975,"line_start":62,"line_end":62,"column_start":15,"column_end":30},"name":"ZSTD_DEPRECATED","qualname":"::compression::CompressionMethod::ZSTD_DEPRECATED","value":"Self","parent":{"krate":0,"index":19},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":35},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\compression.rs","byte_start":3034,"byte_end":3038,"line_start":63,"line_end":63,"column_start":15,"column_end":19},"name":"ZSTD","qualname":"::compression::CompressionMethod::ZSTD","value":"Self","parent":{"krate":0,"index":19},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":36},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\compression.rs","byte_start":3097,"byte_end":3100,"line_start":64,"line_end":64,"column_start":15,"column_end":18},"name":"MP3","qualname":"::compression::CompressionMethod::MP3","value":"Self","parent":{"krate":0,"index":19},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":37},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\compression.rs","byte_start":3159,"byte_end":3161,"line_start":65,"line_end":65,"column_start":15,"column_end":17},"name":"XZ","qualname":"::compression::CompressionMethod::XZ","value":"Self","parent":{"krate":0,"index":19},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":38},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\compression.rs","byte_start":3220,"byte_end":3224,"line_start":66,"line_end":66,"column_start":15,"column_end":19},"name":"JPEG","qualname":"::compression::CompressionMethod::JPEG","value":"Self","parent":{"krate":0,"index":19},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":39},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\compression.rs","byte_start":3283,"byte_end":3290,"line_start":67,"line_end":67,"column_start":15,"column_end":22},"name":"WAVPACK","qualname":"::compression::CompressionMethod::WAVPACK","value":"Self","parent":{"krate":0,"index":19},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":40},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\compression.rs","byte_start":3349,"byte_end":3353,"line_start":68,"line_end":68,"column_start":15,"column_end":19},"name":"PPMD","qualname":"::compression::CompressionMethod::PPMD","value":"Self","parent":{"krate":0,"index":19},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\compression.rs","byte_start":3615,"byte_end":3623,"line_start":76,"line_end":76,"column_start":12,"column_end":20},"name":"from_u16","qualname":"<CompressionMethod>::from_u16","value":"pub fn from_u16(u16) -> CompressionMethod","parent":null,"children":[],"decl_id":null,"docs":" Converts an u16 to its corresponding CompressionMethod\n","sig":null,"attributes":[{"value":"/ Converts an u16 to its corresponding CompressionMethod","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\compression.rs","byte_start":3429,"byte_end":3487,"line_start":71,"line_end":71,"column_start":5,"column_end":63}},{"value":"deprecated(since = \"0.5.7\", note =\n\"use a constant to construct a compression method\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\compression.rs","byte_start":3492,"byte_end":3603,"line_start":72,"line_end":75,"column_start":5,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\compression.rs","byte_start":4286,"byte_end":4292,"line_start":98,"line_end":98,"column_start":12,"column_end":18},"name":"to_u16","qualname":"<CompressionMethod>::to_u16","value":"pub fn to_u16(Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Converts a CompressionMethod to a u16\n","sig":null,"attributes":[{"value":"/ Converts a CompressionMethod to a u16","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\compression.rs","byte_start":4112,"byte_end":4153,"line_start":93,"line_end":93,"column_start":5,"column_end":46}},{"value":"deprecated(since = \"0.5.7\", note =\n\"to match on other compression methods, use a constant\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\compression.rs","byte_start":4158,"byte_end":4274,"line_start":94,"line_end":97,"column_start":5,"column_end":7}}]},{"kind":"Type","id":{"krate":0,"index":48},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\cp437.rs","byte_start":6723,"byte_end":6729,"line_start":6,"line_end":6,"column_start":10,"column_end":16},"name":"Target","qualname":"::cp437::FromCp437::Target","value":"type Target;","parent":{"krate":0,"index":47},"children":[],"decl_id":null,"docs":" Target type\n","sig":null,"attributes":[{"value":"/ Target type","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\cp437.rs","byte_start":6698,"byte_end":6713,"line_start":5,"line_end":5,"column_start":5,"column_end":20}}]},{"kind":"Mod","id":{"krate":0,"index":82},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"read","qualname":"::read","value":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","parent":null,"children":[{"krate":0,"index":83},{"krate":0,"index":86},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":93},{"krate":0,"index":96},{"krate":0,"index":99},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":106},{"krate":0,"index":109},{"krate":0,"index":112},{"krate":0,"index":115},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":127},{"krate":0,"index":130},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":137},{"krate":0,"index":140},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":147},{"krate":0,"index":150},{"krate":0,"index":153},{"krate":0,"index":603},{"krate":0,"index":610},{"krate":0,"index":613},{"krate":0,"index":156},{"krate":0,"index":164},{"krate":0,"index":167},{"krate":0,"index":170},{"krate":0,"index":183},{"krate":0,"index":186},{"krate":0,"index":189},{"krate":0,"index":194},{"krate":0,"index":197},{"krate":0,"index":199},{"krate":0,"index":201},{"krate":0,"index":235},{"krate":0,"index":237},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":264},{"krate":0,"index":267},{"krate":0,"index":271}],"decl_id":null,"docs":" Types for reading ZIP archives\n","sig":null,"attributes":[{"value":"/ Types for reading ZIP archives","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":13964,"byte_end":13998,"line_start":1,"line_end":1,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":603},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":15241,"byte_end":15251,"line_start":49,"line_end":49,"column_start":12,"column_end":22},"name":"ZipArchive","qualname":"::read::ZipArchive","value":"ZipArchive {  }","parent":null,"children":[{"krate":0,"index":605},{"krate":0,"index":606},{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":609}],"decl_id":null,"docs":" ZIP archive reader","sig":null,"attributes":[{"value":"/ ZIP archive reader","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":14763,"byte_end":14785,"line_start":32,"line_end":32,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":14786,"byte_end":14789,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":14790,"byte_end":14803,"line_start":34,"line_end":34,"column_start":1,"column_end":14}},{"value":"/ use std::io::prelude::*;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":14804,"byte_end":14832,"line_start":35,"line_end":35,"column_start":1,"column_end":29}},{"value":"/ fn list_zip_contents(reader: impl Read + Seek) -> zip::result::ZipResult<()> {","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":14833,"byte_end":14915,"line_start":36,"line_end":36,"column_start":1,"column_end":83}},{"value":"/     let mut zip = zip::ZipArchive::new(reader)?;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":14916,"byte_end":14968,"line_start":37,"line_end":37,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":14969,"byte_end":14972,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/     for i in 0..zip.len() {","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":14973,"byte_end":15004,"line_start":39,"line_end":39,"column_start":1,"column_end":32}},{"value":"/         let mut file = zip.by_index(i)?;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":15005,"byte_end":15049,"line_start":40,"line_end":40,"column_start":1,"column_end":45}},{"value":"/         println!(\"Filename: {}\", file.name());","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":15050,"byte_end":15100,"line_start":41,"line_end":41,"column_start":1,"column_end":51}},{"value":"/         std::io::copy(&mut file, &mut std::io::stdout());","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":15101,"byte_end":15162,"line_start":42,"line_end":42,"column_start":1,"column_end":62}},{"value":"/     }","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":15163,"byte_end":15172,"line_start":43,"line_end":43,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":15173,"byte_end":15176,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":15177,"byte_end":15191,"line_start":45,"line_end":45,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":15192,"byte_end":15197,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":15198,"byte_end":15205,"line_start":47,"line_end":47,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":189},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":17901,"byte_end":17908,"line_start":133,"line_end":133,"column_start":12,"column_end":19},"name":"ZipFile","qualname":"::read::ZipFile","value":"ZipFile {  }","parent":null,"children":[{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193}],"decl_id":null,"docs":" A struct for reading a zip file\n","sig":null,"attributes":[{"value":"/ A struct for reading a zip file","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":17854,"byte_end":17889,"line_start":132,"line_end":132,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":25558,"byte_end":25561,"line_start":322,"line_end":322,"column_start":12,"column_end":15},"name":"new","qualname":"<ZipArchive<R>>::new","value":"pub fn new(R) -> ZipResult<ZipArchive<R>>","parent":null,"children":[],"decl_id":null,"docs":" Read a ZIP archive, collecting the files it contains","sig":null,"attributes":[{"value":"/ Read a ZIP archive, collecting the files it contains","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":25387,"byte_end":25443,"line_start":319,"line_end":319,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":25448,"byte_end":25451,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ This uses the central directory record of the ZIP file, and ignores local file headers","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":25456,"byte_end":25546,"line_start":321,"line_end":321,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":27008,"byte_end":27015,"line_start":360,"line_end":360,"column_start":12,"column_end":19},"name":"extract","qualname":"<ZipArchive<R>>::extract","value":"pub fn extract<P: AsRef<Path>>(&mut Self, P) -> ZipResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Extract a Zip archive into a directory, overwriting files if they\n already exist. Paths are sanitized with [`ZipFile::enclosed_name`].","sig":null,"attributes":[{"value":"/ Extract a Zip archive into a directory, overwriting files if they","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":26734,"byte_end":26803,"line_start":355,"line_end":355,"column_start":5,"column_end":74}},{"value":"/ already exist. Paths are sanitized with [`ZipFile::enclosed_name`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":26808,"byte_end":26879,"line_start":356,"line_end":356,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":26884,"byte_end":26887,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ Extraction is not atomic; If an error is encountered, some of the files","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":26892,"byte_end":26967,"line_start":358,"line_end":358,"column_start":5,"column_end":80}},{"value":"/ may be left on disk.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":26972,"byte_end":26996,"line_start":359,"line_end":359,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":28192,"byte_end":28195,"line_start":395,"line_end":395,"column_start":12,"column_end":15},"name":"len","qualname":"<ZipArchive<R>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Number of files contained in this zip.\n","sig":null,"attributes":[{"value":"/ Number of files contained in this zip.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":28138,"byte_end":28180,"line_start":394,"line_end":394,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":28308,"byte_end":28316,"line_start":400,"line_end":400,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<ZipArchive<R>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether this zip archive contains no files\n","sig":null,"attributes":[{"value":"/ Whether this zip archive contains no files","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":28250,"byte_end":28296,"line_start":399,"line_end":399,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":28639,"byte_end":28645,"line_start":408,"line_end":408,"column_start":12,"column_end":18},"name":"offset","qualname":"<ZipArchive<R>>::offset","value":"pub fn offset(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Get the offset from the beginning of the underlying reader that this zip begins at, in bytes.","sig":null,"attributes":[{"value":"/ Get the offset from the beginning of the underlying reader that this zip begins at, in bytes.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":28369,"byte_end":28466,"line_start":404,"line_end":404,"column_start":5,"column_end":102}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":28471,"byte_end":28474,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ Normally this value is zero, but if the zip has arbitrary data prepended to it, then this value will be the size","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":28479,"byte_end":28595,"line_start":406,"line_end":406,"column_start":5,"column_end":121}},{"value":"/ of that prepended data.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":28600,"byte_end":28627,"line_start":407,"line_end":407,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":28744,"byte_end":28751,"line_start":413,"line_end":413,"column_start":12,"column_end":19},"name":"comment","qualname":"<ZipArchive<R>>::comment","value":"pub fn comment(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Get the comment of the zip archive.\n","sig":null,"attributes":[{"value":"/ Get the comment of the zip archive.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":28693,"byte_end":28732,"line_start":412,"line_end":412,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":28893,"byte_end":28903,"line_start":418,"line_end":418,"column_start":12,"column_end":22},"name":"file_names","qualname":"<ZipArchive<R>>::file_names","value":"pub fn file_names(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over all the file and directory names in this archive.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over all the file and directory names in this archive.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":28803,"byte_end":28881,"line_start":417,"line_end":417,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":29080,"byte_end":29095,"line_start":423,"line_end":423,"column_start":12,"column_end":27},"name":"by_name_decrypt","qualname":"<ZipArchive<R>>::by_name_decrypt","value":"pub fn by_name_decrypt<'a>(&'a mut Self, &str, &[u8])\n-> ZipResult<Result<ZipFile, InvalidPassword>>","parent":null,"children":[],"decl_id":null,"docs":" Search for a file entry by name, decrypt with given password\n","sig":null,"attributes":[{"value":"/ Search for a file entry by name, decrypt with given password","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":29004,"byte_end":29068,"line_start":422,"line_end":422,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":29351,"byte_end":29358,"line_start":432,"line_end":432,"column_start":12,"column_end":19},"name":"by_name","qualname":"<ZipArchive<R>>::by_name","value":"pub fn by_name<'a>(&'a mut Self, &str) -> ZipResult<ZipFile>","parent":null,"children":[],"decl_id":null,"docs":" Search for a file entry by name\n","sig":null,"attributes":[{"value":"/ Search for a file entry by name","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":29304,"byte_end":29339,"line_start":431,"line_end":431,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":30005,"byte_end":30021,"line_start":451,"line_end":451,"column_start":12,"column_end":28},"name":"by_index_decrypt","qualname":"<ZipArchive<R>>::by_index_decrypt","value":"pub fn by_index_decrypt<'a>(&'a mut Self, usize, &[u8])\n-> ZipResult<Result<ZipFile, InvalidPassword>>","parent":null,"children":[],"decl_id":null,"docs":" Get a contained file by index, decrypt with given password\n","sig":null,"attributes":[{"value":"/ Get a contained file by index, decrypt with given password","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":29931,"byte_end":29993,"line_start":450,"line_end":450,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":30291,"byte_end":30299,"line_start":460,"line_end":460,"column_start":12,"column_end":20},"name":"by_index","qualname":"<ZipArchive<R>>::by_index","value":"pub fn by_index<'a>(&'a mut Self, usize) -> ZipResult<ZipFile>","parent":null,"children":[],"decl_id":null,"docs":" Get a contained file by index\n","sig":null,"attributes":[{"value":"/ Get a contained file by index","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":30246,"byte_end":30279,"line_start":459,"line_end":459,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":30551,"byte_end":30563,"line_start":467,"line_end":467,"column_start":12,"column_end":24},"name":"by_index_raw","qualname":"<ZipArchive<R>>::by_index_raw","value":"pub fn by_index_raw<'a>(&'a mut Self, usize) -> ZipResult<ZipFile>","parent":null,"children":[],"decl_id":null,"docs":" Get a contained file by index without decompressing it\n","sig":null,"attributes":[{"value":"/ Get a contained file by index without decompressing it","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":30481,"byte_end":30539,"line_start":466,"line_end":466,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":32363,"byte_end":32373,"line_start":519,"line_end":519,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<ZipArchive<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Unwrap and return the inner reader object","sig":null,"attributes":[{"value":"/ Unwrap and return the inner reader object","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":32249,"byte_end":32294,"line_start":516,"line_end":516,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":32299,"byte_end":32302,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ The position of the reader is undefined.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":32307,"byte_end":32351,"line_start":518,"line_end":518,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":37974,"byte_end":37989,"line_start":666,"line_end":666,"column_start":12,"column_end":27},"name":"version_made_by","qualname":"<ZipFile>::version_made_by","value":"pub fn version_made_by(&Self) -> (u8, u8)","parent":null,"children":[],"decl_id":null,"docs":" Get the version of the file\n","sig":null,"attributes":[{"value":"/ Get the version of the file","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":37931,"byte_end":37962,"line_start":665,"line_end":665,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":38641,"byte_end":38645,"line_start":685,"line_end":685,"column_start":12,"column_end":16},"name":"name","qualname":"<ZipFile>::name","value":"pub fn name(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Get the name of the file","sig":null,"attributes":[{"value":"/ Get the name of the file","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":38130,"byte_end":38158,"line_start":673,"line_end":673,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":38163,"byte_end":38166,"line_start":674,"line_end":674,"column_start":5,"column_end":8}},{"value":"/ # Warnings","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":38171,"byte_end":38185,"line_start":675,"line_end":675,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":38190,"byte_end":38193,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/ It is dangerous to use this name directly when extracting an archive.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":38198,"byte_end":38271,"line_start":677,"line_end":677,"column_start":5,"column_end":78}},{"value":"/ It may contain an absolute path (`/etc/shadow`), or break out of the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":38276,"byte_end":38348,"line_start":678,"line_end":678,"column_start":5,"column_end":77}},{"value":"/ current directory (`../runtime`). Carelessly writing to these paths","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":38353,"byte_end":38424,"line_start":679,"line_end":679,"column_start":5,"column_end":76}},{"value":"/ allows an attacker to craft a ZIP archive that will overwrite critical","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":38429,"byte_end":38503,"line_start":680,"line_end":680,"column_start":5,"column_end":79}},{"value":"/ files.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":38508,"byte_end":38518,"line_start":681,"line_end":681,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":38523,"byte_end":38526,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ You can use the [`ZipFile::enclosed_name`] method to validate the name","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":38531,"byte_end":38605,"line_start":683,"line_end":683,"column_start":5,"column_end":79}},{"value":"/ as a safe path.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":38610,"byte_end":38629,"line_start":684,"line_end":684,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":38853,"byte_end":38861,"line_start":692,"line_end":692,"column_start":12,"column_end":20},"name":"name_raw","qualname":"<ZipFile>::name_raw","value":"pub fn name_raw(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Get the name of the file, in the raw (internal) byte representation.","sig":null,"attributes":[{"value":"/ Get the name of the file, in the raw (internal) byte representation.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":38703,"byte_end":38775,"line_start":689,"line_end":689,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":38780,"byte_end":38783,"line_start":690,"line_end":690,"column_start":5,"column_end":8}},{"value":"/ The encoding of this data is currently undefined.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":38788,"byte_end":38841,"line_start":691,"line_end":691,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":39293,"byte_end":39307,"line_start":703,"line_end":703,"column_start":12,"column_end":26},"name":"sanitized_name","qualname":"<ZipFile>::sanitized_name","value":"pub fn sanitized_name(&Self) -> ::std::path::PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Get the name of the file in a sanitized form. It truncates the name to the first NULL byte,\n removes a leading '/' and removes '..' parts.\n","sig":null,"attributes":[{"value":"/ Get the name of the file in a sanitized form. It truncates the name to the first NULL byte,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":38924,"byte_end":39019,"line_start":696,"line_end":696,"column_start":5,"column_end":100}},{"value":"/ removes a leading '/' and removes '..' parts.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":39024,"byte_end":39073,"line_start":697,"line_end":697,"column_start":5,"column_end":54}},{"value":"deprecated(since = \"0.5.7\", note =\n\"by stripping `..`s from the path, the meaning of paths can change.\n                `mangled_name` can be used if this behaviour is desirable\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":39078,"byte_end":39281,"line_start":698,"line_end":702,"column_start":5,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":39956,"byte_end":39968,"line_start":719,"line_end":719,"column_start":12,"column_end":24},"name":"mangled_name","qualname":"<ZipFile>::mangled_name","value":"pub fn mangled_name(&Self) -> ::std::path::PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Rewrite the path, ignoring any path components with special meaning.","sig":null,"attributes":[{"value":"/ Rewrite the path, ignoring any path components with special meaning.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":39380,"byte_end":39452,"line_start":707,"line_end":707,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":39457,"byte_end":39460,"line_start":708,"line_end":708,"column_start":5,"column_end":8}},{"value":"/ - Absolute paths are made relative","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":39465,"byte_end":39503,"line_start":709,"line_end":709,"column_start":5,"column_end":43}},{"value":"/ - [`ParentDir`]s are ignored","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":39508,"byte_end":39540,"line_start":710,"line_end":710,"column_start":5,"column_end":37}},{"value":"/ - Truncates the filename at a NULL byte","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":39545,"byte_end":39588,"line_start":711,"line_end":711,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":39593,"byte_end":39596,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ This is appropriate if you need to be able to extract *something* from","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":39601,"byte_end":39675,"line_start":713,"line_end":713,"column_start":5,"column_end":79}},{"value":"/ any archive, but will easily misrepresent trivial paths like","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":39680,"byte_end":39744,"line_start":714,"line_end":714,"column_start":5,"column_end":69}},{"value":"/ `foo/../bar` as `foo/bar` (instead of `bar`). Because of this,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":39749,"byte_end":39815,"line_start":715,"line_end":715,"column_start":5,"column_end":71}},{"value":"/ [`ZipFile::enclosed_name`] is the better option in most scenarios.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":39820,"byte_end":39890,"line_start":716,"line_end":716,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":39895,"byte_end":39898,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ [`ParentDir`]: `Component::ParentDir`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":39903,"byte_end":39944,"line_start":718,"line_end":718,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":40500,"byte_end":40513,"line_start":733,"line_end":733,"column_start":12,"column_end":25},"name":"enclosed_name","qualname":"<ZipFile>::enclosed_name","value":"pub fn enclosed_name(&Self) -> Option<&Path>","parent":null,"children":[],"decl_id":null,"docs":" Ensure the file path is safe to use as a [`Path`].","sig":null,"attributes":[{"value":"/ Ensure the file path is safe to use as a [`Path`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":40053,"byte_end":40107,"line_start":723,"line_end":723,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":40112,"byte_end":40115,"line_start":724,"line_end":724,"column_start":5,"column_end":8}},{"value":"/ - It can't contain NULL bytes","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":40120,"byte_end":40153,"line_start":725,"line_end":725,"column_start":5,"column_end":38}},{"value":"/ - It can't resolve to a path outside the current directory","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":40158,"byte_end":40220,"line_start":726,"line_end":726,"column_start":5,"column_end":67}},{"value":"/   > `foo/../bar` is fine, `foo/../../bar` is not.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":40225,"byte_end":40278,"line_start":727,"line_end":727,"column_start":5,"column_end":58}},{"value":"/ - It can't be an absolute path","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":40283,"byte_end":40317,"line_start":728,"line_end":728,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":40322,"byte_end":40325,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ This will read well-formed ZIP files correctly, and is resistant","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":40330,"byte_end":40398,"line_start":730,"line_end":730,"column_start":5,"column_end":73}},{"value":"/ to path-based exploits. It is recommended over","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":40403,"byte_end":40453,"line_start":731,"line_end":731,"column_start":5,"column_end":55}},{"value":"/ [`ZipFile::mangled_name`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":40458,"byte_end":40488,"line_start":732,"line_end":732,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":41117,"byte_end":41124,"line_start":751,"line_end":751,"column_start":12,"column_end":19},"name":"comment","qualname":"<ZipFile>::comment","value":"pub fn comment(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Get the comment of the file\n","sig":null,"attributes":[{"value":"/ Get the comment of the file","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":41074,"byte_end":41105,"line_start":750,"line_end":750,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":41250,"byte_end":41261,"line_start":756,"line_end":756,"column_start":12,"column_end":23},"name":"compression","qualname":"<ZipFile>::compression","value":"pub fn compression(&Self) -> CompressionMethod","parent":null,"children":[],"decl_id":null,"docs":" Get the compression method used to store the file\n","sig":null,"attributes":[{"value":"/ Get the compression method used to store the file","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":41185,"byte_end":41238,"line_start":755,"line_end":755,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":41395,"byte_end":41410,"line_start":761,"line_end":761,"column_start":12,"column_end":27},"name":"compressed_size","qualname":"<ZipFile>::compressed_size","value":"pub fn compressed_size(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Get the size of the file in the archive\n","sig":null,"attributes":[{"value":"/ Get the size of the file in the archive","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":41340,"byte_end":41383,"line_start":760,"line_end":760,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":41530,"byte_end":41534,"line_start":766,"line_end":766,"column_start":12,"column_end":16},"name":"size","qualname":"<ZipFile>::size","value":"pub fn size(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Get the size of the file when uncompressed\n","sig":null,"attributes":[{"value":"/ Get the size of the file when uncompressed","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":41472,"byte_end":41518,"line_start":765,"line_end":765,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":41653,"byte_end":41666,"line_start":771,"line_end":771,"column_start":12,"column_end":25},"name":"last_modified","qualname":"<ZipFile>::last_modified","value":"pub fn last_modified(&Self) -> DateTime","parent":null,"children":[],"decl_id":null,"docs":" Get the time the file was last modified\n","sig":null,"attributes":[{"value":"/ Get the time the file was last modified","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":41598,"byte_end":41641,"line_start":770,"line_end":770,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":255},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":41799,"byte_end":41805,"line_start":775,"line_end":775,"column_start":12,"column_end":18},"name":"is_dir","qualname":"<ZipFile>::is_dir","value":"pub fn is_dir(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the file is actually a directory\n","sig":null,"attributes":[{"value":"/ Returns whether the file is actually a directory","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":41735,"byte_end":41787,"line_start":774,"line_end":774,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":42026,"byte_end":42033,"line_start":784,"line_end":784,"column_start":12,"column_end":19},"name":"is_file","qualname":"<ZipFile>::is_file","value":"pub fn is_file(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the file is a regular file\n","sig":null,"attributes":[{"value":"/ Returns whether the file is a regular file","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":41968,"byte_end":42014,"line_start":783,"line_end":783,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":42127,"byte_end":42136,"line_start":789,"line_end":789,"column_start":12,"column_end":21},"name":"unix_mode","qualname":"<ZipFile>::unix_mode","value":"pub fn unix_mode(&Self) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" Get unix mode for the file\n","sig":null,"attributes":[{"value":"/ Get unix mode for the file","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":42085,"byte_end":42115,"line_start":788,"line_end":788,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":42962,"byte_end":42967,"line_start":814,"line_end":814,"column_start":12,"column_end":17},"name":"crc32","qualname":"<ZipFile>::crc32","value":"pub fn crc32(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Get the CRC32 hash of the original file\n","sig":null,"attributes":[{"value":"/ Get the CRC32 hash of the original file","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":42907,"byte_end":42950,"line_start":813,"line_end":813,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":43085,"byte_end":43095,"line_start":819,"line_end":819,"column_start":12,"column_end":22},"name":"extra_data","qualname":"<ZipFile>::extra_data","value":"pub fn extra_data(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Get the extra data of the zip header for this file\n","sig":null,"attributes":[{"value":"/ Get the extra data of the zip header for this file","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":43019,"byte_end":43073,"line_start":818,"line_end":818,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":43230,"byte_end":43240,"line_start":824,"line_end":824,"column_start":12,"column_end":22},"name":"data_start","qualname":"<ZipFile>::data_start","value":"pub fn data_start(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Get the starting offset of the data of the compressed file\n","sig":null,"attributes":[{"value":"/ Get the starting offset of the data of the compressed file","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":43156,"byte_end":43218,"line_start":823,"line_end":823,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":43368,"byte_end":43380,"line_start":829,"line_end":829,"column_start":12,"column_end":24},"name":"header_start","qualname":"<ZipFile>::header_start","value":"pub fn header_start(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Get the starting offset of the zip header for this file\n","sig":null,"attributes":[{"value":"/ Get the starting offset of the zip header for this file","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":43297,"byte_end":43356,"line_start":828,"line_end":828,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":43534,"byte_end":43554,"line_start":833,"line_end":833,"column_start":12,"column_end":32},"name":"central_header_start","qualname":"<ZipFile>::central_header_start","value":"pub fn central_header_start(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Get the starting offset of the zip header in the central directory for this file\n","sig":null,"attributes":[{"value":"/ Get the starting offset of the zip header in the central directory for this file","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":43438,"byte_end":43522,"line_start":832,"line_end":832,"column_start":5,"column_end":89}}]},{"kind":"Function","id":{"krate":0,"index":271},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":45843,"byte_end":45867,"line_start":893,"line_end":893,"column_start":8,"column_end":32},"name":"read_zipfile_from_stream","qualname":"::read::read_zipfile_from_stream","value":"pub fn read_zipfile_from_stream<'a, R: io::Read>(&'a mut R)\n-> ZipResult<Option<ZipFile>>","parent":null,"children":[],"decl_id":null,"docs":" Read ZipFile structures from a non-seekable reader.","sig":null,"attributes":[{"value":"/ Read ZipFile structures from a non-seekable reader.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":45071,"byte_end":45126,"line_start":877,"line_end":877,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":45127,"byte_end":45130,"line_start":878,"line_end":878,"column_start":1,"column_end":4}},{"value":"/ This is an alternative method to read a zip file. If possible, use the ZipArchive functions","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":45131,"byte_end":45226,"line_start":879,"line_end":879,"column_start":1,"column_end":96}},{"value":"/ as some information will be missing when reading this manner.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":45227,"byte_end":45292,"line_start":880,"line_end":880,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":45293,"byte_end":45296,"line_start":881,"line_end":881,"column_start":1,"column_end":4}},{"value":"/ Reads a file header from the start of the stream. Will return `Ok(Some(..))` if a file is","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":45297,"byte_end":45390,"line_start":882,"line_end":882,"column_start":1,"column_end":94}},{"value":"/ present at the start of the stream. Returns `Ok(None)` if the start of the central directory","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":45391,"byte_end":45487,"line_start":883,"line_end":883,"column_start":1,"column_end":97}},{"value":"/ is encountered. No more files should be read after this.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":45488,"byte_end":45548,"line_start":884,"line_end":884,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":45549,"byte_end":45552,"line_start":885,"line_end":885,"column_start":1,"column_end":4}},{"value":"/ The Drop implementation of ZipFile ensures that the reader will be correctly positioned after","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":45553,"byte_end":45650,"line_start":886,"line_end":886,"column_start":1,"column_end":98}},{"value":"/ the structure is done.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":45651,"byte_end":45677,"line_start":887,"line_end":887,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":45678,"byte_end":45681,"line_start":888,"line_end":888,"column_start":1,"column_end":4}},{"value":"/ Missing fields are:","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":45682,"byte_end":45705,"line_start":889,"line_end":889,"column_start":1,"column_end":24}},{"value":"/ * `comment`: set to an empty string","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":45706,"byte_end":45745,"line_start":890,"line_end":890,"column_start":1,"column_end":40}},{"value":"/ * `data_start`: set to 0","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":45746,"byte_end":45774,"line_start":891,"line_end":891,"column_start":1,"column_end":29}},{"value":"/ * `external_attributes`: `unix_mode()`: will return None","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":45775,"byte_end":45835,"line_start":892,"line_end":892,"column_start":1,"column_end":61}}]},{"kind":"Mod","id":{"krate":0,"index":274},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\result.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"result","qualname":"::result","value":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\result.rs","parent":null,"children":[{"krate":0,"index":275},{"krate":0,"index":278},{"krate":0,"index":281},{"krate":0,"index":621},{"krate":0,"index":616},{"krate":0,"index":617},{"krate":0,"index":619},{"krate":0,"index":623},{"krate":0,"index":624},{"krate":0,"index":626},{"krate":0,"index":631},{"krate":0,"index":633},{"krate":0,"index":283},{"krate":0,"index":285}],"decl_id":null,"docs":" Error types that can be emitted from this library\n","sig":null,"attributes":[{"value":"/ Error types that can be emitted from this library","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\result.rs","byte_start":53053,"byte_end":53106,"line_start":1,"line_end":1,"column_start":1,"column_end":54}}]},{"kind":"Type","id":{"krate":0,"index":281},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\result.rs","byte_start":53213,"byte_end":53222,"line_start":8,"line_end":8,"column_start":10,"column_end":19},"name":"ZipResult","qualname":"::result::ZipResult","value":"Result<T, ZipError>","parent":null,"children":[],"decl_id":null,"docs":" Generic result type with ZipError as its error variant\n","sig":null,"attributes":[{"value":"/ Generic result type with ZipError as its error variant","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\result.rs","byte_start":53145,"byte_end":53203,"line_start":7,"line_end":7,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":621},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\result.rs","byte_start":53366,"byte_end":53381,"line_start":13,"line_end":13,"column_start":12,"column_end":27},"name":"InvalidPassword","qualname":"::result::InvalidPassword","value":"","parent":null,"children":[],"decl_id":null,"docs":" The given password is wrong\n","sig":null,"attributes":[{"value":"/ The given password is wrong","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\result.rs","byte_start":53250,"byte_end":53281,"line_start":10,"line_end":10,"column_start":1,"column_end":32}},{"value":"error(\"invalid password for file in archive\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\result.rs","byte_start":53306,"byte_end":53354,"line_start":12,"line_end":12,"column_start":1,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":635},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\result.rs","byte_start":53512,"byte_end":53514,"line_start":20,"line_end":20,"column_start":5,"column_end":7},"name":"Io","qualname":"::result::ZipError::Io","value":"ZipError::Io(io::Error)","parent":{"krate":0,"index":623},"children":[],"decl_id":null,"docs":" An Error caused by I/O\n","sig":null,"attributes":[{"value":"/ An Error caused by I/O","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\result.rs","byte_start":53455,"byte_end":53481,"line_start":18,"line_end":18,"column_start":5,"column_end":31}},{"value":"error(transparent)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\result.rs","byte_start":53486,"byte_end":53507,"line_start":19,"line_end":19,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":638},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\result.rs","byte_start":53624,"byte_end":53638,"line_start":24,"line_end":24,"column_start":5,"column_end":19},"name":"InvalidArchive","qualname":"::result::ZipError::InvalidArchive","value":"ZipError::InvalidArchive(&'static str)","parent":{"krate":0,"index":623},"children":[],"decl_id":null,"docs":" This file is probably not a zip archive\n","sig":null,"attributes":[{"value":"/ This file is probably not a zip archive","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\result.rs","byte_start":53540,"byte_end":53583,"line_start":22,"line_end":22,"column_start":5,"column_end":48}},{"value":"error(\"invalid Zip archive\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\result.rs","byte_start":53588,"byte_end":53619,"line_start":23,"line_end":23,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":641},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\result.rs","byte_start":53737,"byte_end":53755,"line_start":28,"line_end":28,"column_start":5,"column_end":23},"name":"UnsupportedArchive","qualname":"::result::ZipError::UnsupportedArchive","value":"ZipError::UnsupportedArchive(&'static str)","parent":{"krate":0,"index":623},"children":[],"decl_id":null,"docs":" This archive is not supported\n","sig":null,"attributes":[{"value":"/ This archive is not supported","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\result.rs","byte_start":53659,"byte_end":53692,"line_start":26,"line_end":26,"column_start":5,"column_end":38}},{"value":"error(\"unsupported Zip archive\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\result.rs","byte_start":53697,"byte_end":53732,"line_start":27,"line_end":27,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":644},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\result.rs","byte_start":53889,"byte_end":53901,"line_start":32,"line_end":32,"column_start":5,"column_end":17},"name":"FileNotFound","qualname":"::result::ZipError::FileNotFound","value":"ZipError::FileNotFound","parent":{"krate":0,"index":623},"children":[],"decl_id":null,"docs":" The requested file could not be found in the archive\n","sig":null,"attributes":[{"value":"/ The requested file could not be found in the archive","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\result.rs","byte_start":53776,"byte_end":53832,"line_start":30,"line_end":30,"column_start":5,"column_end":61}},{"value":"error(\"specified file not found in archive\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\result.rs","byte_start":53837,"byte_end":53884,"line_start":31,"line_end":31,"column_start":5,"column_end":52}}]},{"kind":"Enum","id":{"krate":0,"index":623},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\result.rs","byte_start":53440,"byte_end":53448,"line_start":17,"line_end":17,"column_start":10,"column_end":18},"name":"ZipError","qualname":"::result::ZipError","value":"pub enum ZipError {\n    Io(io::Error),\n    InvalidArchive(&'static str),\n    UnsupportedArchive(&'static str),\n    FileNotFound,\n}","parent":null,"children":[{"krate":0,"index":635},{"krate":0,"index":638},{"krate":0,"index":641},{"krate":0,"index":644}],"decl_id":null,"docs":" Error type for Zip\n","sig":null,"attributes":[{"value":"/ Error type for Zip","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\result.rs","byte_start":53384,"byte_end":53406,"line_start":15,"line_end":15,"column_start":1,"column_end":23}}]},{"kind":"Const","id":{"krate":0,"index":284},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\result.rs","byte_start":54393,"byte_end":54410,"line_start":47,"line_end":47,"column_start":15,"column_end":32},"name":"PASSWORD_REQUIRED","qualname":"::result::ZipError::PASSWORD_REQUIRED","value":"&'static str","parent":{"krate":0,"index":283},"children":[],"decl_id":null,"docs":" The text used as an error when a password is required and not supplied","sig":null,"attributes":[{"value":"/ The text used as an error when a password is required and not supplied","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\result.rs","byte_start":53926,"byte_end":54000,"line_start":36,"line_end":36,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\result.rs","byte_start":54005,"byte_end":54008,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\result.rs","byte_start":54013,"byte_end":54031,"line_start":38,"line_end":38,"column_start":5,"column_end":23}},{"value":"/ # use zip::result::ZipError;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\result.rs","byte_start":54036,"byte_end":54068,"line_start":39,"line_end":39,"column_start":5,"column_end":37}},{"value":"/ # let mut archive = zip::ZipArchive::new(std::io::Cursor::new(&[])).unwrap();","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\result.rs","byte_start":54073,"byte_end":54154,"line_start":40,"line_end":40,"column_start":5,"column_end":86}},{"value":"/ match archive.by_index(1) {","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\result.rs","byte_start":54159,"byte_end":54190,"line_start":41,"line_end":41,"column_start":5,"column_end":36}},{"value":"/     Err(ZipError::UnsupportedArchive(ZipError::PASSWORD_REQUIRED)) => eprintln!(\"a password is needed to unzip this file\"),","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\result.rs","byte_start":54195,"byte_end":54322,"line_start":42,"line_end":42,"column_start":5,"column_end":132}},{"value":"/     _ => (),","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\result.rs","byte_start":54327,"byte_end":54343,"line_start":43,"line_end":43,"column_start":5,"column_end":21}},{"value":"/ }","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\result.rs","byte_start":54348,"byte_end":54353,"line_start":44,"line_end":44,"column_start":5,"column_end":10}},{"value":"/ # ()","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\result.rs","byte_start":54358,"byte_end":54366,"line_start":45,"line_end":45,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\result.rs","byte_start":54371,"byte_end":54378,"line_start":46,"line_end":46,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":663},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\types.rs","byte_start":64328,"byte_end":64336,"line_start":36,"line_end":36,"column_start":12,"column_end":20},"name":"DateTime","qualname":"::types::DateTime","value":"DateTime {  }","parent":null,"children":[{"krate":0,"index":664},{"krate":0,"index":665},{"krate":0,"index":666},{"krate":0,"index":667},{"krate":0,"index":668},{"krate":0,"index":669}],"decl_id":null,"docs":" A DateTime field to be used for storing timestamps in a zip file","sig":null,"attributes":[{"value":"/ A DateTime field to be used for storing timestamps in a zip file","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\types.rs","byte_start":63596,"byte_end":63664,"line_start":22,"line_end":22,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\types.rs","byte_start":63665,"byte_end":63668,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ This structure does bounds checking to ensure the date is able to be stored in a zip file.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\types.rs","byte_start":63669,"byte_end":63763,"line_start":24,"line_end":24,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\types.rs","byte_start":63764,"byte_end":63767,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ When constructed manually from a date and time, it will also check if the input is sensible","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\types.rs","byte_start":63768,"byte_end":63863,"line_start":26,"line_end":26,"column_start":1,"column_end":96}},{"value":"/ (e.g. months are from [1, 12]), but when read from a zip some parts may be out of their normal","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\types.rs","byte_start":63864,"byte_end":63962,"line_start":27,"line_end":27,"column_start":1,"column_end":99}},{"value":"/ bounds (e.g. month 0, or hour 31).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\types.rs","byte_start":63963,"byte_end":64001,"line_start":28,"line_end":28,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\types.rs","byte_start":64002,"byte_end":64005,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Warning","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\types.rs","byte_start":64006,"byte_end":64019,"line_start":30,"line_end":30,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\types.rs","byte_start":64020,"byte_end":64023,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ Some utilities use alternative timestamps to improve the accuracy of their","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\types.rs","byte_start":64024,"byte_end":64102,"line_start":32,"line_end":32,"column_start":1,"column_end":79}},{"value":"/ ZIPs, but we don't parse them yet. [We're working on this](https://github.com/zip-rs/zip/issues/156#issuecomment-652981904),","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\types.rs","byte_start":64103,"byte_end":64231,"line_start":33,"line_end":33,"column_start":1,"column_end":129}},{"value":"/ however this API shouldn't be considered complete.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\types.rs","byte_start":64232,"byte_end":64286,"line_start":34,"line_end":34,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":362},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\types.rs","byte_start":64831,"byte_end":64841,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"name":"from_msdos","qualname":"<DateTime>::from_msdos","value":"pub fn from_msdos(u16, u16) -> DateTime","parent":null,"children":[],"decl_id":null,"docs":" Converts an msdos (u16, u16) pair to a DateTime object\n","sig":null,"attributes":[{"value":"/ Converts an msdos (u16, u16) pair to a DateTime object","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\types.rs","byte_start":64761,"byte_end":64819,"line_start":60,"line_end":60,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":363},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\types.rs","byte_start":65736,"byte_end":65754,"line_start":88,"line_end":88,"column_start":12,"column_end":30},"name":"from_date_and_time","qualname":"<DateTime>::from_date_and_time","value":"pub fn from_date_and_time(u16, u8, u8, u8, u8, u8) -> Result<DateTime, ()>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a DateTime from a specific date and time","sig":null,"attributes":[{"value":"/ Constructs a DateTime from a specific date and time","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\types.rs","byte_start":65484,"byte_end":65539,"line_start":79,"line_end":79,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\types.rs","byte_start":65544,"byte_end":65547,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ The bounds are:","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\types.rs","byte_start":65552,"byte_end":65571,"line_start":81,"line_end":81,"column_start":5,"column_end":24}},{"value":"/ * year: [1980, 2107]","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\types.rs","byte_start":65576,"byte_end":65600,"line_start":82,"line_end":82,"column_start":5,"column_end":29}},{"value":"/ * month: [1, 12]","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\types.rs","byte_start":65605,"byte_end":65625,"line_start":83,"line_end":83,"column_start":5,"column_end":25}},{"value":"/ * day: [1, 31]","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\types.rs","byte_start":65630,"byte_end":65648,"line_start":84,"line_end":84,"column_start":5,"column_end":23}},{"value":"/ * hour: [0, 23]","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\types.rs","byte_start":65653,"byte_end":65672,"line_start":85,"line_end":85,"column_start":5,"column_end":24}},{"value":"/ * minute: [0, 59]","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\types.rs","byte_start":65677,"byte_end":65698,"line_start":86,"line_end":86,"column_start":5,"column_end":26}},{"value":"/ * second: [0, 60]","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\types.rs","byte_start":65703,"byte_end":65724,"line_start":87,"line_end":87,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":364},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\types.rs","byte_start":67403,"byte_end":67411,"line_start":151,"line_end":151,"column_start":12,"column_end":20},"name":"timepart","qualname":"<DateTime>::timepart","value":"pub fn timepart(&Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Gets the time portion of this datetime in the msdos representation\n","sig":null,"attributes":[{"value":"/ Gets the time portion of this datetime in the msdos representation","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\types.rs","byte_start":67321,"byte_end":67391,"line_start":150,"line_end":150,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":365},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\types.rs","byte_start":67616,"byte_end":67624,"line_start":156,"line_end":156,"column_start":12,"column_end":20},"name":"datepart","qualname":"<DateTime>::datepart","value":"pub fn datepart(&Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Gets the date portion of this datetime in the msdos representation\n","sig":null,"attributes":[{"value":"/ Gets the date portion of this datetime in the msdos representation","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\types.rs","byte_start":67534,"byte_end":67604,"line_start":155,"line_end":155,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":366},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\types.rs","byte_start":68383,"byte_end":68387,"line_start":178,"line_end":178,"column_start":12,"column_end":16},"name":"year","qualname":"<DateTime>::year","value":"pub fn year(&Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Get the year. There is no epoch, i.e. 2018 will be returned as 2018.\n","sig":null,"attributes":[{"value":"/ Get the year. There is no epoch, i.e. 2018 will be returned as 2018.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\types.rs","byte_start":68299,"byte_end":68371,"line_start":177,"line_end":177,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":367},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\types.rs","byte_start":68499,"byte_end":68504,"line_start":183,"line_end":183,"column_start":12,"column_end":17},"name":"month","qualname":"<DateTime>::month","value":"pub fn month(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the month, where 1 = january and 12 = december\n","sig":null,"attributes":[{"value":"/ Get the month, where 1 = january and 12 = december","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\types.rs","byte_start":68433,"byte_end":68487,"line_start":182,"line_end":182,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":368},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\types.rs","byte_start":68577,"byte_end":68580,"line_start":188,"line_end":188,"column_start":12,"column_end":15},"name":"day","qualname":"<DateTime>::day","value":"pub fn day(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the day\n","sig":null,"attributes":[{"value":"/ Get the day","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\types.rs","byte_start":68550,"byte_end":68565,"line_start":187,"line_end":187,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":369},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\types.rs","byte_start":68652,"byte_end":68656,"line_start":193,"line_end":193,"column_start":12,"column_end":16},"name":"hour","qualname":"<DateTime>::hour","value":"pub fn hour(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the hour\n","sig":null,"attributes":[{"value":"/ Get the hour","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\types.rs","byte_start":68624,"byte_end":68640,"line_start":192,"line_end":192,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":370},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\types.rs","byte_start":68731,"byte_end":68737,"line_start":198,"line_end":198,"column_start":12,"column_end":18},"name":"minute","qualname":"<DateTime>::minute","value":"pub fn minute(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the minute\n","sig":null,"attributes":[{"value":"/ Get the minute","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\types.rs","byte_start":68701,"byte_end":68719,"line_start":197,"line_end":197,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":371},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\types.rs","byte_start":68814,"byte_end":68820,"line_start":203,"line_end":203,"column_start":12,"column_end":18},"name":"second","qualname":"<DateTime>::second","value":"pub fn second(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the second\n","sig":null,"attributes":[{"value":"/ Get the second","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\types.rs","byte_start":68784,"byte_end":68802,"line_start":202,"line_end":202,"column_start":5,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":379},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"write","qualname":"::write","value":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","parent":null,"children":[{"krate":0,"index":380},{"krate":0,"index":383},{"krate":0,"index":384},{"krate":0,"index":387},{"krate":0,"index":390},{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":397},{"krate":0,"index":400},{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":407},{"krate":0,"index":410},{"krate":0,"index":413},{"krate":0,"index":416},{"krate":0,"index":417},{"krate":0,"index":420},{"krate":0,"index":423},{"krate":0,"index":426},{"krate":0,"index":429},{"krate":0,"index":430},{"krate":0,"index":432},{"krate":0,"index":435},{"krate":0,"index":436},{"krate":0,"index":439},{"krate":0,"index":442},{"krate":0,"index":452},{"krate":0,"index":698},{"krate":0,"index":702},{"krate":0,"index":462},{"krate":0,"index":704},{"krate":0,"index":709},{"krate":0,"index":710},{"krate":0,"index":466},{"krate":0,"index":472},{"krate":0,"index":474},{"krate":0,"index":478},{"krate":0,"index":480},{"krate":0,"index":484},{"krate":0,"index":511},{"krate":0,"index":514},{"krate":0,"index":522},{"krate":0,"index":524},{"krate":0,"index":527},{"krate":0,"index":530},{"krate":0,"index":532},{"krate":0,"index":534},{"krate":0,"index":536},{"krate":0,"index":538},{"krate":0,"index":539}],"decl_id":null,"docs":" Types for creating ZIP archives\n","sig":null,"attributes":[{"value":"/ Types for creating ZIP archives","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":78131,"byte_end":78166,"line_start":1,"line_end":1,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":452},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":79904,"byte_end":79913,"line_start":66,"line_end":66,"column_start":12,"column_end":21},"name":"ZipWriter","qualname":"::write::ZipWriter","value":"ZipWriter {  }","parent":null,"children":[{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":457},{"krate":0,"index":458},{"krate":0,"index":459},{"krate":0,"index":460},{"krate":0,"index":461}],"decl_id":null,"docs":" ZIP archive generator","sig":null,"attributes":[{"value":"/ ZIP archive generator","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":79044,"byte_end":79069,"line_start":38,"line_end":38,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":79070,"byte_end":79073,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ Handles the bookkeeping involved in building an archive, and provides an","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":79074,"byte_end":79150,"line_start":40,"line_end":40,"column_start":1,"column_end":77}},{"value":"/ API to edit its contents.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":79151,"byte_end":79180,"line_start":41,"line_end":41,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":79181,"byte_end":79184,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":79185,"byte_end":79192,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ # fn doit() -> zip::result::ZipResult<()>","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":79193,"byte_end":79238,"line_start":44,"line_end":44,"column_start":1,"column_end":46}},{"value":"/ # {","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":79239,"byte_end":79246,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/ # use zip::ZipWriter;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":79247,"byte_end":79272,"line_start":46,"line_end":46,"column_start":1,"column_end":26}},{"value":"/ use std::io::Write;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":79273,"byte_end":79296,"line_start":47,"line_end":47,"column_start":1,"column_end":24}},{"value":"/ use zip::write::FileOptions;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":79297,"byte_end":79329,"line_start":48,"line_end":48,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":79330,"byte_end":79333,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ // We use a buffer here, though you'd normally use a `File`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":79334,"byte_end":79397,"line_start":50,"line_end":50,"column_start":1,"column_end":64}},{"value":"/ let mut buf = [0; 65536];","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":79398,"byte_end":79427,"line_start":51,"line_end":51,"column_start":1,"column_end":30}},{"value":"/ let mut zip = zip::ZipWriter::new(std::io::Cursor::new(&mut buf[..]));","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":79428,"byte_end":79502,"line_start":52,"line_end":52,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":79503,"byte_end":79506,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ let options = zip::write::FileOptions::default().compression_method(zip::CompressionMethod::Stored);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":79507,"byte_end":79611,"line_start":54,"line_end":54,"column_start":1,"column_end":105}},{"value":"/ zip.start_file(\"hello_world.txt\", options)?;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":79612,"byte_end":79660,"line_start":55,"line_end":55,"column_start":1,"column_end":49}},{"value":"/ zip.write(b\"Hello, World!\")?;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":79661,"byte_end":79694,"line_start":56,"line_end":56,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":79695,"byte_end":79698,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ // Apply the changes you've made.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":79699,"byte_end":79736,"line_start":58,"line_end":58,"column_start":1,"column_end":38}},{"value":"/ // Dropping the `ZipWriter` will have the same effect, but may silently fail","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":79737,"byte_end":79817,"line_start":59,"line_end":59,"column_start":1,"column_end":81}},{"value":"/ zip.finish()?;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":79818,"byte_end":79836,"line_start":60,"line_end":60,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":79837,"byte_end":79840,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":79841,"byte_end":79853,"line_start":62,"line_end":62,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":79854,"byte_end":79861,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/ # doit().unwrap();","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":79862,"byte_end":79884,"line_start":64,"line_end":64,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":79885,"byte_end":79892,"line_start":65,"line_end":65,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":704},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":80454,"byte_end":80465,"line_start":92,"line_end":92,"column_start":12,"column_end":23},"name":"FileOptions","qualname":"::write::FileOptions","value":"FileOptions {  }","parent":null,"children":[{"krate":0,"index":705},{"krate":0,"index":706},{"krate":0,"index":707},{"krate":0,"index":708}],"decl_id":null,"docs":" Metadata for a file to be written\n","sig":null,"attributes":[{"value":"/ Metadata for a file to be written","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":80382,"byte_end":80419,"line_start":90,"line_end":90,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":467},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":80673,"byte_end":80680,"line_start":101,"line_end":101,"column_start":12,"column_end":19},"name":"default","qualname":"<FileOptions>::default","value":"pub fn default() -> FileOptions","parent":null,"children":[],"decl_id":null,"docs":" Construct a new FileOptions object\n","sig":null,"attributes":[{"value":"/ Construct a new FileOptions object","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":80623,"byte_end":80661,"line_start":100,"line_end":100,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":468},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":81694,"byte_end":81712,"line_start":128,"line_end":128,"column_start":12,"column_end":30},"name":"compression_method","qualname":"<FileOptions>::compression_method","value":"pub fn compression_method(Self, CompressionMethod) -> FileOptions","parent":null,"children":[],"decl_id":null,"docs":" Set the compression method for the new file","sig":null,"attributes":[{"value":"/ Set the compression method for the new file","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":81468,"byte_end":81515,"line_start":124,"line_end":124,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":81520,"byte_end":81523,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ The default is `CompressionMethod::Deflated`. If the deflate compression feature is","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":81528,"byte_end":81615,"line_start":126,"line_end":126,"column_start":5,"column_end":92}},{"value":"/ disabled, `CompressionMethod::Stored` becomes the default.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":81620,"byte_end":81682,"line_start":127,"line_end":127,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":469},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":81995,"byte_end":82013,"line_start":137,"line_end":137,"column_start":12,"column_end":30},"name":"last_modified_time","qualname":"<FileOptions>::last_modified_time","value":"pub fn last_modified_time(Self, DateTime) -> FileOptions","parent":null,"children":[],"decl_id":null,"docs":" Set the last modified time","sig":null,"attributes":[{"value":"/ Set the last modified time","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":81833,"byte_end":81863,"line_start":133,"line_end":133,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":81868,"byte_end":81871,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ The default is the current timestamp if the 'time' feature is enabled, and 1980-01-01","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":81876,"byte_end":81965,"line_start":135,"line_end":135,"column_start":5,"column_end":94}},{"value":"/ otherwise","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":81970,"byte_end":81983,"line_start":136,"line_end":136,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":470},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":82391,"byte_end":82407,"line_start":147,"line_end":147,"column_start":12,"column_end":28},"name":"unix_permissions","qualname":"<FileOptions>::unix_permissions","value":"pub fn unix_permissions(Self, u32) -> FileOptions","parent":null,"children":[],"decl_id":null,"docs":" Set the permissions for the new file.","sig":null,"attributes":[{"value":"/ Set the permissions for the new file.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":82129,"byte_end":82170,"line_start":142,"line_end":142,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":82175,"byte_end":82178,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ The format is represented with unix-style permissions.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":82183,"byte_end":82241,"line_start":144,"line_end":144,"column_start":5,"column_end":63}},{"value":"/ The default is `0o644`, which represents `rw-r--r--` for files,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":82246,"byte_end":82313,"line_start":145,"line_end":145,"column_start":5,"column_end":72}},{"value":"/ and `0o755`, which represents `rwxr-xr-x` for directories","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":82318,"byte_end":82379,"line_start":146,"line_end":146,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":471},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":82855,"byte_end":82865,"line_start":157,"line_end":157,"column_start":12,"column_end":22},"name":"large_file","qualname":"<FileOptions>::large_file","value":"pub fn large_file(Self, bool) -> FileOptions","parent":null,"children":[],"decl_id":null,"docs":" Set whether the new file's compressed and uncompressed size is less than 4 GiB.","sig":null,"attributes":[{"value":"/ Set whether the new file's compressed and uncompressed size is less than 4 GiB.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":82517,"byte_end":82600,"line_start":152,"line_end":152,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":82605,"byte_end":82608,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ If set to `false` and the file exceeds the limit, an I/O error is thrown. If set to `true`,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":82613,"byte_end":82708,"line_start":154,"line_end":154,"column_start":5,"column_end":100}},{"value":"/ readers will require ZIP64 support and if the file does not exceed the limit, 20 B are","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":82713,"byte_end":82803,"line_start":155,"line_end":155,"column_start":5,"column_end":95}},{"value":"/ wasted. The default is `false`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":82808,"byte_end":82843,"line_start":156,"line_end":156,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":482},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":85068,"byte_end":85078,"line_start":225,"line_end":225,"column_start":12,"column_end":22},"name":"new_append","qualname":"<ZipWriter<A>>::new_append","value":"pub fn new_append(A) -> ZipResult<ZipWriter<A>>","parent":null,"children":[],"decl_id":null,"docs":" Initializes the archive from an existing ZIP archive, making it ready for append.\n","sig":null,"attributes":[{"value":"/ Initializes the archive from an existing ZIP archive, making it ready for append.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":84971,"byte_end":85056,"line_start":224,"line_end":224,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":486},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":86703,"byte_end":86706,"line_start":266,"line_end":266,"column_start":12,"column_end":15},"name":"new","qualname":"<ZipWriter<W>>::new","value":"pub fn new(W) -> ZipWriter<W>","parent":null,"children":[],"decl_id":null,"docs":" Initializes the archive.","sig":null,"attributes":[{"value":"/ Initializes the archive.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":86559,"byte_end":86587,"line_start":263,"line_end":263,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":86592,"byte_end":86595,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ Before writing to this object, the [`ZipWriter::start_file`] function should be called.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":86600,"byte_end":86691,"line_start":265,"line_end":265,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":487},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":87138,"byte_end":87149,"line_start":280,"line_end":280,"column_start":12,"column_end":23},"name":"set_comment","qualname":"<ZipWriter<W>>::set_comment","value":"pub fn set_comment<S>(&mut Self, S) where S: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" Set ZIP archive comment.\n","sig":null,"attributes":[{"value":"/ Set ZIP archive comment.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":87098,"byte_end":87126,"line_start":279,"line_end":279,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":489},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":87441,"byte_end":87456,"line_start":291,"line_end":291,"column_start":12,"column_end":27},"name":"set_raw_comment","qualname":"<ZipWriter<W>>::set_raw_comment","value":"pub fn set_raw_comment(&mut Self, Vec<u8>)","parent":null,"children":[],"decl_id":null,"docs":" Set ZIP archive comment.","sig":null,"attributes":[{"value":"/ Set ZIP archive comment.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":87280,"byte_end":87308,"line_start":287,"line_end":287,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":87313,"byte_end":87316,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ This sets the raw bytes of the comment. The comment","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":87321,"byte_end":87376,"line_start":289,"line_end":289,"column_start":5,"column_end":60}},{"value":"/ is typically expected to be encoded in UTF-8","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":87381,"byte_end":87429,"line_start":290,"line_end":290,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":494},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":90615,"byte_end":90625,"line_start":384,"line_end":384,"column_start":12,"column_end":22},"name":"start_file","qualname":"<ZipWriter<W>>::start_file","value":"pub fn start_file<S>(&mut Self, S, FileOptions) -> ZipResult<()> where\nS: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" Create a file in the archive and start writing its' contents.","sig":null,"attributes":[{"value":"/ Create a file in the archive and start writing its' contents.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":90434,"byte_end":90499,"line_start":381,"line_end":381,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":90504,"byte_end":90507,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ The data should be written using the [`io::Write`] implementation on this [`ZipWriter`]","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":90512,"byte_end":90603,"line_start":383,"line_end":383,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":496},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":91448,"byte_end":91468,"line_start":406,"line_end":406,"column_start":12,"column_end":32},"name":"start_file_from_path","qualname":"<ZipWriter<W>>::start_file_from_path","value":"pub fn start_file_from_path(&mut Self, &std::path::Path, FileOptions)\n-> ZipResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Starts a file, taking a Path as argument.","sig":null,"attributes":[{"value":"/ Starts a file, taking a Path as argument.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":91063,"byte_end":91108,"line_start":398,"line_end":398,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":91113,"byte_end":91116,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ This function ensures that the '/' path separator is used. It also ignores all non 'Normal'","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":91121,"byte_end":91216,"line_start":400,"line_end":400,"column_start":5,"column_end":100}},{"value":"/ Components, such as a starting '/' or '..' and '.'.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":91221,"byte_end":91276,"line_start":401,"line_end":401,"column_start":5,"column_end":60}},{"value":"deprecated(since = \"0.5.7\", note =\n\"by stripping `..`s from the path, the meaning of paths can change. Use `start_file` instead.\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":91281,"byte_end":91436,"line_start":402,"line_end":405,"column_start":5,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":497},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":91912,"byte_end":91930,"line_start":419,"line_end":419,"column_start":12,"column_end":30},"name":"start_file_aligned","qualname":"<ZipWriter<W>>::start_file_aligned","value":"pub fn start_file_aligned<S>(&mut Self, S, FileOptions, u16)\n-> Result<u64, ZipError> where S: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" Create an aligned file in the archive and start writing its' contents.","sig":null,"attributes":[{"value":"/ Create an aligned file in the archive and start writing its' contents.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":91642,"byte_end":91716,"line_start":414,"line_end":414,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":91721,"byte_end":91724,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ Returns the number of padding bytes required to align the file.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":91729,"byte_end":91796,"line_start":416,"line_end":416,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":91801,"byte_end":91804,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ The data should be written using the [`io::Write`] implementation on this [`ZipWriter`]","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":91809,"byte_end":91900,"line_start":418,"line_end":418,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":499},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":95761,"byte_end":95787,"line_start":506,"line_end":506,"column_start":12,"column_end":38},"name":"start_file_with_extra_data","qualname":"<ZipWriter<W>>::start_file_with_extra_data","value":"pub fn start_file_with_extra_data<S>(&mut Self, S, FileOptions)\n-> ZipResult<u64> where S: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" Create a file in the archive and start writing its extra data first.","sig":null,"attributes":[{"value":"/ Create a file in the archive and start writing its extra data first.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":92802,"byte_end":92874,"line_start":443,"line_end":443,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":92879,"byte_end":92882,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ Finish writing extra data and start writing file data with [`ZipWriter::end_extra_data`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":92887,"byte_end":92980,"line_start":445,"line_end":445,"column_start":5,"column_end":98}},{"value":"/ Optionally, distinguish local from central extra data with","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":92985,"byte_end":93047,"line_start":446,"line_end":446,"column_start":5,"column_end":67}},{"value":"/ [`ZipWriter::end_local_start_central_extra_data`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":93052,"byte_end":93106,"line_start":447,"line_end":447,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":93111,"byte_end":93114,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ Returns the preliminary starting offset of the file data without any extra data allowing to","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":93119,"byte_end":93214,"line_start":449,"line_end":449,"column_start":5,"column_end":100}},{"value":"/ align the file data by calculating a pad length to be prepended as part of the extra data.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":93219,"byte_end":93313,"line_start":450,"line_end":450,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":93318,"byte_end":93321,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ The data should be written using the [`io::Write`] implementation on this [`ZipWriter`]","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":93326,"byte_end":93417,"line_start":452,"line_end":452,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":93422,"byte_end":93425,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":93430,"byte_end":93437,"line_start":454,"line_end":454,"column_start":5,"column_end":12}},{"value":"/ use byteorder::{LittleEndian, WriteBytesExt};","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":93442,"byte_end":93491,"line_start":455,"line_end":455,"column_start":5,"column_end":54}},{"value":"/ use zip::{ZipArchive, ZipWriter, result::ZipResult};","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":93496,"byte_end":93552,"line_start":456,"line_end":456,"column_start":5,"column_end":61}},{"value":"/ use zip::{write::FileOptions, CompressionMethod};","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":93557,"byte_end":93610,"line_start":457,"line_end":457,"column_start":5,"column_end":58}},{"value":"/ use std::io::{Write, Cursor};","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":93615,"byte_end":93648,"line_start":458,"line_end":458,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":93653,"byte_end":93656,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ # fn main() -> ZipResult<()> {","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":93661,"byte_end":93695,"line_start":460,"line_end":460,"column_start":5,"column_end":39}},{"value":"/ let mut archive = Cursor::new(Vec::new());","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":93700,"byte_end":93746,"line_start":461,"line_end":461,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":93751,"byte_end":93754,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":93759,"byte_end":93764,"line_start":463,"line_end":463,"column_start":5,"column_end":10}},{"value":"/     let mut zip = ZipWriter::new(&mut archive);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":93769,"byte_end":93820,"line_start":464,"line_end":464,"column_start":5,"column_end":56}},{"value":"/     let options = FileOptions::default()","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":93825,"byte_end":93869,"line_start":465,"line_end":465,"column_start":5,"column_end":49}},{"value":"/         .compression_method(CompressionMethod::Stored);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":93874,"byte_end":93933,"line_start":466,"line_end":466,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":93938,"byte_end":93941,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/     zip.start_file_with_extra_data(\"identical_extra_data.txt\", options)?;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":93946,"byte_end":94023,"line_start":468,"line_end":468,"column_start":5,"column_end":82}},{"value":"/     let extra_data = b\"local and central extra data\";","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":94028,"byte_end":94085,"line_start":469,"line_end":469,"column_start":5,"column_end":62}},{"value":"/     zip.write_u16::<LittleEndian>(0xbeef)?;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":94090,"byte_end":94137,"line_start":470,"line_end":470,"column_start":5,"column_end":52}},{"value":"/     zip.write_u16::<LittleEndian>(extra_data.len() as u16)?;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":94142,"byte_end":94206,"line_start":471,"line_end":471,"column_start":5,"column_end":69}},{"value":"/     zip.write_all(extra_data)?;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":94211,"byte_end":94246,"line_start":472,"line_end":472,"column_start":5,"column_end":40}},{"value":"/     zip.end_extra_data()?;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":94251,"byte_end":94281,"line_start":473,"line_end":473,"column_start":5,"column_end":35}},{"value":"/     zip.write_all(b\"file data\")?;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":94286,"byte_end":94323,"line_start":474,"line_end":474,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":94328,"byte_end":94331,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/     let data_start = zip.start_file_with_extra_data(\"different_extra_data.txt\", options)?;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":94336,"byte_end":94430,"line_start":476,"line_end":476,"column_start":5,"column_end":99}},{"value":"/     let extra_data = b\"local extra data\";","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":94435,"byte_end":94480,"line_start":477,"line_end":477,"column_start":5,"column_end":50}},{"value":"/     zip.write_u16::<LittleEndian>(0xbeef)?;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":94485,"byte_end":94532,"line_start":478,"line_end":478,"column_start":5,"column_end":52}},{"value":"/     zip.write_u16::<LittleEndian>(extra_data.len() as u16)?;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":94537,"byte_end":94601,"line_start":479,"line_end":479,"column_start":5,"column_end":69}},{"value":"/     zip.write_all(extra_data)?;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":94606,"byte_end":94641,"line_start":480,"line_end":480,"column_start":5,"column_end":40}},{"value":"/     let data_start = data_start as usize + 4 + extra_data.len() + 4;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":94646,"byte_end":94718,"line_start":481,"line_end":481,"column_start":5,"column_end":77}},{"value":"/     let align = 64;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":94723,"byte_end":94746,"line_start":482,"line_end":482,"column_start":5,"column_end":28}},{"value":"/     let pad_length = (align - data_start % align) % align;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":94751,"byte_end":94813,"line_start":483,"line_end":483,"column_start":5,"column_end":67}},{"value":"/     assert_eq!(pad_length, 19);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":94818,"byte_end":94853,"line_start":484,"line_end":484,"column_start":5,"column_end":40}},{"value":"/     zip.write_u16::<LittleEndian>(0xdead)?;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":94858,"byte_end":94905,"line_start":485,"line_end":485,"column_start":5,"column_end":52}},{"value":"/     zip.write_u16::<LittleEndian>(pad_length as u16)?;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":94910,"byte_end":94968,"line_start":486,"line_end":486,"column_start":5,"column_end":63}},{"value":"/     zip.write_all(&vec![0; pad_length])?;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":94973,"byte_end":95018,"line_start":487,"line_end":487,"column_start":5,"column_end":50}},{"value":"/     let data_start = zip.end_local_start_central_extra_data()?;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":95023,"byte_end":95090,"line_start":488,"line_end":488,"column_start":5,"column_end":72}},{"value":"/     assert_eq!(data_start as usize % align, 0);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":95095,"byte_end":95146,"line_start":489,"line_end":489,"column_start":5,"column_end":56}},{"value":"/     let extra_data = b\"central extra data\";","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":95151,"byte_end":95198,"line_start":490,"line_end":490,"column_start":5,"column_end":52}},{"value":"/     zip.write_u16::<LittleEndian>(0xbeef)?;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":95203,"byte_end":95250,"line_start":491,"line_end":491,"column_start":5,"column_end":52}},{"value":"/     zip.write_u16::<LittleEndian>(extra_data.len() as u16)?;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":95255,"byte_end":95319,"line_start":492,"line_end":492,"column_start":5,"column_end":69}},{"value":"/     zip.write_all(extra_data)?;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":95324,"byte_end":95359,"line_start":493,"line_end":493,"column_start":5,"column_end":40}},{"value":"/     zip.end_extra_data()?;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":95364,"byte_end":95394,"line_start":494,"line_end":494,"column_start":5,"column_end":35}},{"value":"/     zip.write_all(b\"file data\")?;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":95399,"byte_end":95436,"line_start":495,"line_end":495,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":95441,"byte_end":95444,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/     zip.finish()?;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":95449,"byte_end":95471,"line_start":497,"line_end":497,"column_start":5,"column_end":27}},{"value":"/ }","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":95476,"byte_end":95481,"line_start":498,"line_end":498,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":95486,"byte_end":95489,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ let mut zip = ZipArchive::new(archive)?;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":95494,"byte_end":95538,"line_start":500,"line_end":500,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(&zip.by_index(0)?.extra_data()[4..], b\"local and central extra data\");","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":95543,"byte_end":95628,"line_start":501,"line_end":501,"column_start":5,"column_end":90}},{"value":"/ assert_eq!(&zip.by_index(1)?.extra_data()[4..], b\"central extra data\");","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":95633,"byte_end":95708,"line_start":502,"line_end":502,"column_start":5,"column_end":80}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":95713,"byte_end":95725,"line_start":503,"line_end":503,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":95730,"byte_end":95737,"line_start":504,"line_end":504,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":95742,"byte_end":95749,"line_start":505,"line_end":505,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":501},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":96452,"byte_end":96486,"line_start":527,"line_end":527,"column_start":12,"column_end":46},"name":"end_local_start_central_extra_data","qualname":"<ZipWriter<W>>::end_local_start_central_extra_data","value":"pub fn end_local_start_central_extra_data(&mut Self) -> ZipResult<u64>","parent":null,"children":[],"decl_id":null,"docs":" End local and start central extra data. Requires [`ZipWriter::start_file_with_extra_data`].","sig":null,"attributes":[{"value":"/ End local and start central extra data. Requires [`ZipWriter::start_file_with_extra_data`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":96277,"byte_end":96372,"line_start":524,"line_end":524,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":96377,"byte_end":96380,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ Returns the final starting offset of the file data.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":96385,"byte_end":96440,"line_start":526,"line_end":526,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":502},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":96933,"byte_end":96947,"line_start":538,"line_end":538,"column_start":12,"column_end":26},"name":"end_extra_data","qualname":"<ZipWriter<W>>::end_extra_data","value":"pub fn end_extra_data(&mut Self) -> ZipResult<u64>","parent":null,"children":[],"decl_id":null,"docs":" End extra data and start file data. Requires [`ZipWriter::start_file_with_extra_data`].","sig":null,"attributes":[{"value":"/ End extra data and start file data. Requires [`ZipWriter::start_file_with_extra_data`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":96762,"byte_end":96853,"line_start":535,"line_end":535,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":96858,"byte_end":96861,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ Returns the final starting offset of the file data.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":96866,"byte_end":96921,"line_start":537,"line_end":537,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":503},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":99374,"byte_end":99394,"line_start":602,"line_end":602,"column_start":12,"column_end":32},"name":"raw_copy_file_rename","qualname":"<ZipWriter<W>>::raw_copy_file_rename","value":"pub fn raw_copy_file_rename<S>(&mut Self, ZipFile, S) -> ZipResult<()> where\nS: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" Add a new file using the already compressed data from a ZIP file being read and renames it, this\n allows faster copies of the `ZipFile` since there is no need to decompress and compress it again.\n Any `ZipFile` metadata is copied and not checked, for example the file CRC.\n ```no_run\n use std::fs::File;\n use std::io::{Read, Seek, Write};\n use zip::{ZipArchive, ZipWriter};","sig":null,"attributes":[{"value":"/ Add a new file using the already compressed data from a ZIP file being read and renames it, this","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":98399,"byte_end":98499,"line_start":576,"line_end":576,"column_start":5,"column_end":105}},{"value":"/ allows faster copies of the `ZipFile` since there is no need to decompress and compress it again.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":98504,"byte_end":98605,"line_start":577,"line_end":577,"column_start":5,"column_end":106}},{"value":"/ Any `ZipFile` metadata is copied and not checked, for example the file CRC.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":98610,"byte_end":98689,"line_start":578,"line_end":578,"column_start":5,"column_end":84}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":98695,"byte_end":98708,"line_start":580,"line_end":580,"column_start":5,"column_end":18}},{"value":"/ use std::fs::File;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":98713,"byte_end":98735,"line_start":581,"line_end":581,"column_start":5,"column_end":27}},{"value":"/ use std::io::{Read, Seek, Write};","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":98740,"byte_end":98777,"line_start":582,"line_end":582,"column_start":5,"column_end":42}},{"value":"/ use zip::{ZipArchive, ZipWriter};","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":98782,"byte_end":98819,"line_start":583,"line_end":583,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":98824,"byte_end":98827,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ fn copy_rename<R, W>(","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":98832,"byte_end":98857,"line_start":585,"line_end":585,"column_start":5,"column_end":30}},{"value":"/     src: &mut ZipArchive<R>,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":98862,"byte_end":98894,"line_start":586,"line_end":586,"column_start":5,"column_end":37}},{"value":"/     dst: &mut ZipWriter<W>,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":98899,"byte_end":98930,"line_start":587,"line_end":587,"column_start":5,"column_end":36}},{"value":"/ ) -> zip::result::ZipResult<()>","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":98935,"byte_end":98970,"line_start":588,"line_end":588,"column_start":5,"column_end":40}},{"value":"/ where","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":98975,"byte_end":98984,"line_start":589,"line_end":589,"column_start":5,"column_end":14}},{"value":"/     R: Read + Seek,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":98989,"byte_end":99012,"line_start":590,"line_end":590,"column_start":5,"column_end":28}},{"value":"/     W: Write + Seek,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":99017,"byte_end":99041,"line_start":591,"line_end":591,"column_start":5,"column_end":29}},{"value":"/ {","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":99046,"byte_end":99051,"line_start":592,"line_end":592,"column_start":5,"column_end":10}},{"value":"/     // Retrieve file entry by name","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":99056,"byte_end":99094,"line_start":593,"line_end":593,"column_start":5,"column_end":43}},{"value":"/     let file = src.by_name(\"src_file.txt\")?;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":99099,"byte_end":99147,"line_start":594,"line_end":594,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":99152,"byte_end":99155,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/     // Copy and rename the previously obtained file entry to the destination zip archive","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":99160,"byte_end":99252,"line_start":596,"line_end":596,"column_start":5,"column_end":97}},{"value":"/     dst.raw_copy_file_rename(file, \"new_name.txt\")?;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":99257,"byte_end":99313,"line_start":597,"line_end":597,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":99318,"byte_end":99321,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":99326,"byte_end":99340,"line_start":599,"line_end":599,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":99345,"byte_end":99350,"line_start":600,"line_end":600,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":99355,"byte_end":99362,"line_start":601,"line_end":601,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":505},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":101030,"byte_end":101043,"line_start":651,"line_end":651,"column_start":12,"column_end":25},"name":"raw_copy_file","qualname":"<ZipWriter<W>>::raw_copy_file","value":"pub fn raw_copy_file(&mut Self, ZipFile) -> ZipResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Add a new file using the already compressed data from a ZIP file being read, this allows faster\n copies of the `ZipFile` since there is no need to decompress and compress it again. Any `ZipFile`\n metadata is copied and not checked, for example the file CRC.","sig":null,"attributes":[{"value":"/ Add a new file using the already compressed data from a ZIP file being read, this allows faster","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":100139,"byte_end":100238,"line_start":628,"line_end":628,"column_start":5,"column_end":104}},{"value":"/ copies of the `ZipFile` since there is no need to decompress and compress it again. Any `ZipFile`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":100243,"byte_end":100344,"line_start":629,"line_end":629,"column_start":5,"column_end":106}},{"value":"/ metadata is copied and not checked, for example the file CRC.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":100349,"byte_end":100414,"line_start":630,"line_end":630,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":100419,"byte_end":100422,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":100427,"byte_end":100440,"line_start":632,"line_end":632,"column_start":5,"column_end":18}},{"value":"/ use std::fs::File;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":100445,"byte_end":100467,"line_start":633,"line_end":633,"column_start":5,"column_end":27}},{"value":"/ use std::io::{Read, Seek, Write};","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":100472,"byte_end":100509,"line_start":634,"line_end":634,"column_start":5,"column_end":42}},{"value":"/ use zip::{ZipArchive, ZipWriter};","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":100514,"byte_end":100551,"line_start":635,"line_end":635,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":100556,"byte_end":100559,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ fn copy<R, W>(src: &mut ZipArchive<R>, dst: &mut ZipWriter<W>) -> zip::result::ZipResult<()>","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":100564,"byte_end":100660,"line_start":637,"line_end":637,"column_start":5,"column_end":101}},{"value":"/ where","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":100665,"byte_end":100674,"line_start":638,"line_end":638,"column_start":5,"column_end":14}},{"value":"/     R: Read + Seek,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":100679,"byte_end":100702,"line_start":639,"line_end":639,"column_start":5,"column_end":28}},{"value":"/     W: Write + Seek,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":100707,"byte_end":100731,"line_start":640,"line_end":640,"column_start":5,"column_end":29}},{"value":"/ {","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":100736,"byte_end":100741,"line_start":641,"line_end":641,"column_start":5,"column_end":10}},{"value":"/     // Retrieve file entry by name","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":100746,"byte_end":100784,"line_start":642,"line_end":642,"column_start":5,"column_end":43}},{"value":"/     let file = src.by_name(\"src_file.txt\")?;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":100789,"byte_end":100837,"line_start":643,"line_end":643,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":100842,"byte_end":100845,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/     // Copy the previously obtained file entry to the destination zip archive","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":100850,"byte_end":100931,"line_start":645,"line_end":645,"column_start":5,"column_end":86}},{"value":"/     dst.raw_copy_file(file)?;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":100936,"byte_end":100969,"line_start":646,"line_end":646,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":100974,"byte_end":100977,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":100982,"byte_end":100996,"line_start":648,"line_end":648,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":101001,"byte_end":101006,"line_start":649,"line_end":649,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":101011,"byte_end":101018,"line_start":650,"line_end":650,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":506},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":101288,"byte_end":101301,"line_start":659,"line_end":659,"column_start":12,"column_end":25},"name":"add_directory","qualname":"<ZipWriter<W>>::add_directory","value":"pub fn add_directory<S>(&mut Self, S, FileOptions) -> ZipResult<()> where\nS: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" Add a directory entry.","sig":null,"attributes":[{"value":"/ Add a directory entry.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":101189,"byte_end":101215,"line_start":656,"line_end":656,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":101220,"byte_end":101223,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ You can't write data to the file afterwards.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":101228,"byte_end":101276,"line_start":658,"line_end":658,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":508},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":102437,"byte_end":102460,"line_start":689,"line_end":689,"column_start":12,"column_end":35},"name":"add_directory_from_path","qualname":"<ZipWriter<W>>::add_directory_from_path","value":"pub fn add_directory_from_path(&mut Self, &std::path::Path, FileOptions)\n-> ZipResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Add a directory entry, taking a Path as argument.","sig":null,"attributes":[{"value":"/ Add a directory entry, taking a Path as argument.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":102041,"byte_end":102094,"line_start":681,"line_end":681,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":102099,"byte_end":102102,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ This function ensures that the '/' path seperator is used. It also ignores all non 'Normal'","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":102107,"byte_end":102202,"line_start":683,"line_end":683,"column_start":5,"column_end":100}},{"value":"/ Components, such as a starting '/' or '..' and '.'.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":102207,"byte_end":102262,"line_start":684,"line_end":684,"column_start":5,"column_end":60}},{"value":"deprecated(since = \"0.5.7\", note =\n\"by stripping `..`s from the path, the meaning of paths can change. Use `add_directory` instead.\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":102267,"byte_end":102425,"line_start":685,"line_end":688,"column_start":5,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":509},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":102882,"byte_end":102888,"line_start":701,"line_end":701,"column_start":12,"column_end":18},"name":"finish","qualname":"<ZipWriter<W>>::finish","value":"pub fn finish(&mut Self) -> ZipResult<W>","parent":null,"children":[],"decl_id":null,"docs":" Finish the last file and write all other zip-structures","sig":null,"attributes":[{"value":"/ Finish the last file and write all other zip-structures","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":102637,"byte_end":102696,"line_start":697,"line_end":697,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":102701,"byte_end":102704,"line_start":698,"line_end":698,"column_start":5,"column_end":8}},{"value":"/ This will return the writer, but one should normally not append any data to the end of the file.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":102709,"byte_end":102809,"line_start":699,"line_end":699,"column_start":5,"column_end":105}},{"value":"/ Note that the zipfile will also be finished on drop.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":102814,"byte_end":102870,"line_start":700,"line_end":700,"column_start":5,"column_end":61}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\compression.rs","byte_start":1583,"byte_end":1600,"line_start":33,"line_end":33,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\compression.rs","byte_start":3405,"byte_end":3422,"line_start":70,"line_end":70,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":42},{"krate":0,"index":43}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\compression.rs","byte_start":4783,"byte_end":4800,"line_start":115,"line_end":115,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\cp437.rs","byte_start":7268,"byte_end":7271,"line_start":25,"line_end":25,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":57},{"krate":0,"index":58}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\crc32.rs","byte_start":11741,"byte_end":11752,"line_start":15,"line_end":15,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\crc32.rs","byte_start":12201,"byte_end":12212,"line_start":34,"line_end":34,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":15535,"byte_end":15547,"line_start":62,"line_end":62,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":15775,"byte_end":15787,"line_start":71,"line_end":71,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":16483,"byte_end":16496,"line_start":95,"line_end":95,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":185}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":17110,"byte_end":17123,"line_start":113,"line_end":113,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":20866,"byte_end":20876,"line_start":217,"line_end":217,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":203},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":219},{"krate":0,"index":221},{"krate":0,"index":223},{"krate":0,"index":225},{"krate":0,"index":227},{"krate":0,"index":229},{"krate":0,"index":232},{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":37221,"byte_end":37228,"line_start":647,"line_end":647,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":43637,"byte_end":43644,"line_start":838,"line_end":838,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":266}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":43776,"byte_end":43783,"line_start":844,"line_end":844,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":269}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\result.rs","byte_start":53911,"byte_end":53919,"line_start":35,"line_end":35,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":284}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\result.rs","byte_start":54495,"byte_end":54500,"line_start":50,"line_end":50,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":286}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\spec.rs","byte_start":55355,"byte_end":55374,"line_start":22,"line_end":22,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":323},{"krate":0,"index":325},{"krate":0,"index":330}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\spec.rs","byte_start":58805,"byte_end":58836,"line_start":102,"line_end":102,"column_start":6,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":337},{"krate":0,"index":339}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\spec.rs","byte_start":60431,"byte_end":60455,"line_start":142,"line_end":142,"column_start":6,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":351},{"krate":0,"index":353}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\types.rs","byte_start":63401,"byte_end":63407,"line_start":10,"line_end":10,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":357}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\types.rs","byte_start":64464,"byte_end":64472,"line_start":45,"line_end":45,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":360}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\types.rs","byte_start":64746,"byte_end":64754,"line_start":59,"line_end":59,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":371}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\types.rs","byte_start":70464,"byte_end":70475,"line_start":253,"line_end":253,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":374},{"krate":0,"index":377},{"krate":0,"index":378}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":80605,"byte_end":80616,"line_start":99,"line_end":99,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":467},{"krate":0,"index":468},{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":471}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":82978,"byte_end":82989,"line_start":163,"line_end":163,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":473}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":83088,"byte_end":83097,"line_start":169,"line_end":169,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":476},{"krate":0,"index":477}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":84773,"byte_end":84787,"line_start":216,"line_end":216,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":479}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":84952,"byte_end":84961,"line_start":223,"line_end":223,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":482}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":86540,"byte_end":86549,"line_start":262,"line_end":262,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":486},{"krate":0,"index":487},{"krate":0,"index":489},{"krate":0,"index":490},{"krate":0,"index":493},{"krate":0,"index":494},{"krate":0,"index":496},{"krate":0,"index":497},{"krate":0,"index":499},{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":505},{"krate":0,"index":506},{"krate":0,"index":508},{"krate":0,"index":509},{"krate":0,"index":510}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":105472,"byte_end":105481,"line_start":773,"line_end":773,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":513}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":105739,"byte_end":105755,"line_start":783,"line_end":783,"column_start":27,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":516},{"krate":0,"index":517},{"krate":0,"index":518},{"krate":0,"index":519},{"krate":0,"index":520},{"krate":0,"index":521}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\zipcrypto.rs","byte_start":122901,"byte_end":122914,"line_start":15,"line_end":15,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":550},{"krate":0,"index":551},{"krate":0,"index":552},{"krate":0,"index":553},{"krate":0,"index":554},{"krate":0,"index":555}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\zipcrypto.rs","byte_start":124372,"byte_end":124387,"line_start":65,"line_end":65,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":569},{"krate":0,"index":570}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\zipcrypto.rs","byte_start":126934,"byte_end":126954,"line_start":131,"line_end":131,"column_start":42,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":577}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\zipcrypto.rs","byte_start":127412,"byte_end":127432,"line_start":144,"line_end":144,"column_start":24,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":580}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\lib.rs","byte_start":517,"byte_end":521,"line_start":16,"line_end":16,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":82}},{"kind":"Mod","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\lib.rs","byte_start":531,"byte_end":537,"line_start":17,"line_end":17,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":274}},{"kind":"Mod","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\lib.rs","byte_start":568,"byte_end":573,"line_start":20,"line_end":20,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":379}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\compression.rs","byte_start":1583,"byte_end":1600,"line_start":33,"line_end":33,"column_start":6,"column_end":23},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":583},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\compression.rs","byte_start":3405,"byte_end":3422,"line_start":70,"line_end":70,"column_start":6,"column_end":23},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":583},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\compression.rs","byte_start":4783,"byte_end":4800,"line_start":115,"line_end":115,"column_start":23,"column_end":40},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":583},"to":{"krate":2,"index":9609}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\cp437.rs","byte_start":7268,"byte_end":7271,"line_start":25,"line_end":25,"column_start":20,"column_end":23},"kind":{"Impl":{"id":3}},"from":{"krate":5,"index":7089},"to":{"krate":0,"index":47}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\crc32.rs","byte_start":11741,"byte_end":11752,"line_start":15,"line_end":15,"column_start":9,"column_end":20},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":69},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\crc32.rs","byte_start":12201,"byte_end":12212,"line_start":34,"line_end":34,"column_start":24,"column_end":35},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":69},"to":{"krate":1,"index":4628}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":15535,"byte_end":15547,"line_start":62,"line_end":62,"column_start":19,"column_end":31},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":156},"to":{"krate":1,"index":4628}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":15775,"byte_end":15787,"line_start":71,"line_end":71,"column_start":10,"column_end":22},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":156},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":16483,"byte_end":16496,"line_start":95,"line_end":95,"column_start":19,"column_end":32},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":170},"to":{"krate":1,"index":4628}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":17110,"byte_end":17123,"line_start":113,"line_end":113,"column_start":10,"column_end":23},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":170},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":20866,"byte_end":20876,"line_start":217,"line_end":217,"column_start":26,"column_end":36},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":603},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":37221,"byte_end":37228,"line_start":647,"line_end":647,"column_start":10,"column_end":17},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":189},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":43637,"byte_end":43644,"line_start":838,"line_end":838,"column_start":19,"column_end":26},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":189},"to":{"krate":1,"index":4628}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\read.rs","byte_start":43776,"byte_end":43783,"line_start":844,"line_end":844,"column_start":19,"column_end":26},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":189},"to":{"krate":2,"index":3266}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\result.rs","byte_start":53911,"byte_end":53919,"line_start":35,"line_end":35,"column_start":6,"column_end":14},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":623},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\result.rs","byte_start":54495,"byte_end":54500,"line_start":50,"line_end":50,"column_start":29,"column_end":34},"kind":{"Impl":{"id":20}},"from":{"krate":1,"index":4047},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\spec.rs","byte_start":55355,"byte_end":55374,"line_start":22,"line_end":22,"column_start":6,"column_end":25},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":314},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\spec.rs","byte_start":58805,"byte_end":58836,"line_start":102,"line_end":102,"column_start":6,"column_end":37},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":332},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\spec.rs","byte_start":60431,"byte_end":60455,"line_start":142,"line_end":142,"column_start":6,"column_end":30},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":341},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\types.rs","byte_start":63401,"byte_end":63407,"line_start":10,"line_end":10,"column_start":6,"column_end":12},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":646},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\types.rs","byte_start":64464,"byte_end":64472,"line_start":45,"line_end":45,"column_start":34,"column_end":42},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":663},"to":{"krate":2,"index":3002}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\types.rs","byte_start":64746,"byte_end":64754,"line_start":59,"line_end":59,"column_start":6,"column_end":14},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":663},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\types.rs","byte_start":70464,"byte_end":70475,"line_start":253,"line_end":253,"column_start":6,"column_end":17},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":675},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":80605,"byte_end":80616,"line_start":99,"line_end":99,"column_start":6,"column_end":17},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":704},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":82978,"byte_end":82989,"line_start":163,"line_end":163,"column_start":18,"column_end":29},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":704},"to":{"krate":2,"index":3002}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":83088,"byte_end":83097,"line_start":169,"line_end":169,"column_start":37,"column_end":46},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":452},"to":{"krate":1,"index":4685}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":84773,"byte_end":84787,"line_start":216,"line_end":216,"column_start":6,"column_end":20},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":698},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":84952,"byte_end":84961,"line_start":223,"line_end":223,"column_start":34,"column_end":43},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":452},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":86540,"byte_end":86549,"line_start":262,"line_end":262,"column_start":27,"column_end":36},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":452},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":105472,"byte_end":105481,"line_start":773,"line_end":773,"column_start":36,"column_end":45},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":452},"to":{"krate":2,"index":3266}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\write.rs","byte_start":105739,"byte_end":105755,"line_start":783,"line_end":783,"column_start":27,"column_end":43},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":442},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\zipcrypto.rs","byte_start":122901,"byte_end":122914,"line_start":15,"line_end":15,"column_start":6,"column_end":19},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":545},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\zipcrypto.rs","byte_start":124372,"byte_end":124387,"line_start":65,"line_end":65,"column_start":24,"column_end":39},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":556},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\zipcrypto.rs","byte_start":126934,"byte_end":126954,"line_start":131,"line_end":131,"column_start":42,"column_end":62},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":572},"to":{"krate":1,"index":4628}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\zip-0.5.13\\src\\zipcrypto.rs","byte_start":127412,"byte_end":127432,"line_start":144,"line_end":144,"column_start":24,"column_end":44},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":572},"to":{"krate":4294967295,"index":4294967295}}]}